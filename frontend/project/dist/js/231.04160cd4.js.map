{"version":3,"file":"js/231.04160cd4.js","mappings":"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","sources":["webpack://project/./src/views/business/ProductManagement.vue","webpack://project/./src/views/business/ProductManagement.vue?c56c"],"sourcesContent":["<template>\r\n  <div class=\"product-section\">\r\n    <h2><i class=\"el-icon-goods\"></i> 商品管理</h2>\r\n    <div class=\"table-header\">\r\n      <el-input \r\n        v-model=\"productFilter.keyword\" \r\n        placeholder=\"输入商品名称搜索\" \r\n        style=\"width: 300px\"\r\n        clearable\r\n        prefix-icon=\"el-icon-search\"\r\n      />\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddDialog\">新增商品</el-button>\r\n    </div>\r\n    \r\n    <el-table :data=\"filteredProducts\" border style=\"width: 100%\" class=\"data-table\">\r\n      <el-table-column label=\"商品图片\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-image \r\n            v-if=\"scope.row.images && scope.row.images.length > 0\"\r\n            :src=\"scope.row.images[0]\" \r\n            fit=\"cover\" \r\n            style=\"width: 80px; height: 80px; border-radius: 4px;\"\r\n          >\r\n            <template #error>\r\n              <div class=\"image-slot\">\r\n                <i class=\"el-icon-picture-outline\"></i>\r\n              </div>\r\n            </template>\r\n          </el-image>\r\n          <div v-else class=\"no-image\">无图片</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\" />\r\n      <el-table-column prop=\"productId\" label=\"商品ID\" width=\"120\" />\r\n      <!-- 显示分类名称 -->\r\n      <el-table-column label=\"分类\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          {{ getCategoryName(scope.row.categoryId) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"价格\" width=\"120\" align=\"right\">\r\n        <template #default=\"scope\">\r\n          ¥{{ (scope?.row?.price ?? 0).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template #default=\"scope\">\r\n          <div v-if=\"scope?.row\">\r\n            <el-button \r\n              size=\"small\" \r\n              icon=\"el-icon-edit\"\r\n              @click=\"editProduct(scope.row)\"\r\n            >编辑</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              icon=\"el-icon-delete\"\r\n              @click=\"deleteProduct(scope.row.productId)\"\r\n            >删除</el-button>\r\n          </div>\r\n          <span v-else class=\"error-text\">数据异常</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑商品对话框 -->\r\n    <el-dialog v-model=\"productDialogVisible\" :title=\"dialogTitle\" width=\"800px\">\r\n      <el-form :model=\"currentProduct\" label-width=\"100px\">\r\n        <el-form-item label=\"商品名称\" required>\r\n          <el-input v-model=\"currentProduct.productName\" placeholder=\"请输入商品名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" required>\r\n          <el-select \r\n            v-model=\"currentProduct.categoryId\" \r\n            placeholder=\"请选择分类\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-option\r\n              v-for=\"category in categoryOptions\"\r\n              :key=\"category.id\"\r\n              :label=\"category.name\"\r\n              :value=\"category.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" required>\r\n          <el-input-number \r\n            v-model=\"currentProduct.price\" \r\n            :min=\"0\" \r\n            :precision=\"2\" \r\n            :controls=\"false\"\r\n            style=\"width: 200px\"\r\n          />\r\n          <span class=\"input-unit\">元</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"currentProduct.description\" type=\"textarea\" :rows=\"4\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"商品图片\">\r\n          <div class=\"image-upload-container\">\r\n            <div class=\"image-preview-list\">\r\n              <div v-for=\"(image, index) in currentProduct.images\" :key=\"index\" class=\"image-preview-item\">\r\n                <el-image \r\n                  :src=\"image\" \r\n                  fit=\"cover\" \r\n                  class=\"preview-image\"\r\n                />\r\n                <div class=\"image-actions\">\r\n                  <el-button \r\n                    type=\"danger\" \r\n                    icon=\"el-icon-delete\" \r\n                    size=\"small\"\r\n                    circle\r\n                    @click=\"removeImage(index)\"\r\n                    :disabled=\"isEditing\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <el-upload\r\n              action=\"#\"\r\n              :multiple=\"true\"\r\n              :show-file-list=\"false\"\r\n              :auto-upload=\"false\"\r\n              :on-change=\"handleImageChange\"\r\n              :disabled=\"isEditing\"\r\n              class=\"image-upload-btn\"\r\n            >\r\n              <el-button type=\"primary\" icon=\"el-icon-plus\" :disabled=\"isEditing\">添加图片</el-button>\r\n              <div class=\"upload-tip\">支持多图上传（最多5张，单张不超过2MB）</div>\r\n            </el-upload>\r\n          </div>\r\n          <div v-if=\"isEditing\" class=\"info-tip\">编辑模式下不可修改图片</div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"productDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveProduct\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { ElMessage, ElLoading } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\nconst productFilter = ref({ keyword: '' })\r\nconst products = ref([])\r\nconst productDialogVisible = ref(false)\r\nconst currentProduct = ref({\r\n  productName: '',\r\n  categoryId: '',\r\n  price: 0,\r\n  description: '',\r\n  images: [\"\"]\r\n})\r\nconst isEditing = ref(false)\r\nconst merchantId = ref(Number(localStorage.getItem('userId')))\r\n\r\n// 分类选项\r\nconst categoryOptions = ref([\r\n  { id: \"1005000\", name: \"居家\" },\r\n  { id: \"1005002\", name: \"美食\" },\r\n  { id: \"1010000\", name: \"服饰\" },\r\n  { id: \"1011000\", name: \"母婴\" },\r\n  { id: \"1013001\", name: \"个护\" },\r\n  { id: \"1019000\", name: \"严选\" },\r\n  { id: \"1043000\", name: \"数码\" },\r\n  { id: \"109243029\", name: \"运动\" },\r\n  { id: \"19999999\", name: \"杂项\" }\r\n])\r\n\r\nconst filteredProducts = computed(() => {\r\n  return (products.value || [])\r\n    .filter(p => \r\n      (p?.productName?.toLowerCase() || '').includes(\r\n        (productFilter.value.keyword?.toLowerCase() || '')\r\n      )\r\n    )\r\n    .map(p => ({\r\n      ...p,\r\n      price: Number(p.price) || 0\r\n    }))\r\n})\r\n\r\nconst dialogTitle = computed(() => isEditing.value ? '编辑商品' : '新增商品')\r\n\r\n// 根据分类ID获取分类名称\r\nconst getCategoryName = (categoryId) => {\r\n  const category = categoryOptions.value.find(cat => cat.id === categoryId)\r\n  return category ? category.name : categoryId || '未知分类'\r\n}\r\n\r\nconst showAddDialog = () => {\r\n  currentProduct.value = {\r\n    productName: '',\r\n    categoryId: '',\r\n    price: 0,\r\n    description: '',\r\n    images: []\r\n  }\r\n  isEditing.value = false\r\n  productDialogVisible.value = true\r\n}\r\n\r\nconst editProduct = (product) => {\r\n  if (!product?.productId) {\r\n    ElMessage.warning('无效的商品数据')\r\n    return\r\n  }\r\n  currentProduct.value = { \r\n    ...product,\r\n    productId: product.productId\r\n  }\r\n  isEditing.value = true\r\n  productDialogVisible.value = true\r\n}\r\n\r\nconst handleImageChange = (file) => {\r\n  if (!file) return\r\n  // 检查文件大小，限制为2MB\r\n  const maxSize = 2 * 1024 * 1024 // 2MB\r\n  if (file.size > maxSize) {\r\n    ElMessage.error('图片大小不能超过2MB')\r\n    return\r\n  }\r\n  // 检查图片数量，最多5张\r\n  if (currentProduct.value.images.length >= 5) {\r\n    ElMessage.error('最多只能上传5张图片')\r\n    return\r\n  }\r\n  const rawFile = file.raw\r\n  if (rawFile) {\r\n    const reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      currentProduct.value.images.push(e.target.result)\r\n    }\r\n    reader.readAsDataURL(rawFile)\r\n  }\r\n}\r\n\r\nconst removeImage = (index) => {\r\n  currentProduct.value.images.splice(index, 1)\r\n}\r\n\r\nconst saveProduct = async () => {\r\n  if (!currentProduct.value.productName?.trim()) {\r\n    ElMessage.error('商品名称不能为空')\r\n    return\r\n  }\r\n  if (!currentProduct.value.categoryId) {\r\n    ElMessage.error('请选择商品分类')\r\n    return\r\n  }\r\n  if (currentProduct.value.price < 0) {\r\n    ElMessage.error('价格不能为负数')\r\n    return\r\n  }\r\n\r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '保存中...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    if (isEditing.value) {\r\n      // 编辑商品\r\n      const response = await axios.put('http://algorineko.top:8080/api/merchant/product/update', {\r\n        productId: currentProduct.value.productId,\r\n        merchantId: merchantId.value,\r\n        productName: currentProduct.value.productName,\r\n        description: currentProduct.value.description || '',\r\n        price: currentProduct.value.price,\r\n        categoryId: currentProduct.value.categoryId\r\n      })\r\n      \r\n      if (response.data.includes('成功')) {\r\n        // 更新成功后重新加载商品列表\r\n        ElMessage.success('商品更新成功')\r\n        productDialogVisible.value = false\r\n        await loadProducts()\r\n      } else {\r\n        throw new Error(response.data || '商品更新失败')\r\n      }\r\n    } else {\r\n      // 新增商品\r\n      const response = await axios.post('http://algorineko.top:8080/api/merchant/product/add', {\r\n        merchantId: merchantId.value,\r\n        productName: currentProduct.value.productName,\r\n        description: currentProduct.value.description || '',\r\n        price: currentProduct.value.price,\r\n        categoryId: currentProduct.value.categoryId,\r\n        images: currentProduct.value.images.length > 0 \r\n                ? currentProduct.value.images \r\n                : [\"\"]\r\n      })\r\n      if (response.data.includes('成功')) {\r\n        // 新增成功后重新加载商品列表\r\n        ElMessage.success('商品添加成功')\r\n        productDialogVisible.value = false\r\n        await loadProducts()\r\n      } else {\r\n        throw new Error(response.data || '商品添加失败')\r\n      }\r\n    }\r\n  } catch (error) {\r\n    const errorMsg = error.response?.data?.message || error.message || '操作失败'\r\n    ElMessage.error(`操作失败: ${errorMsg}`)\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\n// 删除商品方法\r\nconst deleteProduct = async (productId) => {\r\n  if (!productId) {\r\n    ElMessage.warning('无效的商品ID')\r\n    return\r\n  }\r\n  \r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '删除中...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    const response = await axios.delete(`http://algorineko.top:8080/api/merchant/product/delete?productId=${productId}`)\r\n    \r\n    if (typeof response.data === 'string' && response.data.includes('成功')) {\r\n      const index = products.value.findIndex(p => p.productId === productId)\r\n      if (index !== -1) {\r\n        products.value.splice(index, 1)\r\n      }\r\n      ElMessage.success('商品删除成功')\r\n    } else {\r\n      throw new Error(response.data || '删除失败')\r\n    }\r\n  } catch (error) {\r\n    const errorMsg = error.response?.data?.message || error.message || '删除失败'\r\n    ElMessage.error(`删除失败: ${errorMsg}`)\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\n// 加载商品方法\r\nconst loadProducts = async () => {\r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '加载商品数据...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    const response = await axios.get(`http://algorineko.top:8080/api/merchant/product/list?merchantId=${merchantId.value}`)\r\n    \r\n    if (Array.isArray(response.data)) {\r\n      products.value = response.data.map(item => ({\r\n        productId: item.productId,\r\n        productName: item.productName,\r\n        // 确保分类ID为字符串格式，以便匹配分类选项\r\n        categoryId: String(item.categoryId || ''),\r\n        price: item.price,\r\n        description: item.description,\r\n        images: item.images || []\r\n      }))\r\n    } else {\r\n      throw new Error('返回的数据格式不正确')\r\n    }\r\n  } catch (error) {\r\n    const errorMsg = error.response?.data?.message || error.message || '加载商品失败'\r\n    ElMessage.error(`加载商品失败: ${errorMsg}`)\r\n    // 示例数据使用字符串格式的分类ID\r\n    products.value = [\r\n      {\r\n        productId: 1,\r\n        productName: '示例商品1',\r\n        categoryId: '1005000',\r\n        price: 19.9,\r\n        description: '这是一个示例商品',\r\n        images: []\r\n      }\r\n    ]\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadProducts()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.product-section h2 {\r\n  margin-top: 0;\r\n  margin-bottom: 25px;\r\n  color: #303133;\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n.product-section h2 i {\r\n  margin-right: 12px;\r\n  font-size: 24px;\r\n  color: #409eff;\r\n}\r\n\r\n.table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.data-table {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n}\r\n\r\n.error-text {\r\n  color: #f56c6c;\r\n  font-size: 12px;\r\n  padding: 4px 8px;\r\n}\r\n\r\n.input-unit {\r\n  margin-left: 10px;\r\n  color: #909399;\r\n}\r\n\r\n.image-upload-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.image-preview-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n}\r\n\r\n.image-preview-item {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  border: 1px dashed #dcdfe6;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.image-preview-item:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.image-actions {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n}\r\n\r\n.image-upload-btn {\r\n  width: 120px;\r\n}\r\n\r\n.upload-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.no-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  border: 1px dashed #dcdfe6;\r\n  border-radius: 4px;\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n.image-slot {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #f5f7fa;\r\n  color: #909399;\r\n  font-size: 30px;\r\n}\r\n\r\n.info-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n</style>","import script from \"./ProductManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProductManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProductManagement.vue?vue&type=style&index=0&id=ab8c8c3e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ab8c8c3e\"]])\n\nexport default __exports__"],"names":["productFilter","ref","keyword","products","productDialogVisible","currentProduct","productName","categoryId","price","description","images","isEditing","merchantId","Number","localStorage","getItem","categoryOptions","id","name","filteredProducts","computed","value","filter","p","toLowerCase","includes","map","dialogTitle","getCategoryName","category","find","cat","showAddDialog","editProduct","product","productId","ElMessage","warning","handleImageChange","file","maxSize","size","error","length","rawFile","raw","reader","FileReader","onload","e","push","target","result","readAsDataURL","removeImage","index","splice","saveProduct","async","trim","loadingInstance","ElLoading","service","lock","text","background","response","axios","put","data","Error","success","loadProducts","post","errorMsg","message","close","deleteProduct","delete","findIndex","get","Array","isArray","item","String","onMounted","__exports__"],"sourceRoot":""}