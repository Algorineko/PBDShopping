{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport authService from '../services/auth';\nexport default {\n  data() {\n    return {\n      registerForm: {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        role: ''\n      }\n    };\n  },\n  methods: {\n    async handleRegister() {\n      if (this.registerForm.password !== this.registerForm.confirmPassword) {\n        alert('两次输入的密码不一致');\n        return;\n      }\n      try {\n        const response = await authService.register({\n          username: this.registerForm.username,\n          password: this.registerForm.password,\n          role: this.registerForm.role\n        });\n        console.log('注册成功:', response.data);\n        alert('注册成功，请登录');\n        this.$router.push('/login');\n      } catch (error) {\n        console.error('注册失败:', error);\n        alert('注册失败，请重试');\n      }\n    }\n  }\n};","map":{"version":3,"names":["authService","data","registerForm","username","password","confirmPassword","role","methods","handleRegister","alert","response","register","console","log","$router","push","error"],"sources":["E:\\实验例子\\project\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>用户注册</h2>\r\n    <form @submit.prevent=\"handleRegister\">\r\n      <div class=\"form-group\">\r\n        <label>用户名:</label>\r\n        <input type=\"text\" v-model=\"registerForm.username\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>密码:</label>\r\n        <input type=\"password\" v-model=\"registerForm.password\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>确认密码:</label>\r\n        <input type=\"password\" v-model=\"registerForm.confirmPassword\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>身份:</label>\r\n        <select v-model=\"registerForm.role\" required>\r\n          <option value=\"\">请选择身份</option>\r\n          <option value=\"business\">商家</option>\r\n          <option value=\"buyer\">买家</option>\r\n          <option value=\"admin\">管理员</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">确认注册</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/auth'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      registerForm: {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async handleRegister() {\r\n      if (this.registerForm.password !== this.registerForm.confirmPassword) {\r\n        alert('两次输入的密码不一致')\r\n        return\r\n      }\r\n\r\n      try {\r\n        const response = await authService.register({\r\n          username: this.registerForm.username,\r\n          password: this.registerForm.password,\r\n          role: this.registerForm.role\r\n        })\r\n        console.log('注册成功:', response.data)\r\n        alert('注册成功，请登录')\r\n        this.$router.push('/login')\r\n      } catch (error) {\r\n        console.error('注册失败:', error)\r\n        alert('注册失败，请重试')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n</style>"],"mappings":";AA+BA,OAAOA,WAAU,MAAO,kBAAiB;AAEzC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE,EAAE;QACnBC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACN,YAAY,CAACE,QAAO,KAAM,IAAI,CAACF,YAAY,CAACG,eAAe,EAAE;QACpEI,KAAK,CAAC,YAAY;QAClB;MACF;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMV,WAAW,CAACW,QAAQ,CAAC;UAC1CR,QAAQ,EAAE,IAAI,CAACD,YAAY,CAACC,QAAQ;UACpCC,QAAQ,EAAE,IAAI,CAACF,YAAY,CAACE,QAAQ;UACpCE,IAAI,EAAE,IAAI,CAACJ,YAAY,CAACI;QAC1B,CAAC;QACDM,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,QAAQ,CAACT,IAAI;QAClCQ,KAAK,CAAC,UAAU;QAChB,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,QAAQ;MAC5B,EAAE,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,OAAO,EAAEA,KAAK;QAC5BP,KAAK,CAAC,UAAU;MAClB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}