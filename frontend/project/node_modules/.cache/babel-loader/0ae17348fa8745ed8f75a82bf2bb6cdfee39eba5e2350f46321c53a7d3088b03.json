{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ElMessage } from 'element-plus';\nimport { useCartStore } from '@/stores/cart';\nimport { storeToRefs } from 'pinia';\nimport { ref, computed } from 'vue';\nexport default {\n  __name: 'ShoppingCart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const cartStore = useCartStore();\n    const {\n      items: cartItems,\n      totalPrice,\n      selectedItems\n    } = storeToRefs(cartStore);\n    const selectAll = ref(false);\n    const selectedTotal = computed(() => {\n      return cartItems.value.filter(item => selectedItems.value.has(item.id)).reduce((sum, item) => sum + item.price * item.quantity, 0);\n    });\n    const toggleSelectAll = () => {\n      if (selectAll.value) {\n        cartItems.value.forEach(item => cartStore.toggleSelection(item.id));\n      } else {\n        cartStore.clearSelected();\n      }\n    };\n    const updateQuantity = item => {\n      if (!item?.id) {\n        ElMessage.error('无效的商品数据');\n        return;\n      }\n      if (item.quantity < 1) {\n        cartStore.removeItem(item.id);\n        ElMessage.warning('商品已移除');\n      }\n    };\n    const removeItem = itemId => {\n      if (!itemId) {\n        ElMessage.error('无效操作');\n        return;\n      }\n      cartStore.removeItem(itemId);\n      ElMessage.success('已移除商品');\n    };\n    const createOrder = () => {\n      const selectedProducts = cartItems.value.filter(item => selectedItems.value.has(item.id));\n      if (selectedProducts.length === 0) {\n        ElMessage.warning('请选择要结算的商品');\n        return;\n      }\n      const orderId = `DD${Date.now()}`;\n      const newOrder = {\n        orderId,\n        createTime: new Date().toLocaleString(),\n        items: selectedProducts.map(item => ({\n          productId: item.id,\n          productName: item.name,\n          productImage: item.image,\n          price: item.price,\n          quantity: item.quantity,\n          paid: false,\n          reviewed: false\n        })),\n        status: 'pending',\n        total: selectedTotal.value\n      };\n\n      // 保存到本地存储\n      const orders = JSON.parse(localStorage.getItem('orders') || '[]');\n      orders.push(newOrder);\n      localStorage.setItem('orders', JSON.stringify(orders));\n\n      // 清空已选商品\n      selectedProducts.forEach(item => cartStore.removeItem(item.id));\n      cartStore.clearSelected();\n      ElMessage.success('订单创建成功');\n    };\n    const __returned__ = {\n      cartStore,\n      cartItems,\n      totalPrice,\n      selectedItems,\n      selectAll,\n      selectedTotal,\n      toggleSelectAll,\n      updateQuantity,\n      removeItem,\n      createOrder,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useCartStore() {\n        return useCartStore;\n      },\n      get storeToRefs() {\n        return storeToRefs;\n      },\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ElMessage","useCartStore","storeToRefs","ref","computed","cartStore","items","cartItems","totalPrice","selectedItems","selectAll","selectedTotal","value","filter","item","has","id","reduce","sum","price","quantity","toggleSelectAll","forEach","toggleSelection","clearSelected","updateQuantity","error","removeItem","warning","itemId","success","createOrder","selectedProducts","length","orderId","Date","now","newOrder","createTime","toLocaleString","map","productId","productName","name","productImage","image","paid","reviewed","status","total","orders","JSON","parse","localStorage","getItem","push","setItem","stringify"],"sources":["E:/实验例子/project/src/components/ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shopping-cart\">\r\n    <h2>购物车 ({{ cartItems?.length || 0 }})</h2>\r\n    \r\n    <el-table \r\n      :data=\"cartItems\"\r\n      v-if=\"cartItems?.length > 0\"\r\n      border\r\n      style=\"width: 100%\"\r\n    >\r\n      <!-- 选择列 -->\r\n      <el-table-column width=\"50\">\r\n        <template #header>\r\n          <el-checkbox \r\n            v-model=\"selectAll\"\r\n            @change=\"toggleSelectAll\"\r\n          />\r\n        </template>\r\n        <template #default=\"{ row }\">\r\n          <el-checkbox \r\n            v-model=\"selectedItems\" \r\n            :label=\"row.id\"\r\n            @change=\"cartStore.toggleSelection(row.id)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 商品列 -->\r\n      <el-table-column label=\"商品\" width=\"300\">\r\n        <template #default=\"{ row }\">\r\n          <div class=\"product-info\" v-if=\"row\">\r\n            <router-link :to=\"`/buyer/product/${row.id}`\">\r\n              <el-image \r\n                :src=\"row.image || '/placeholder-product.jpg'\"\r\n                width=\"80\"\r\n                style=\"cursor: pointer\"\r\n              />\r\n            </router-link>\r\n            <router-link \r\n              :to=\"`/buyer/product/${row.id}`\"\r\n              class=\"product-link\"\r\n            >\r\n              {{ row.name || '未知商品' }}\r\n            </router-link>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 单价列 -->\r\n      <el-table-column label=\"单价\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          ¥{{ (row.price || 0).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 数量列 -->\r\n      <el-table-column label=\"数量\" width=\"150\">\r\n        <template #default=\"{ row }\">\r\n          <el-input-number \r\n            v-model=\"row.quantity\"\r\n            :min=\"1\"\r\n            :max=\"99\"\r\n            @change=\"updateQuantity(row)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 操作列 -->\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"removeItem(row?.id)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 空购物车提示 -->\r\n    <el-empty\r\n      v-else\r\n      description=\"您的购物车还是空的，快去选购商品吧！\"\r\n      class=\"empty-tip\"\r\n    />\r\n\r\n    <!-- 结算区域 -->\r\n    <div class=\"checkout\" v-if=\"cartItems?.length > 0\">\r\n      <div class=\"total\">总计：¥{{ selectedTotal.toFixed(2) }}</div>\r\n      <el-button \r\n        type=\"primary\" \r\n        size=\"large\"\r\n        :disabled=\"selectedItems.length === 0\"\r\n        @click=\"createOrder\"\r\n      >\r\n        去结算 ({{ selectedItems.length }})\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\nimport { storeToRefs } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\n\r\nconst cartStore = useCartStore()\r\nconst { items: cartItems, totalPrice, selectedItems } = storeToRefs(cartStore)\r\n\r\nconst selectAll = ref(false)\r\n\r\nconst selectedTotal = computed(() => {\r\n  return cartItems.value\r\n    .filter(item => selectedItems.value.has(item.id))\r\n    .reduce((sum, item) => sum + (item.price * item.quantity), 0)\r\n})\r\n\r\nconst toggleSelectAll = () => {\r\n  if(selectAll.value) {\r\n    cartItems.value.forEach(item => cartStore.toggleSelection(item.id))\r\n  } else {\r\n    cartStore.clearSelected()\r\n  }\r\n}\r\n\r\nconst updateQuantity = (item) => {\r\n  if (!item?.id) {\r\n    ElMessage.error('无效的商品数据')\r\n    return\r\n  }\r\n  if (item.quantity < 1) {\r\n    cartStore.removeItem(item.id)\r\n    ElMessage.warning('商品已移除')\r\n  }\r\n}\r\n\r\nconst removeItem = (itemId) => {\r\n  if (!itemId) {\r\n    ElMessage.error('无效操作')\r\n    return\r\n  }\r\n  cartStore.removeItem(itemId)\r\n  ElMessage.success('已移除商品')\r\n}\r\n\r\nconst createOrder = () => {\r\n  const selectedProducts = cartItems.value.filter(item => \r\n    selectedItems.value.has(item.id)\r\n  )\r\n  \r\n  if(selectedProducts.length === 0) {\r\n    ElMessage.warning('请选择要结算的商品')\r\n    return\r\n  }\r\n\r\n  const orderId = `DD${Date.now()}`\r\n  const newOrder = {\r\n    orderId,\r\n    createTime: new Date().toLocaleString(),\r\n    items: selectedProducts.map(item => ({\r\n      productId: item.id,\r\n      productName: item.name,\r\n      productImage: item.image,\r\n      price: item.price,\r\n      quantity: item.quantity,\r\n      paid: false,\r\n      reviewed: false\r\n    })),\r\n    status: 'pending',\r\n    total: selectedTotal.value\r\n  }\r\n\r\n  // 保存到本地存储\r\n  const orders = JSON.parse(localStorage.getItem('orders') || '[]')\r\n  orders.push(newOrder)\r\n  localStorage.setItem('orders', JSON.stringify(orders))\r\n\r\n  // 清空已选商品\r\n  selectedProducts.forEach(item => cartStore.removeItem(item.id))\r\n  cartStore.clearSelected()\r\n  \r\n  ElMessage.success('订单创建成功')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.product-link {\r\n  color: #606266;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #409eff;\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.checkout {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 30px;\r\n}\r\n\r\n.total {\r\n  font-size: 20px;\r\n  color: #f56c6c;\r\n}\r\n\r\n.empty-tip {\r\n  margin-top: 50px;\r\n  padding: 40px 0;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}