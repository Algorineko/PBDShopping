{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list\"\n};\nconst _hoisted_2 = {\n  class: \"search-bar\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading-section\"\n};\nconst _hoisted_4 = {\n  class: \"category-header\"\n};\nconst _hoisted_5 = {\n  class: \"category-title\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"product-grid\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"image-container\"\n};\nconst _hoisted_9 = {\n  class: \"product-info\"\n};\nconst _hoisted_10 = {\n  class: \"name\"\n};\nconst _hoisted_11 = {\n  class: \"desc\"\n};\nconst _hoisted_12 = {\n  class: \"price-section\"\n};\nconst _hoisted_13 = {\n  class: \"price\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"empty-products\"\n};\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { Search } from '@element-plus/icons-vue';\nimport axios from 'axios';\nexport default {\n  __name: 'ProductList',\n  setup(__props) {\n    const router = useRouter();\n    const categories = ref([]);\n    const searchKeyword = ref('');\n    const loading = ref(true);\n\n    // 加载分类数据\n    const loadCategories = () => {\n      const savedCategories = localStorage.getItem('productCategories');\n      if (savedCategories) {\n        return JSON.parse(savedCategories);\n      }\n\n      // 默认分类数据\n      return [{\n        id: \"1005000\",\n        name: \"居家\"\n      }, {\n        id: \"1005002\",\n        name: \"美食\"\n      }, {\n        id: \"1010000\",\n        name: \"服饰\"\n      }, {\n        id: \"1011000\",\n        name: \"母婴\"\n      }, {\n        id: \"1013001\",\n        name: \"个护\"\n      }, {\n        id: \"1019000\",\n        name: \"严选\"\n      }, {\n        id: \"1043000\",\n        name: \"数码\"\n      }, {\n        id: \"109243029\",\n        name: \"运动\"\n      }, {\n        id: \"19999999\",\n        name: \"杂项\"\n      }];\n    };\n\n    // 获取第一张图片\n    const getFirstImage = images => {\n      return images?.length > 0 ? images[0] : '/placeholder-product.jpg';\n    };\n\n    // 从API获取分类商品\n    const fetchCategoryProducts = async categoryId => {\n      try {\n        const response = await axios.get(`http://algorineko.top:8080/api/merchant/product/category/${categoryId}`);\n\n        // 转换API数据结构以适应前端需求\n        return response.data.map(product => ({\n          id: product.productId,\n          name: product.productName,\n          description: product.description,\n          price: product.price,\n          images: product.images,\n          categoryId: String(product.categoryId) // 确保类型一致\n        }));\n      } catch (error) {\n        console.error(`获取分类 ${categoryId} 商品失败:`, error);\n        return []; // 出错时返回空数组\n      }\n    };\n\n    // 初始化数据\n    const initData = async () => {\n      try {\n        loading.value = true;\n\n        // 加载分类\n        const categoryList = loadCategories();\n\n        // 创建分类映射\n        const categoryMap = new Map();\n\n        // 初始化所有分类\n        categoryList.forEach(category => {\n          categoryMap.set(category.id, {\n            ...category,\n            products: []\n          });\n        });\n\n        // 并发请求所有分类的商品\n        const requests = categoryList.map(category => fetchCategoryProducts(parseInt(category.id)));\n        const results = await Promise.all(requests);\n\n        // 将商品分配到对应分类\n        results.forEach((products, index) => {\n          const categoryId = categoryList[index].id;\n          if (categoryMap.has(categoryId)) {\n            categoryMap.get(categoryId).products = products;\n          }\n        });\n\n        // 确保所有分类都显示\n        categories.value = Array.from(categoryMap.values());\n      } catch (error) {\n        console.error('初始化数据失败:', error);\n        // 可以在这里添加用户提示\n      } finally {\n        loading.value = false;\n      }\n    };\n    const filteredCategories = computed(() => {\n      const keyword = searchKeyword.value.toLowerCase();\n\n      // 没有搜索关键词时显示所有分类\n      if (!keyword) return categories.value;\n\n      // 有搜索关键词时，只显示包含匹配商品的分类\n      return categories.value.map(category => ({\n        ...category,\n        products: category.products.filter(product => (product.name || '').toLowerCase().includes(keyword) || (product.description || '').toLowerCase().includes(keyword))\n      })).filter(category => category.products.length > 0);\n    });\n    const handleSearch = () => {\n      // 搜索逻辑保持不变\n    };\n    const viewDetail = productId => {\n      // 从localStorage获取用户名\n      const username = localStorage.getItem('username') || '';\n      // 使用正确的路由格式：/buyer/:username/product/:id\n      router.push(`/buyer/${username}/product/${productId}`);\n    };\n    onMounted(initData);\n    return (_ctx, _cache) => {\n      const _component_el_icon = _resolveComponent(\"el-icon\");\n      const _component_el_input = _resolveComponent(\"el-input\");\n      const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n      const _component_el_image = _resolveComponent(\"el-image\");\n      const _component_el_empty = _resolveComponent(\"el-empty\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n        modelValue: searchKeyword.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => searchKeyword.value = $event),\n        placeholder: \"请输入商品名称或关键词\",\n        clearable: \"\",\n        onInput: handleSearch,\n        style: {\n          \"max-width\": \"400px\"\n        }\n      }, {\n        prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_unref(Search))]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"modelValue\"])]), loading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n        rows: 6,\n        animated: \"\"\n      })])) : (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 1\n      }, _renderList(filteredCategories.value, category => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          class: \"category-section\",\n          key: category.id\n        }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h2\", _hoisted_5, _toDisplayString(category.name), 1), category.picture ? (_openBlock(), _createBlock(_component_el_image, {\n          key: 0,\n          src: _ctx.formatImageUrl(category.picture),\n          style: {\n            \"width\": \"120px\",\n            \"height\": \"40px\",\n            \"margin-left\": \"15px\"\n          },\n          fit: \"contain\"\n        }, null, 8, [\"src\"])) : _createCommentVNode(\"\", true)]), category.products.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.products, product => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: product.id,\n            class: \"product-card\",\n            onClick: $event => viewDetail(product.id)\n          }, [_createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_image, {\n            src: getFirstImage(product.images),\n            class: \"product-image\",\n            style: {\n              \"width\": \"100%\",\n              \"height\": \"200px\"\n            },\n            fit: \"cover\"\n          }, null, 8, [\"src\"])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h3\", _hoisted_10, _toDisplayString(product.name), 1), _createElementVNode(\"p\", _hoisted_11, _toDisplayString(product.description || '暂无描述'), 1), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, \"¥\" + _toDisplayString(product.price), 1)])])], 8, _hoisted_7);\n        }), 128))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createVNode(_component_el_empty, {\n          description: \"该分类下暂无商品\"\n        })]))]);\n      }), 128))]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","Search","axios","router","categories","searchKeyword","loading","loadCategories","savedCategories","localStorage","getItem","JSON","parse","id","name","getFirstImage","images","length","fetchCategoryProducts","categoryId","response","get","data","map","product","productId","productName","description","price","String","error","console","initData","value","categoryList","categoryMap","Map","forEach","category","set","products","requests","parseInt","results","Promise","all","index","has","Array","from","values","filteredCategories","keyword","toLowerCase","filter","includes","handleSearch","viewDetail","username","push"],"sources":["E:/实验例子/project/src/views/Buyer/ProductList.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-list\">\r\n    <div class=\"search-bar\">\r\n      <el-input\r\n        v-model=\"searchKeyword\"\r\n        placeholder=\"请输入商品名称或关键词\"\r\n        clearable\r\n        @input=\"handleSearch\"\r\n        style=\"max-width: 400px\"\r\n      >\r\n        <template #prefix>\r\n          <el-icon><Search /></el-icon>\r\n        </template>\r\n      </el-input>\r\n    </div>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-section\">\r\n      <el-skeleton :rows=\"6\" animated />\r\n    </div>\r\n\r\n    <!-- 分类区块 -->\r\n    <template v-else>\r\n      <div \r\n        class=\"category-section\" \r\n        v-for=\"category in filteredCategories\" \r\n        :key=\"category.id\"\r\n      >\r\n        <div class=\"category-header\">\r\n          <h2 class=\"category-title\">{{ category.name }}</h2>\r\n          <el-image \r\n            :src=\"formatImageUrl(category.picture)\" \r\n            style=\"width: 120px; height: 40px; margin-left: 15px\"\r\n            fit=\"contain\"\r\n            v-if=\"category.picture\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 商品网格 -->\r\n        <div class=\"product-grid\" v-if=\"category.products.length > 0\">\r\n          <div \r\n            v-for=\"product in category.products\"\r\n            :key=\"product.id\"\r\n            class=\"product-card\"\r\n            @click=\"viewDetail(product.id)\"\r\n          >\r\n            <!-- 商品图片 -->\r\n            <div class=\"image-container\">\r\n              <el-image \r\n                :src=\"getFirstImage(product.images)\" \r\n                class=\"product-image\"\r\n                style=\"width: 100%; height: 200px;\"\r\n                fit=\"cover\"\r\n              />\r\n            </div>\r\n            \r\n            <!-- 商品信息 -->\r\n            <div class=\"product-info\">\r\n              <h3 class=\"name\">{{ product.name }}</h3>\r\n              <p class=\"desc\">{{ product.description || '暂无描述' }}</p>\r\n              <div class=\"price-section\">\r\n                <span class=\"price\">¥{{ product.price }}</span>\r\n                <!-- 已移除库存显示 -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 无商品提示 -->\r\n        <div v-else class=\"empty-products\">\r\n          <el-empty description=\"该分类下暂无商品\" />\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { Search } from '@element-plus/icons-vue'\r\nimport axios from 'axios'\r\n\r\nconst router = useRouter()\r\n\r\nconst categories = ref([])\r\nconst searchKeyword = ref('')\r\nconst loading = ref(true)\r\n\r\n// 加载分类数据\r\nconst loadCategories = () => {\r\n  const savedCategories = localStorage.getItem('productCategories')\r\n  if (savedCategories) {\r\n    return JSON.parse(savedCategories)\r\n  }\r\n  \r\n  // 默认分类数据\r\n  return [\r\n    { id: \"1005000\", name: \"居家\" },\r\n    { id: \"1005002\", name: \"美食\" },\r\n    { id: \"1010000\", name: \"服饰\" },\r\n    { id: \"1011000\", name: \"母婴\" },\r\n    { id: \"1013001\", name: \"个护\" },\r\n    { id: \"1019000\", name: \"严选\" },\r\n    { id: \"1043000\", name: \"数码\" },\r\n    { id: \"109243029\", name: \"运动\" },\r\n    { id: \"19999999\", name: \"杂项\" }\r\n  ]\r\n}\r\n\r\n// 获取第一张图片\r\nconst getFirstImage = (images) => {\r\n  return images?.length > 0 ? images[0] : '/placeholder-product.jpg'\r\n}\r\n\r\n// 从API获取分类商品\r\nconst fetchCategoryProducts = async (categoryId) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://algorineko.top:8080/api/merchant/product/category/${categoryId}`\r\n    )\r\n    \r\n    // 转换API数据结构以适应前端需求\r\n    return response.data.map(product => ({\r\n      id: product.productId,\r\n      name: product.productName,\r\n      description: product.description,\r\n      price: product.price,\r\n      images: product.images,\r\n      categoryId: String(product.categoryId) // 确保类型一致\r\n    }))\r\n  } catch (error) {\r\n    console.error(`获取分类 ${categoryId} 商品失败:`, error)\r\n    return [] // 出错时返回空数组\r\n  }\r\n}\r\n\r\n// 初始化数据\r\nconst initData = async () => {\r\n  try {\r\n    loading.value = true\r\n    \r\n    // 加载分类\r\n    const categoryList = loadCategories()\r\n    \r\n    // 创建分类映射\r\n    const categoryMap = new Map()\r\n    \r\n    // 初始化所有分类\r\n    categoryList.forEach(category => {\r\n      categoryMap.set(category.id, {\r\n        ...category,\r\n        products: []\r\n      })\r\n    })\r\n    \r\n    // 并发请求所有分类的商品\r\n    const requests = categoryList.map(category => \r\n      fetchCategoryProducts(parseInt(category.id))\r\n    )\r\n    \r\n    const results = await Promise.all(requests)\r\n    \r\n    // 将商品分配到对应分类\r\n    results.forEach((products, index) => {\r\n      const categoryId = categoryList[index].id\r\n      if (categoryMap.has(categoryId)) {\r\n        categoryMap.get(categoryId).products = products\r\n      }\r\n    })\r\n    \r\n    // 确保所有分类都显示\r\n    categories.value = Array.from(categoryMap.values())\r\n    \r\n  } catch (error) {\r\n    console.error('初始化数据失败:', error)\r\n    // 可以在这里添加用户提示\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst filteredCategories = computed(() => {\r\n  const keyword = searchKeyword.value.toLowerCase()\r\n  \r\n  // 没有搜索关键词时显示所有分类\r\n  if (!keyword) return categories.value\r\n  \r\n  // 有搜索关键词时，只显示包含匹配商品的分类\r\n  return categories.value\r\n    .map(category => ({\r\n      ...category,\r\n      products: category.products.filter(product => \r\n        (product.name || '').toLowerCase().includes(keyword) ||\r\n        (product.description || '').toLowerCase().includes(keyword)\r\n      )\r\n    }))\r\n    .filter(category => category.products.length > 0)\r\n})\r\n\r\nconst handleSearch = () => {\r\n  // 搜索逻辑保持不变\r\n}\r\n\r\nconst viewDetail = (productId) => {\r\n  // 从localStorage获取用户名\r\n  const username = localStorage.getItem('username') || '';\r\n  // 使用正确的路由格式：/buyer/:username/product/:id\r\n  router.push(`/buyer/${username}/product/${productId}`);\r\n}\r\n\r\nonMounted(initData)\r\n</script>\r\n\r\n<style scoped>\r\n.product-list {\r\n  padding: 20px;\r\n}\r\n\r\n.category-section {\r\n  margin-bottom: 40px;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.product-card {\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.product-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.image-container {\r\n  width: 100%;\r\n  height: 200px;\r\n  background: #f5f7fa;\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n}\r\n\r\n.product-info {\r\n  padding: 15px;\r\n}\r\n\r\n.name {\r\n  font-size: 16px;\r\n  margin-bottom: 8px;\r\n  color: #333;\r\n}\r\n\r\n.desc {\r\n  font-size: 12px;\r\n  color: #999;\r\n  height: 36px;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.price-section {\r\n  margin-top: 12px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.price {\r\n  font-size: 18px;\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.empty-products {\r\n  padding: 40px 0;\r\n  background: #f9fafc;\r\n  border-radius: 8px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.loading-section {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,MAAM,QAAQ,yBAAyB;AAChD,OAAOC,KAAK,MAAM,OAAO;;;;IAEzB,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAE1B,MAAMI,UAAU,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMQ,aAAa,GAAGR,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMS,OAAO,GAAGT,GAAG,CAAC,IAAI,CAAC;;IAEzB;IACA,MAAMU,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;MACjE,IAAIF,eAAe,EAAE;QACnB,OAAOG,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC;MACpC;;MAEA;MACA,OAAO,CACL;QAAEK,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC7B;QAAED,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC7B;QAAED,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC7B;QAAED,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC7B;QAAED,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC7B;QAAED,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC7B;QAAED,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC7B;QAAED,EAAE,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAK,CAAC,EAC/B;QAAED,EAAE,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAK,CAAC,CAC/B;IACH,CAAC;;IAED;IACA,MAAMC,aAAa,GAAIC,MAAM,IAAK;MAChC,OAAOA,MAAM,EAAEC,MAAM,GAAG,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,GAAG,0BAA0B;IACpE,CAAC;;IAED;IACA,MAAME,qBAAqB,GAAG,MAAOC,UAAU,IAAK;MAClD,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAC9B,4DAA4DF,UAAU,EACxE,CAAC;;QAED;QACA,OAAOC,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,OAAO,KAAK;UACnCX,EAAE,EAAEW,OAAO,CAACC,SAAS;UACrBX,IAAI,EAAEU,OAAO,CAACE,WAAW;UACzBC,WAAW,EAAEH,OAAO,CAACG,WAAW;UAChCC,KAAK,EAAEJ,OAAO,CAACI,KAAK;UACpBZ,MAAM,EAAEQ,OAAO,CAACR,MAAM;UACtBG,UAAU,EAAEU,MAAM,CAACL,OAAO,CAACL,UAAU,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQX,UAAU,QAAQ,EAAEW,KAAK,CAAC;QAChD,OAAO,EAAE,EAAC;MACZ;IACF,CAAC;;IAED;IACA,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF1B,OAAO,CAAC2B,KAAK,GAAG,IAAI;;QAEpB;QACA,MAAMC,YAAY,GAAG3B,cAAc,CAAC,CAAC;;QAErC;QACA,MAAM4B,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;;QAE7B;QACAF,YAAY,CAACG,OAAO,CAACC,QAAQ,IAAI;UAC/BH,WAAW,CAACI,GAAG,CAACD,QAAQ,CAACzB,EAAE,EAAE;YAC3B,GAAGyB,QAAQ;YACXE,QAAQ,EAAE;UACZ,CAAC,CAAC;QACJ,CAAC,CAAC;;QAEF;QACA,MAAMC,QAAQ,GAAGP,YAAY,CAACX,GAAG,CAACe,QAAQ,IACxCpB,qBAAqB,CAACwB,QAAQ,CAACJ,QAAQ,CAACzB,EAAE,CAAC,CAC7C,CAAC;QAED,MAAM8B,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;;QAE3C;QACAE,OAAO,CAACN,OAAO,CAAC,CAACG,QAAQ,EAAEM,KAAK,KAAK;UACnC,MAAM3B,UAAU,GAAGe,YAAY,CAACY,KAAK,CAAC,CAACjC,EAAE;UACzC,IAAIsB,WAAW,CAACY,GAAG,CAAC5B,UAAU,CAAC,EAAE;YAC/BgB,WAAW,CAACd,GAAG,CAACF,UAAU,CAAC,CAACqB,QAAQ,GAAGA,QAAQ;UACjD;QACF,CAAC,CAAC;;QAEF;QACApC,UAAU,CAAC6B,KAAK,GAAGe,KAAK,CAACC,IAAI,CAACd,WAAW,CAACe,MAAM,CAAC,CAAC,CAAC;MAErD,CAAC,CAAC,OAAOpB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAChC;MACF,CAAC,SAAS;QACRxB,OAAO,CAAC2B,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;IAED,MAAMkB,kBAAkB,GAAGrD,QAAQ,CAAC,MAAM;MACxC,MAAMsD,OAAO,GAAG/C,aAAa,CAAC4B,KAAK,CAACoB,WAAW,CAAC,CAAC;;MAEjD;MACA,IAAI,CAACD,OAAO,EAAE,OAAOhD,UAAU,CAAC6B,KAAK;;MAErC;MACA,OAAO7B,UAAU,CAAC6B,KAAK,CACpBV,GAAG,CAACe,QAAQ,KAAK;QAChB,GAAGA,QAAQ;QACXE,QAAQ,EAAEF,QAAQ,CAACE,QAAQ,CAACc,MAAM,CAAC9B,OAAO,IACxC,CAACA,OAAO,CAACV,IAAI,IAAI,EAAE,EAAEuC,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,OAAO,CAAC,IACpD,CAAC5B,OAAO,CAACG,WAAW,IAAI,EAAE,EAAE0B,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,OAAO,CAC5D;MACF,CAAC,CAAC,CAAC,CACFE,MAAM,CAAChB,QAAQ,IAAIA,QAAQ,CAACE,QAAQ,CAACvB,MAAM,GAAG,CAAC,CAAC;IACrD,CAAC,CAAC;IAEF,MAAMuC,YAAY,GAAGA,CAAA,KAAM;MACzB;IAAA,CACD;IAED,MAAMC,UAAU,GAAIhC,SAAS,IAAK;MAChC;MACA,MAAMiC,QAAQ,GAAGjD,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;MACvD;MACAP,MAAM,CAACwD,IAAI,CAAC,UAAUD,QAAQ,YAAYjC,SAAS,EAAE,CAAC;IACxD,CAAC;IAED1B,SAAS,CAACiC,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}