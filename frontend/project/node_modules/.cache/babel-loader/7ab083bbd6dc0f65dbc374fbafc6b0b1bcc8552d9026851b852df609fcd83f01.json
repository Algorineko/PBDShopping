{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport authService from '../services/auth';\nexport default {\n  data() {\n    return {\n      loginForm: {\n        userId: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const response = await authService.login(this.loginForm);\n\n        // 根据后端实际返回的字段名调整\n        const token = response.data.token || response.data.accessToken;\n        const userId = response.data.userId || response.data.id;\n        const role = response.data.role || response.data.userType;\n        localStorage.setItem('token', token);\n        localStorage.setItem('userId', userId);\n        localStorage.setItem('role', role);\n        switch (role) {\n          case 'merchant':\n            this.$router.push('/business');\n            break;\n          case 'customer':\n            this.$router.push('/buyer');\n            break;\n          case 'admin':\n            this.$router.push('/admin');\n            break;\n          default:\n            alert('未知用户角色: ' + role);\n        }\n      } catch (error) {\n        console.error('登录错误详情:', error.response);\n        if (error.response?.data?.message) {\n          alert(`登录失败: ${error.response.data.message}`);\n        } else if (error.message.includes('用户ID或密码错误')) {\n          alert('登录失败：用户ID或密码错误');\n        } else {\n          alert(`登录失败: ${error.message}`);\n        }\n      }\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["authService","data","loginForm","userId","password","methods","handleLogin","response","login","token","accessToken","id","role","userType","localStorage","setItem","$router","push","alert","error","console","message","includes","goToRegister"],"sources":["E:\\实验例子\\project\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>用户登录</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div class=\"form-group\">\r\n        <label>用户ID:</label>\r\n        <input type=\"text\" v-model=\"loginForm.userId\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>密码:</label>\r\n        <input type=\"password\" v-model=\"loginForm.password\" required>\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button type=\"submit\">登录</button>\r\n        <button type=\"button\" @click=\"goToRegister\">注册</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/auth'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        userId: '',\r\n        password: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        const response = await authService.login(this.loginForm)\r\n\r\n        // 根据后端实际返回的字段名调整\r\n        const token = response.data.token || response.data.accessToken;\r\n        const userId = response.data.userId || response.data.id;\r\n        const role = response.data.role || response.data.userType;\r\n        \r\n        localStorage.setItem('token', token)\r\n        localStorage.setItem('userId', userId)\r\n        localStorage.setItem('role', role)\r\n\r\n        switch (role) {\r\n          case 'merchant':\r\n            this.$router.push('/business')\r\n            break\r\n          case 'customer':\r\n            this.$router.push('/buyer')\r\n            break\r\n          case 'admin':\r\n            this.$router.push('/admin')\r\n            break\r\n          default:\r\n            alert('未知用户角色: ' + role)\r\n        }\r\n      } catch (error) {\r\n        console.error('登录错误详情:', error.response);\r\n        if (error.response?.data?.message) {\r\n          alert(`登录失败: ${error.response.data.message}`);\r\n        } else if (error.message.includes('用户ID或密码错误')) {\r\n          alert('登录失败：用户ID或密码错误')\r\n        } else {\r\n          alert(`登录失败: ${error.message}`)\r\n        }\r\n      }\r\n    },\r\n    goToRegister() {\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.button-group {\r\n  margin-top: 1.5rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\nbutton {\r\n  flex: 1;\r\n  padding: 0.5rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>"],"mappings":";AAqBA,OAAOA,WAAU,MAAO,kBAAiB;AAEzC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACN,SAAS;;QAEvD;QACA,MAAMO,KAAI,GAAIF,QAAQ,CAACN,IAAI,CAACQ,KAAI,IAAKF,QAAQ,CAACN,IAAI,CAACS,WAAW;QAC9D,MAAMP,MAAK,GAAII,QAAQ,CAACN,IAAI,CAACE,MAAK,IAAKI,QAAQ,CAACN,IAAI,CAACU,EAAE;QACvD,MAAMC,IAAG,GAAIL,QAAQ,CAACN,IAAI,CAACW,IAAG,IAAKL,QAAQ,CAACN,IAAI,CAACY,QAAQ;QAEzDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,KAAK;QACnCK,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEZ,MAAM;QACrCW,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,IAAI;QAEjC,QAAQA,IAAI;UACV,KAAK,UAAU;YACb,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,WAAW;YAC7B;UACF,KAAK,UAAU;YACb,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,QAAQ;YAC1B;UACF,KAAK,OAAO;YACV,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,QAAQ;YAC1B;UACF;YACEC,KAAK,CAAC,UAAS,GAAIN,IAAI;QAC3B;MACF,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACZ,QAAQ,CAAC;QACxC,IAAIY,KAAK,CAACZ,QAAQ,EAAEN,IAAI,EAAEoB,OAAO,EAAE;UACjCH,KAAK,CAAC,SAASC,KAAK,CAACZ,QAAQ,CAACN,IAAI,CAACoB,OAAO,EAAE,CAAC;QAC/C,OAAO,IAAIF,KAAK,CAACE,OAAO,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;UAC9CJ,KAAK,CAAC,gBAAgB;QACxB,OAAO;UACLA,KAAK,CAAC,SAASC,KAAK,CAACE,OAAO,EAAE;QAChC;MACF;IACF,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACP,OAAO,CAACC,IAAI,CAAC,WAAW;IAC/B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}