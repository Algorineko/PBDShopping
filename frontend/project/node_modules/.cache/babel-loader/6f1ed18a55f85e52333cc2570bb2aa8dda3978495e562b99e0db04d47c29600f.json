{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\n\n// 用户信息\n\nexport default {\n  __name: 'UserProfile',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userInfo = ref({\n      username: '',\n      address: ''\n    });\n\n    // 初始化加载本地数据\n    onMounted(() => {\n      const savedData = localStorage.getItem('userInfo');\n      if (savedData) {\n        userInfo.value = JSON.parse(savedData);\n      }\n    });\n\n    // 对话框控制\n    const dialogVisible = ref(false);\n    const editFormRef = ref();\n\n    // 编辑表单数据\n    const editForm = reactive({\n      username: '',\n      address: ''\n    });\n\n    // 表单验证规则\n    const rules = reactive({\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 20,\n        message: '用户名长度在2到20个字符',\n        trigger: 'blur'\n      }],\n      address: [{\n        required: true,\n        message: '请输入收货地址',\n        trigger: 'blur'\n      }, {\n        max: 100,\n        message: '地址最多100个字符',\n        trigger: 'blur'\n      }]\n    });\n    const showEditDialog = () => {\n      editForm.username = userInfo.value.username;\n      editForm.address = userInfo.value.address;\n      dialogVisible.value = true;\n    };\n    const submitForm = async () => {\n      try {\n        // 表单验证\n        await editFormRef.value.validate();\n\n        // 更新本地数据\n        userInfo.value.username = editForm.username;\n        userInfo.value.address = editForm.address;\n\n        // 保存到localStorage\n        localStorage.setItem('userInfo', JSON.stringify(userInfo.value));\n        ElMessage.success('信息修改成功');\n        dialogVisible.value = false;\n      } catch (error) {\n        ElMessage.warning('请正确填写表单');\n      }\n    };\n    const __returned__ = {\n      userInfo,\n      dialogVisible,\n      editFormRef,\n      editForm,\n      rules,\n      showEditDialog,\n      submitForm,\n      ref,\n      reactive,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","userInfo","username","address","savedData","localStorage","getItem","value","JSON","parse","dialogVisible","editFormRef","editForm","rules","required","message","trigger","min","max","showEditDialog","submitForm","validate","setItem","stringify","success","error","warning"],"sources":["E:/实验例子/project/src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <h2>我的信息</h2>\r\n    \r\n    <el-card class=\"info-card\">\r\n      <div class=\"info-item\">\r\n        <label>用户名：</label>\r\n        <span>{{ userInfo.username || '未设置' }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>收货地址：</label>\r\n        <span>{{ userInfo.address || '暂无收货地址' }}</span>\r\n      </div>\r\n      <el-button type=\"primary\" @click=\"showEditDialog\">编辑信息</el-button>\r\n    </el-card>\r\n\r\n    <!-- 编辑信息对话框 -->\r\n    <el-dialog v-model=\"dialogVisible\" title=\"编辑个人信息\" width=\"30%\">\r\n      <el-form :model=\"editForm\" :rules=\"rules\" ref=\"editFormRef\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"editForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"收货地址\" prop=\"address\">\r\n          <el-input v-model=\"editForm.address\" type=\"textarea\" :rows=\"3\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">确认修改</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 用户信息\r\nconst userInfo = ref({\r\n  username: '',\r\n  address: ''\r\n})\r\n\r\n// 初始化加载本地数据\r\nonMounted(() => {\r\n  const savedData = localStorage.getItem('userInfo')\r\n  if(savedData) {\r\n    userInfo.value = JSON.parse(savedData)\r\n  }\r\n})\r\n\r\n// 对话框控制\r\nconst dialogVisible = ref(false)\r\nconst editFormRef = ref()\r\n\r\n// 编辑表单数据\r\nconst editForm = reactive({\r\n  username: '',\r\n  address: ''\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = reactive({\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n    { min: 2, max: 20, message: '用户名长度在2到20个字符', trigger: 'blur' }\r\n  ],\r\n  address: [\r\n    { required: true, message: '请输入收货地址', trigger: 'blur' },\r\n    { max: 100, message: '地址最多100个字符', trigger: 'blur' }\r\n  ]\r\n})\r\n\r\nconst showEditDialog = () => {\r\n  editForm.username = userInfo.value.username\r\n  editForm.address = userInfo.value.address\r\n  dialogVisible.value = true\r\n}\r\n\r\nconst submitForm = async () => {\r\n  try {\r\n    // 表单验证\r\n    await editFormRef.value.validate()\r\n    \r\n    // 更新本地数据\r\n    userInfo.value.username = editForm.username\r\n    userInfo.value.address = editForm.address\r\n    \r\n    // 保存到localStorage\r\n    localStorage.setItem('userInfo', JSON.stringify(userInfo.value))\r\n    \r\n    ElMessage.success('信息修改成功')\r\n    dialogVisible.value = false\r\n  } catch (error) {\r\n    ElMessage.warning('请正确填写表单')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.info-card {\r\n  max-width: 600px;\r\n  margin: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.info-item {\r\n  margin: 15px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.info-item label {\r\n  font-weight: bold;\r\n  color: #666;\r\n  margin-right: 10px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>"],"mappings":"AAqCA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,cAAc;;AAExC;;;;;;;;IACA,MAAMC,QAAQ,GAAGJ,GAAG,CAAC;MACnBK,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACAJ,SAAS,CAAC,MAAM;MACd,MAAMK,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAClD,IAAGF,SAAS,EAAE;QACZH,QAAQ,CAACM,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;MACxC;IACF,CAAC,CAAC;;IAEF;IACA,MAAMM,aAAa,GAAGb,GAAG,CAAC,KAAK,CAAC;IAChC,MAAMc,WAAW,GAAGd,GAAG,CAAC,CAAC;;IAEzB;IACA,MAAMe,QAAQ,GAAGd,QAAQ,CAAC;MACxBI,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA,MAAMU,KAAK,GAAGf,QAAQ,CAAC;MACrBI,QAAQ,EAAE,CACR;QAAEY,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,eAAe;QAAEC,OAAO,EAAE;MAAO,CAAC,CAC/D;MACDb,OAAO,EAAE,CACP;QAAEW,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,CAAC,EACvD;QAAEE,GAAG,EAAE,GAAG;QAAEH,OAAO,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO,CAAC;IAExD,CAAC,CAAC;IAEF,MAAMG,cAAc,GAAGA,CAAA,KAAM;MAC3BP,QAAQ,CAACV,QAAQ,GAAGD,QAAQ,CAACM,KAAK,CAACL,QAAQ;MAC3CU,QAAQ,CAACT,OAAO,GAAGF,QAAQ,CAACM,KAAK,CAACJ,OAAO;MACzCO,aAAa,CAACH,KAAK,GAAG,IAAI;IAC5B,CAAC;IAED,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMT,WAAW,CAACJ,KAAK,CAACc,QAAQ,CAAC,CAAC;;QAElC;QACApB,QAAQ,CAACM,KAAK,CAACL,QAAQ,GAAGU,QAAQ,CAACV,QAAQ;QAC3CD,QAAQ,CAACM,KAAK,CAACJ,OAAO,GAAGS,QAAQ,CAACT,OAAO;;QAEzC;QACAE,YAAY,CAACiB,OAAO,CAAC,UAAU,EAAEd,IAAI,CAACe,SAAS,CAACtB,QAAQ,CAACM,KAAK,CAAC,CAAC;QAEhEP,SAAS,CAACwB,OAAO,CAAC,QAAQ,CAAC;QAC3Bd,aAAa,CAACH,KAAK,GAAG,KAAK;MAC7B,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdzB,SAAS,CAAC0B,OAAO,CAAC,SAAS,CAAC;MAC9B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}