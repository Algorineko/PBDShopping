{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-profile\"\n};\nconst _hoisted_2 = {\n  class: \"info-card\"\n};\nconst _hoisted_3 = {\n  class: \"info-item\"\n};\nconst _hoisted_4 = {\n  class: \"info-content\"\n};\nconst _hoisted_5 = {\n  class: \"info-item\"\n};\nconst _hoisted_6 = {\n  class: \"info-content\"\n};\nconst _hoisted_7 = {\n  class: \"info-item\"\n};\nconst _hoisted_8 = {\n  class: \"info-content\"\n};\nconst _hoisted_9 = {\n  class: \"info-item\"\n};\nconst _hoisted_10 = {\n  class: \"avatar-preview\"\n};\nconst _hoisted_11 = {\n  class: \"username-display\"\n};\nconst _hoisted_12 = {\n  class: \"info-content\"\n};\nconst _hoisted_13 = {\n  class: \"avatar-upload\"\n};\nconst _hoisted_14 = {\n  class: \"avatar-actions\"\n};\nconst _hoisted_15 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[21] || (_cache[21] = _createElementVNode(\"h2\", null, \"我的信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"用户名：\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_4, _toDisplayString($data.userData.username || '未设置'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"收货地址：\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($data.userData.address || '暂无收货地址'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"手机号码：\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_8, _toDisplayString($data.userData.contact || '暂无手机号码'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"用户头像：\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_avatar, {\n    size: 80,\n    src: $data.userData.avatar || $data.defaultAvatar\n  }, null, 8 /* PROPS */, [\"src\"]), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"avatar-tip\"\n  }, \"头像仅本地保存\", -1 /* HOISTED */))])]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.handleEditClick,\n    class: \"edit-button\"\n  }, {\n    default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\" 编辑信息 \")])),\n    _: 1 /* STABLE */,\n    __: [12]\n  }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_el_dialog, {\n    modelValue: $data.showDialog,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.showDialog = $event),\n    title: \"修改个人信息\",\n    width: \"500px\",\n    onOpen: $options.handleDialogOpen\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_el_button, {\n      onClick: _cache[5] || (_cache[5] = $event => $data.showDialog = false)\n    }, {\n      default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */,\n      __: [19]\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.submitForm,\n      loading: $data.loading\n    }, {\n      default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\" 确认修改 \")])),\n      _: 1 /* STABLE */,\n      __: [20]\n    }, 8 /* PROPS */, [\"onClick\", \"loading\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"formRef\",\n      model: $data.editForm,\n      rules: $data.formRules,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 用户名展示（不可编辑） \"), _createElementVNode(\"div\", _hoisted_11, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", null, \"用户名：\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($data.userData.username || '未设置'), 1 /* TEXT */), _cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n        class: \"info-tip\"\n      }, \"用户名不可修改\", -1 /* HOISTED */))]), _createVNode(_component_el_form_item, {\n        label: \"旧密码\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.editForm.oldPassword,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editForm.oldPassword = $event),\n          type: \"password\",\n          \"show-password\": \"\",\n          placeholder: \"请输入当前密码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"新密码\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.editForm.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editForm.password = $event),\n          type: \"password\",\n          \"show-password\": \"\",\n          placeholder: \"请输入新密码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _cache[15] || (_cache[15] = _createElementVNode(\"div\", {\n          class: \"info-tip\"\n        }, \"留空则不修改密码\", -1 /* HOISTED */))]),\n        _: 1 /* STABLE */,\n        __: [15]\n      }), _createVNode(_component_el_form_item, {\n        label: \"收货地址\",\n        prop: \"address\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.editForm.address,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.editForm.address = $event),\n          type: \"textarea\",\n          rows: 3,\n          placeholder: \"请输入详细收货地址\",\n          maxlength: \"100\",\n          \"show-word-limit\": \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"手机号码\",\n        prop: \"contact\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.editForm.contact,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.editForm.contact = $event),\n          placeholder: \"请输入手机号码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"用户头像\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_13, [_createVNode(_component_el_avatar, {\n          size: 120,\n          src: $data.editForm.avatar || $data.defaultAvatar,\n          class: \"avatar-preview\"\n        }, null, 8 /* PROPS */, [\"src\"]), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_upload, {\n          action: \"#\",\n          \"show-file-list\": false,\n          \"auto-upload\": false,\n          \"on-change\": $options.handleAvatarChange,\n          accept: \"image/*\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            icon: \"el-icon-upload\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"上传头像\")])),\n            _: 1 /* STABLE */,\n            __: [16]\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"on-change\"]), $data.editForm.avatar ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"danger\",\n          icon: \"el-icon-delete\",\n          size: \"small\",\n          onClick: _cache[4] || (_cache[4] = $event => $data.editForm.avatar = '')\n        }, {\n          default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\" 移除 \")])),\n          _: 1 /* STABLE */,\n          __: [17]\n        })) : _createCommentVNode(\"v-if\", true)])]), _cache[18] || (_cache[18] = _createElementVNode(\"div\", {\n          class: \"info-tip\"\n        }, \"头像仅本地保存，更换设备将丢失\", -1 /* HOISTED */))]),\n        _: 1 /* STABLE */,\n        __: [18]\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onOpen\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","userData","username","_hoisted_5","_hoisted_6","address","_hoisted_7","_hoisted_8","contact","_hoisted_9","_hoisted_10","_createVNode","_component_el_avatar","size","src","avatar","defaultAvatar","_component_el_button","type","onClick","$options","handleEditClick","default","_withCtx","_cache","_createTextVNode","_","__","_component_el_dialog","modelValue","showDialog","$event","title","width","onOpen","handleDialogOpen","footer","_hoisted_15","submitForm","loading","_component_el_form","ref","model","editForm","rules","formRules","_createCommentVNode","_hoisted_11","_hoisted_12","_component_el_form_item","label","_component_el_input","oldPassword","placeholder","password","prop","rows","maxlength","_hoisted_13","_hoisted_14","_component_el_upload","action","handleAvatarChange","accept","icon","_createBlock","key"],"sources":["E:\\实验例子\\project\\src\\components\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <h2>我的信息</h2>\r\n    \r\n    <div class=\"info-card\">\r\n      <div class=\"info-item\">\r\n        <label>用户名：</label>\r\n        <span class=\"info-content\">{{ userData.username || '未设置' }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>收货地址：</label>\r\n        <span class=\"info-content\">{{ userData.address || '暂无收货地址' }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>手机号码：</label>\r\n        <span class=\"info-content\">{{ userData.contact || '暂无手机号码' }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>用户头像：</label>\r\n        <div class=\"avatar-preview\">\r\n          <el-avatar \r\n            :size=\"80\" \r\n            :src=\"userData.avatar || defaultAvatar\" \r\n          />\r\n          <div class=\"avatar-tip\">头像仅本地保存</div>\r\n        </div>\r\n      </div>\r\n      <el-button \r\n        type=\"primary\" \r\n        @click=\"handleEditClick\"\r\n        class=\"edit-button\"\r\n      >\r\n        编辑信息\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-dialog\r\n      v-model=\"showDialog\"\r\n      title=\"修改个人信息\"\r\n      width=\"500px\"\r\n      @open=\"handleDialogOpen\"\r\n    >\r\n      <el-form \r\n        ref=\"formRef\" \r\n        :model=\"editForm\" \r\n        :rules=\"formRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <!-- 用户名展示（不可编辑） -->\r\n        <div class=\"username-display\">\r\n          <label>用户名：</label>\r\n          <span class=\"info-content\">{{ userData.username || '未设置' }}</span>\r\n          <div class=\"info-tip\">用户名不可修改</div>\r\n        </div>\r\n        \r\n        <el-form-item label=\"旧密码\">\r\n          <el-input\r\n            v-model=\"editForm.oldPassword\"\r\n            type=\"password\"\r\n            show-password\r\n            placeholder=\"请输入当前密码\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"新密码\">\r\n          <el-input\r\n            v-model=\"editForm.password\"\r\n            type=\"password\"\r\n            show-password\r\n            placeholder=\"请输入新密码\"\r\n          />\r\n          <div class=\"info-tip\">留空则不修改密码</div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收货地址\" prop=\"address\">\r\n          <el-input\r\n            v-model=\"editForm.address\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入详细收货地址\"\r\n            maxlength=\"100\"\r\n            show-word-limit\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"手机号码\" prop=\"contact\">\r\n          <el-input\r\n            v-model=\"editForm.contact\"\r\n            placeholder=\"请输入手机号码\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"用户头像\">\r\n          <div class=\"avatar-upload\">\r\n            <el-avatar \r\n              :size=\"120\" \r\n              :src=\"editForm.avatar || defaultAvatar\" \r\n              class=\"avatar-preview\"\r\n            />\r\n            <div class=\"avatar-actions\">\r\n              <el-upload\r\n                action=\"#\"\r\n                :show-file-list=\"false\"\r\n                :auto-upload=\"false\"\r\n                :on-change=\"handleAvatarChange\"\r\n                accept=\"image/*\"\r\n              >\r\n                <el-button type=\"primary\" icon=\"el-icon-upload\" size=\"small\">上传头像</el-button>\r\n              </el-upload>\r\n              <el-button \r\n                v-if=\"editForm.avatar\" \r\n                type=\"danger\" \r\n                icon=\"el-icon-delete\" \r\n                size=\"small\"\r\n                @click=\"editForm.avatar = ''\"\r\n              >\r\n                移除\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"info-tip\">头像仅本地保存，更换设备将丢失</div>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template #footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button @click=\"showDialog = false\">取消</el-button>\r\n          <el-button \r\n            type=\"primary\"\r\n            @click=\"submitForm\"\r\n            :loading=\"loading\"\r\n          >\r\n            确认修改\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\n// 使用可靠的在线默认头像URL\r\nconst DEFAULT_AVATAR_URL = 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png'\r\n\r\nexport default {\r\n  data() {\r\n    // 手机号码验证规则\r\n    const validatePhone = (rule, value, callback) => {\r\n      if (value && !/^1[3-9]\\d{9}$/.test(value)) {\r\n        callback(new Error('请输入正确的手机号码'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    \r\n    return {\r\n      // 使用可靠的在线默认头像URL\r\n      defaultAvatar: DEFAULT_AVATAR_URL,\r\n      userData: {\r\n        username: '',\r\n        address: '',\r\n        contact: '',\r\n        avatar: ''\r\n      },\r\n      showDialog: false,\r\n      loading: false,\r\n      editForm: {\r\n        oldPassword: '',\r\n        password: '',\r\n        address: '',\r\n        contact: '',\r\n        avatar: ''\r\n      },\r\n      formRules: {\r\n        address: [\r\n          { required: true, message: '收货地址不能为空', trigger: 'blur' },\r\n          { max: 100, message: '最多可输入100个字符', trigger: 'blur' }\r\n        ],\r\n        contact: [\r\n          { validator: validatePhone, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUserProfile()\r\n  },\r\n  methods: {\r\n    // 检查Token有效性\r\n    checkTokenValidity() {\r\n      const token = localStorage.getItem('token')\r\n      if (!token) {\r\n        ElMessage.error('用户未登录，请重新登录')\r\n        this.redirectToLogin()\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n\r\n    // 重定向到登录页\r\n    redirectToLogin() {\r\n      localStorage.removeItem('token')\r\n      setTimeout(() => {\r\n        window.location.href = '/login'\r\n      }, 1500)\r\n    },\r\n\r\n    // 获取用户信息\r\n    async fetchUserProfile() {\r\n      if (!this.checkTokenValidity()) return\r\n      \r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        const response = await axios.get('http://algorineko.top:8080/api/customer/profile', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          },\r\n          timeout: 10000\r\n        })\r\n        \r\n        console.log('用户信息响应数据:', response.data)\r\n        \r\n        // 使用更健壮的数据提取方式\r\n        const data = response.data?.data || {}\r\n        \r\n        this.userData = {\r\n          username: data.customerName || data.username || '',\r\n          address: data.address || '',\r\n          contact: data.phoneNumber || data.contact || '',\r\n          // 头像从本地存储获取\r\n          avatar: this.getAvatarFromStorage()\r\n        }\r\n        \r\n        // 保存用户名到本地存储\r\n        localStorage.setItem('userName', this.userData.username)\r\n        \r\n        // 保存用户ID\r\n        if (data.customerId) {\r\n          localStorage.setItem('userId', data.customerId.toString())\r\n        } else if (data.id) {\r\n          localStorage.setItem('userId', data.id.toString())\r\n        }\r\n      } catch (error) {\r\n        console.error('获取用户信息失败:', error)\r\n        \r\n        // 更详细的错误信息\r\n        let errorMsg = '获取用户信息失败'\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            errorMsg = '身份验证失败，请重新登录'\r\n            this.redirectToLogin()\r\n          } else if (error.response.data?.message) {\r\n            errorMsg = error.response.data.message\r\n          }\r\n        }\r\n        \r\n        ElMessage.error(errorMsg)\r\n      }\r\n    },\r\n\r\n    // 从本地存储获取头像\r\n    getAvatarFromStorage() {\r\n      const profile = JSON.parse(localStorage.getItem('userProfile') || '{}')\r\n      return profile.avatar || ''\r\n    },\r\n\r\n    handleEditClick() {\r\n      this.showDialog = true\r\n      // 初始化表单数据\r\n      this.editForm = {\r\n        address: this.userData.address,\r\n        contact: this.userData.contact,\r\n        avatar: this.userData.avatar,\r\n        oldPassword: '',\r\n        password: ''\r\n      }\r\n    },\r\n\r\n    handleDialogOpen() {\r\n      this.$nextTick(() => {\r\n        if (this.$refs.formRef) {\r\n          this.$refs.formRef.clearValidate()\r\n        }\r\n      })\r\n    },\r\n    \r\n    // 处理头像上传\r\n    handleAvatarChange(file) {\r\n      if (!file) return\r\n      \r\n      // 检查文件类型和大小\r\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif']\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n      \r\n      if (!validTypes.includes(file.raw.type)) {\r\n        ElMessage.error('只支持 JPG/PNG/GIF 格式!')\r\n        return\r\n      }\r\n      \r\n      if (!isLt2M) {\r\n        ElMessage.error('头像大小不能超过 2MB!')\r\n        return\r\n      }\r\n      \r\n      const reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        this.editForm.avatar = e.target.result\r\n      }\r\n      reader.readAsDataURL(file.raw)\r\n    },\r\n\r\n    // 提交表单\r\n    async submitForm() {\r\n      this.$refs.formRef.validate(async (valid) => {\r\n        if (!valid) {\r\n          ElMessage.warning('请正确填写表单')\r\n          return\r\n        }\r\n        \r\n        try {\r\n          this.loading = true\r\n          const token = localStorage.getItem('token')\r\n          if (!token) {\r\n            ElMessage.error('用户未登录')\r\n            return\r\n          }\r\n          \r\n          // 1. 更新基本信息\r\n          await axios.put(\r\n            'http://algorineko.top:8080/api/customer/putProfile',\r\n            {\r\n              address: this.editForm.address,\r\n              phoneNumber: this.editForm.contact\r\n            },\r\n            {\r\n              headers: {\r\n                'Authorization': `Bearer ${token}`\r\n              },\r\n              timeout: 10000\r\n            }\r\n          )\r\n          \r\n          // 2. 如果有新密码则更新密码\r\n          if (this.editForm.password) {\r\n            if (!this.editForm.oldPassword) {\r\n              ElMessage.warning('修改密码需要提供旧密码')\r\n              this.loading = false\r\n              return\r\n            }\r\n            \r\n            await axios.put(\r\n              'http://algorineko.top:8080/api/customer/change-password',\r\n              {\r\n                oldPassword: this.editForm.oldPassword,\r\n                newPassword: this.editForm.password\r\n              },\r\n              {\r\n                headers: {\r\n                  'Authorization': `Bearer ${token}`\r\n                },\r\n                timeout: 10000\r\n              }\r\n            )\r\n          }\r\n          \r\n          // 3. 更新用户数据（包括头像）\r\n          this.userData = {\r\n            ...this.userData,\r\n            address: this.editForm.address,\r\n            contact: this.editForm.contact,\r\n            avatar: this.editForm.avatar\r\n          }\r\n          \r\n          // 4. 更新本地存储（包括头像）\r\n          localStorage.setItem('userProfile', JSON.stringify({\r\n            address: this.editForm.address,\r\n            contact: this.editForm.contact,\r\n            avatar: this.editForm.avatar\r\n          }))\r\n          \r\n          ElMessage.success('修改成功')\r\n          this.showDialog = false\r\n        } catch (error) {\r\n          console.error('保存失败:', error)\r\n          \r\n          let errorMessage = '保存失败，请重试'\r\n          if (error.response) {\r\n            if (error.response.status === 401) {\r\n              errorMessage = '身份验证失败，请重新登录'\r\n              this.redirectToLogin()\r\n            } else if (error.response.status === 400) {\r\n              errorMessage = error.response.data.message || '请求参数错误'\r\n            } else if (error.response.status === 403) {\r\n              errorMessage = '旧密码不正确'\r\n            } else if (error.response.data && error.response.data.message) {\r\n              errorMessage = error.response.data.message\r\n            }\r\n          }\r\n          \r\n          ElMessage.error(errorMessage)\r\n        } finally {\r\n          this.loading = false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.info-card {\r\n  background: #fff;\r\n  padding: 24px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.username-display {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.username-display label {\r\n  font-weight: bold;\r\n  color: #606266;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.info-item label {\r\n  font-weight: 500;\r\n  color: #606266;\r\n  width: 100px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.info-content {\r\n  flex: 1;\r\n  word-break: break-word;\r\n  color: #303133;\r\n}\r\n\r\n.avatar-preview {\r\n  margin-top: 10px;\r\n  position: relative;\r\n}\r\n\r\n.avatar-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.edit-button {\r\n  margin-top: 20px;\r\n  width: 200px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n}\r\n\r\n.avatar-upload {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.avatar-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.info-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .info-item {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n  }\r\n  \r\n  .edit-button {\r\n    width: 100%;\r\n  }\r\n  \r\n  .avatar-upload {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAGlBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAc;;EAEvBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAc;;EAEvBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAc;;EAEvBA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAgB;;EA8BtBA,KAAK,EAAC;AAAkB;;EAErBA,KAAK,EAAC;AAAc;;EA0CrBA,KAAK,EAAC;AAAe;;EAMnBA,KAAK,EAAC;AAAgB;;EA0B1BA,KAAK,EAAC;AAAe;;;;;;;;;uBA5HhCC,mBAAA,CAwIM,OAxINC,UAwIM,G,4BAvIJC,mBAAA,CAAa,YAAT,MAAI,sBAERA,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJD,mBAAA,CAGM,OAHNE,UAGM,G,0BAFJF,mBAAA,CAAmB,eAAZ,MAAI,sBACXA,mBAAA,CAAkE,QAAlEG,UAAkE,EAAAC,gBAAA,CAApCC,KAAA,CAAAC,QAAQ,CAACC,QAAQ,0B,GAEjDP,mBAAA,CAGM,OAHNQ,UAGM,G,0BAFJR,mBAAA,CAAoB,eAAb,OAAK,sBACZA,mBAAA,CAAoE,QAApES,UAAoE,EAAAL,gBAAA,CAAtCC,KAAA,CAAAC,QAAQ,CAACI,OAAO,6B,GAEhDV,mBAAA,CAGM,OAHNW,UAGM,G,0BAFJX,mBAAA,CAAoB,eAAb,OAAK,sBACZA,mBAAA,CAAoE,QAApEY,UAAoE,EAAAR,gBAAA,CAAtCC,KAAA,CAAAC,QAAQ,CAACO,OAAO,6B,GAEhDb,mBAAA,CASM,OATNc,UASM,G,4BARJd,mBAAA,CAAoB,eAAb,OAAK,sBACZA,mBAAA,CAMM,OANNe,WAMM,GALJC,YAAA,CAGEC,oBAAA;IAFCC,IAAI,EAAE,EAAE;IACRC,GAAG,EAAEd,KAAA,CAAAC,QAAQ,CAACc,MAAM,IAAIf,KAAA,CAAAgB;gEAE3BrB,mBAAA,CAAqC;IAAhCH,KAAK,EAAC;EAAY,GAAC,SAAO,qB,KAGnCmB,YAAA,CAMYM,oBAAA;IALVC,IAAI,EAAC,SAAS;IACbC,OAAK,EAAEC,QAAA,CAAAC,eAAe;IACvB7B,KAAK,EAAC;;IA9Bd8B,OAAA,EAAAC,QAAA,CA+BO,MAEDC,MAAA,SAAAA,MAAA,QAjCNC,gBAAA,CA+BO,QAED,E;IAjCNC,CAAA;IAAAC,EAAA;oCAoCIhB,YAAA,CAoGYiB,oBAAA;IAxIhBC,UAAA,EAqCe7B,KAAA,CAAA8B,UAAU;IArCzB,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAqCe/B,KAAA,CAAA8B,UAAU,GAAAC,MAAA;IACnBC,KAAK,EAAC,QAAQ;IACdC,KAAK,EAAC,OAAO;IACZC,MAAI,EAAEd,QAAA,CAAAe;;IAoFIC,MAAM,EAAAb,QAAA,CACf,MASM,CATN5B,mBAAA,CASM,OATN0C,WASM,GARJ1B,YAAA,CAAqDM,oBAAA;MAAzCE,OAAK,EAAAK,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAAE/B,KAAA,CAAA8B,UAAU;;MA9HvCR,OAAA,EAAAC,QAAA,CA8HiD,MAAEC,MAAA,SAAAA,MAAA,QA9HnDC,gBAAA,CA8HiD,IAAE,E;MA9HnDC,CAAA;MAAAC,EAAA;QA+HUhB,YAAA,CAMYM,oBAAA;MALVC,IAAI,EAAC,SAAS;MACbC,OAAK,EAAEC,QAAA,CAAAkB,UAAU;MACjBC,OAAO,EAAEvC,KAAA,CAAAuC;;MAlItBjB,OAAA,EAAAC,QAAA,CAmIW,MAEDC,MAAA,SAAAA,MAAA,QArIVC,gBAAA,CAmIW,QAED,E;MArIVC,CAAA;MAAAC,EAAA;;IAAAL,OAAA,EAAAC,QAAA,CA0CM,MAgFU,CAhFVZ,YAAA,CAgFU6B,kBAAA;MA/ERC,GAAG,EAAC,SAAS;MACZC,KAAK,EAAE1C,KAAA,CAAA2C,QAAQ;MACfC,KAAK,EAAE5C,KAAA,CAAA6C,SAAS;MACjB,aAAW,EAAC;;MA9CpBvB,OAAA,EAAAC,QAAA,CAgDQ,MAAoB,CAApBuB,mBAAA,iBAAoB,EACpBnD,mBAAA,CAIM,OAJNoD,WAIM,G,4BAHJpD,mBAAA,CAAmB,eAAZ,MAAI,sBACXA,mBAAA,CAAkE,QAAlEqD,WAAkE,EAAAjD,gBAAA,CAApCC,KAAA,CAAAC,QAAQ,CAACC,QAAQ,2B,4BAC/CP,mBAAA,CAAmC;QAA9BH,KAAK,EAAC;MAAU,GAAC,SAAO,qB,GAG/BmB,YAAA,CAOesC,uBAAA;QAPDC,KAAK,EAAC;MAAK;QAvDjC5B,OAAA,EAAAC,QAAA,CAwDU,MAKE,CALFZ,YAAA,CAKEwC,mBAAA;UA7DZtB,UAAA,EAyDqB7B,KAAA,CAAA2C,QAAQ,CAACS,WAAW;UAzDzC,uBAAA5B,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAyDqB/B,KAAA,CAAA2C,QAAQ,CAACS,WAAW,GAAArB,MAAA;UAC7Bb,IAAI,EAAC,UAAU;UACf,eAAa,EAAb,EAAa;UACbmC,WAAW,EAAC;;QA5DxB3B,CAAA;UAgEQf,YAAA,CAQesC,uBAAA;QARDC,KAAK,EAAC;MAAK;QAhEjC5B,OAAA,EAAAC,QAAA,CAiEU,MAKE,CALFZ,YAAA,CAKEwC,mBAAA;UAtEZtB,UAAA,EAkEqB7B,KAAA,CAAA2C,QAAQ,CAACW,QAAQ;UAlEtC,uBAAA9B,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAkEqB/B,KAAA,CAAA2C,QAAQ,CAACW,QAAQ,GAAAvB,MAAA;UAC1Bb,IAAI,EAAC,UAAU;UACf,eAAa,EAAb,EAAa;UACbmC,WAAW,EAAC;6EAEd1D,mBAAA,CAAoC;UAA/BH,KAAK,EAAC;QAAU,GAAC,UAAQ,qB;QAvExCkC,CAAA;QAAAC,EAAA;UA0EQhB,YAAA,CASesC,uBAAA;QATDC,KAAK,EAAC,MAAM;QAACK,IAAI,EAAC;;QA1ExCjC,OAAA,EAAAC,QAAA,CA2EU,MAOE,CAPFZ,YAAA,CAOEwC,mBAAA;UAlFZtB,UAAA,EA4EqB7B,KAAA,CAAA2C,QAAQ,CAACtC,OAAO;UA5ErC,uBAAAmB,MAAA,QAAAA,MAAA,MAAAO,MAAA,IA4EqB/B,KAAA,CAAA2C,QAAQ,CAACtC,OAAO,GAAA0B,MAAA;UACzBb,IAAI,EAAC,UAAU;UACdsC,IAAI,EAAE,CAAC;UACRH,WAAW,EAAC,WAAW;UACvBI,SAAS,EAAC,KAAK;UACf,iBAAe,EAAf;;QAjFZ/B,CAAA;UAqFQf,YAAA,CAKesC,uBAAA;QALDC,KAAK,EAAC,MAAM;QAACK,IAAI,EAAC;;QArFxCjC,OAAA,EAAAC,QAAA,CAsFU,MAGE,CAHFZ,YAAA,CAGEwC,mBAAA;UAzFZtB,UAAA,EAuFqB7B,KAAA,CAAA2C,QAAQ,CAACnC,OAAO;UAvFrC,uBAAAgB,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAuFqB/B,KAAA,CAAA2C,QAAQ,CAACnC,OAAO,GAAAuB,MAAA;UACzBsB,WAAW,EAAC;;QAxFxB3B,CAAA;UA4FQf,YAAA,CA6BesC,uBAAA;QA7BDC,KAAK,EAAC;MAAM;QA5FlC5B,OAAA,EAAAC,QAAA,CA6FU,MA0BM,CA1BN5B,mBAAA,CA0BM,OA1BN+D,WA0BM,GAzBJ/C,YAAA,CAIEC,oBAAA;UAHCC,IAAI,EAAE,GAAG;UACTC,GAAG,EAAEd,KAAA,CAAA2C,QAAQ,CAAC5B,MAAM,IAAIf,KAAA,CAAAgB,aAAa;UACtCxB,KAAK,EAAC;0CAERG,mBAAA,CAmBM,OAnBNgE,WAmBM,GAlBJhD,YAAA,CAQYiD,oBAAA;UAPVC,MAAM,EAAC,GAAG;UACT,gBAAc,EAAE,KAAK;UACrB,aAAW,EAAE,KAAK;UAClB,WAAS,EAAEzC,QAAA,CAAA0C,kBAAkB;UAC9BC,MAAM,EAAC;;UAzGvBzC,OAAA,EAAAC,QAAA,CA2GgB,MAA6E,CAA7EZ,YAAA,CAA6EM,oBAAA;YAAlEC,IAAI,EAAC,SAAS;YAAC8C,IAAI,EAAC,gBAAgB;YAACnD,IAAI,EAAC;;YA3GrES,OAAA,EAAAC,QAAA,CA2G6E,MAAIC,MAAA,SAAAA,MAAA,QA3GjFC,gBAAA,CA2G6E,MAAI,E;YA3GjFC,CAAA;YAAAC,EAAA;;UAAAD,CAAA;0CA8GsB1B,KAAA,CAAA2C,QAAQ,CAAC5B,MAAM,I,cADvBkD,YAAA,CAQYhD,oBAAA;UArH1BiD,GAAA;UA+GgBhD,IAAI,EAAC,QAAQ;UACb8C,IAAI,EAAC,gBAAgB;UACrBnD,IAAI,EAAC,OAAO;UACXM,OAAK,EAAAK,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAAE/B,KAAA,CAAA2C,QAAQ,CAAC5B,MAAM;;UAlHvCO,OAAA,EAAAC,QAAA,CAmHe,MAEDC,MAAA,SAAAA,MAAA,QArHdC,gBAAA,CAmHe,MAED,E;UArHdC,CAAA;UAAAC,EAAA;cAAAmB,mBAAA,e,iCAwHUnD,mBAAA,CAA2C;UAAtCH,KAAK,EAAC;QAAU,GAAC,iBAAe,qB;QAxH/CkC,CAAA;QAAAC,EAAA;;MAAAD,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}