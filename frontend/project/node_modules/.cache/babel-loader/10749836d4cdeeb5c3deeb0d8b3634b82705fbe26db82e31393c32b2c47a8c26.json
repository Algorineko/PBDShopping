{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useCartStore } from '@/stores/cart';\nimport axios from 'axios';\nexport default {\n  __name: 'ProductDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const cartStore = useCartStore();\n    const product = ref({\n      id: '',\n      name: '',\n      price: 0,\n      images: [],\n      description: ''\n    });\n    const quantity = ref(1);\n\n    // 从API获取商品详情\n    const fetchProductDetail = async id => {\n      if (!id) {\n        ElMessage.error('无效的商品ID');\n        return;\n      }\n      try {\n        const response = await axios.get(`http://algorineko.top:8080/api/merchant/product/detail/${id}`);\n        const apiData = response.data;\n\n        // 转换API数据结构以适应前端需求\n        product.value = {\n          id: apiData.productId,\n          name: apiData.productName,\n          price: apiData.price,\n          description: apiData.description,\n          // 确保images是数组，如果为null则转换为空数组\n          images: apiData.images || []\n        };\n      } catch (error) {\n        ElMessage.error('商品加载失败');\n        console.error('商品加载错误:', error);\n      }\n    };\n    onMounted(() => {\n      const productId = route.params.id;\n      if (productId) fetchProductDetail(productId);\n    });\n    const addToCart = () => {\n      cartStore.addItem({\n        id: product.value.id,\n        name: product.value.name,\n        price: product.value.price,\n        quantity: quantity.value,\n        image: product.value.images?.[0] || ''\n      });\n      ElMessage.success('已加入购物车');\n    };\n    const __returned__ = {\n      route,\n      cartStore,\n      product,\n      quantity,\n      fetchProductDetail,\n      addToCart,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useCartStore() {\n        return useCartStore;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","ElMessage","useCartStore","axios","route","cartStore","product","id","name","price","images","description","quantity","fetchProductDetail","error","response","get","apiData","data","value","productId","productName","console","params","addToCart","addItem","image","success"],"sources":["E:/实验例子/project/src/views/Buyer/ProductDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n    <el-button type=\"text\" @click=\"$router.go(-1)\">返回</el-button>\r\n    \r\n    <div class=\"detail-content\">\r\n      <el-carousel :interval=\"4000\" height=\"400px\" v-if=\"product.images?.length > 0\">\r\n        <el-carousel-item \r\n          v-for=\"(img, index) in product.images\" \r\n          :key=\"index\"\r\n          style=\"height: 400px;\"\r\n        >\r\n          <el-image \r\n            :src=\"img\" \r\n            fit=\"cover\" \r\n            style=\"width: 100%; height: 100%;\"\r\n          />\r\n        </el-carousel-item>\r\n      </el-carousel>\r\n      \r\n      <!-- 无图片提示 -->\r\n      <div v-else class=\"no-images\">\r\n        <el-empty description=\"暂无商品图片\" />\r\n      </div>\r\n\r\n      <div class=\"product-info\">\r\n        <h1>{{ product.name }}</h1>\r\n        <p class=\"price\">¥{{ product.price }}</p>\r\n        \r\n        <div class=\"action-group\">\r\n          <el-input-number \r\n            v-model=\"quantity\" \r\n            :min=\"1\"\r\n          />\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"addToCart\"\r\n          >\r\n            加入购物车\r\n          </el-button>\r\n        </div>\r\n\r\n        <el-divider />\r\n        <div class=\"description\">\r\n          <h3>商品详情</h3>\r\n          <p>{{ product.description || '暂无详情描述' }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\nimport axios from 'axios'\r\n\r\nconst route = useRoute()\r\nconst cartStore = useCartStore()\r\n\r\nconst product = ref({\r\n  id: '',\r\n  name: '',\r\n  price: 0,\r\n  images: [],\r\n  description: ''\r\n})\r\n\r\nconst quantity = ref(1)\r\n\r\n// 从API获取商品详情\r\nconst fetchProductDetail = async (id) => {\r\n  if (!id) {\r\n    ElMessage.error('无效的商品ID')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    const response = await axios.get(\r\n      `http://algorineko.top:8080/api/merchant/product/detail/${id}`\r\n    )\r\n    \r\n    const apiData = response.data\r\n    \r\n    // 转换API数据结构以适应前端需求\r\n    product.value = {\r\n      id: apiData.productId,\r\n      name: apiData.productName,\r\n      price: apiData.price,\r\n      description: apiData.description,\r\n      // 确保images是数组，如果为null则转换为空数组\r\n      images: apiData.images || []\r\n    }\r\n    \r\n  } catch (error) {\r\n    ElMessage.error('商品加载失败')\r\n    console.error('商品加载错误:', error)\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  const productId = route.params.id\r\n  if (productId) fetchProductDetail(productId)\r\n})\r\n\r\nconst addToCart = () => {\r\n  cartStore.addItem({\r\n    id: product.value.id,\r\n    name: product.value.name,\r\n    price: product.value.price,\r\n    quantity: quantity.value,\r\n    image: product.value.images?.[0] || ''\r\n  })\r\n  ElMessage.success('已加入购物车')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-detail {\r\n  padding: 20px;\r\n}\r\n\r\n.detail-content {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 40px;\r\n}\r\n\r\n.action-group {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.description {\r\n  margin-top: 30px;\r\n}\r\n\r\n.price {\r\n  font-size: 24px;\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.no-images {\r\n  height: 400px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .detail-content {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>"],"mappings":"AAoDA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,SAAS,GAAGH,YAAY,CAAC,CAAC;IAEhC,MAAMI,OAAO,GAAGR,GAAG,CAAC;MAClBS,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAGd,GAAG,CAAC,CAAC,CAAC;;IAEvB;IACA,MAAMe,kBAAkB,GAAG,MAAON,EAAE,IAAK;MACvC,IAAI,CAACA,EAAE,EAAE;QACPN,SAAS,CAACa,KAAK,CAAC,SAAS,CAAC;QAC1B;MACF;MAEA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC9B,0DAA0DT,EAAE,EAC9D,CAAC;QAED,MAAMU,OAAO,GAAGF,QAAQ,CAACG,IAAI;;QAE7B;QACAZ,OAAO,CAACa,KAAK,GAAG;UACdZ,EAAE,EAAEU,OAAO,CAACG,SAAS;UACrBZ,IAAI,EAAES,OAAO,CAACI,WAAW;UACzBZ,KAAK,EAAEQ,OAAO,CAACR,KAAK;UACpBE,WAAW,EAAEM,OAAO,CAACN,WAAW;UAChC;UACAD,MAAM,EAAEO,OAAO,CAACP,MAAM,IAAI;QAC5B,CAAC;MAEH,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdb,SAAS,CAACa,KAAK,CAAC,QAAQ,CAAC;QACzBQ,OAAO,CAACR,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF,CAAC;IAEDf,SAAS,CAAC,MAAM;MACd,MAAMqB,SAAS,GAAGhB,KAAK,CAACmB,MAAM,CAAChB,EAAE;MACjC,IAAIa,SAAS,EAAEP,kBAAkB,CAACO,SAAS,CAAC;IAC9C,CAAC,CAAC;IAEF,MAAMI,SAAS,GAAGA,CAAA,KAAM;MACtBnB,SAAS,CAACoB,OAAO,CAAC;QAChBlB,EAAE,EAAED,OAAO,CAACa,KAAK,CAACZ,EAAE;QACpBC,IAAI,EAAEF,OAAO,CAACa,KAAK,CAACX,IAAI;QACxBC,KAAK,EAAEH,OAAO,CAACa,KAAK,CAACV,KAAK;QAC1BG,QAAQ,EAAEA,QAAQ,CAACO,KAAK;QACxBO,KAAK,EAAEpB,OAAO,CAACa,KAAK,CAACT,MAAM,GAAG,CAAC,CAAC,IAAI;MACtC,CAAC,CAAC;MACFT,SAAS,CAAC0B,OAAO,CAAC,QAAQ,CAAC;IAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}