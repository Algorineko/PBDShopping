{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport authService from '../services/auth';\nexport default {\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.errorMessage = '';\n      try {\n        const response = await authService.login(this.loginForm);\n\n        // 检查响应结构\n        console.log('登录响应:', response);\n\n        // 根据后端实际返回的字段名调整\n        const token = response.data.token || response.data.accessToken;\n        const userId = response.data.userId || response.data.id;\n        const role = response.data.role || response.data.userType;\n        if (!token || !userId || !role) {\n          throw new Error('登录响应缺少必要字段');\n        }\n        localStorage.setItem('token', token);\n        localStorage.setItem('userId', userId);\n        localStorage.setItem('role', role);\n        switch (role) {\n          case 'merchant':\n            this.$router.push('/business');\n            break;\n          case 'customer':\n            this.$router.push('/buyer');\n            break;\n          case 'admin':\n            this.$router.push('/admin');\n            break;\n          default:\n            alert('未知用户角色: ' + role);\n        }\n      } catch (error) {\n        console.error('登录错误详情:', error);\n        let message = '登录失败，请稍后再试';\n        if (error.response) {\n          // 服务器返回了错误响应\n          const status = error.response.status;\n          const data = error.response.data || {};\n          if (status === 400) {\n            message = data.message || '请求参数错误';\n          } else if (status === 401) {\n            message = data.message || '用户名或密码错误';\n          } else if (status === 403) {\n            message = data.message || '无权限访问';\n          } else if (status === 404) {\n            message = 'API接口不存在';\n          } else if (status === 500) {\n            message = data.error || '服务器内部错误';\n          }\n        } else if (error.request) {\n          // 请求已发送但无响应\n          message = '服务器无响应，请检查网络连接';\n        } else {\n          // 请求未发送\n          message = error.message || '请求发送失败';\n        }\n        this.errorMessage = message;\n      }\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["authService","data","loginForm","username","password","errorMessage","methods","handleLogin","response","login","console","log","token","accessToken","userId","id","role","userType","Error","localStorage","setItem","$router","push","alert","error","message","status","request","goToRegister"],"sources":["E:\\实验例子\\project\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>用户登录</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div class=\"form-group\">\r\n        <label>用户名:</label>\r\n        <input type=\"text\" v-model=\"loginForm.username\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>密码:</label>\r\n        <input type=\"password\" v-model=\"loginForm.password\" required>\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button type=\"submit\">登录</button>\r\n        <button type=\"button\" @click=\"goToRegister\">注册</button>\r\n      </div>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">\r\n        {{ errorMessage }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/auth'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      errorMessage: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      this.errorMessage = ''\r\n      \r\n      try {\r\n        const response = await authService.login(this.loginForm)\r\n\r\n        // 检查响应结构\r\n        console.log('登录响应:', response)\r\n        \r\n        // 根据后端实际返回的字段名调整\r\n        const token = response.data.token || response.data.accessToken;\r\n        const userId = response.data.userId || response.data.id;\r\n        const role = response.data.role || response.data.userType;\r\n        \r\n        if (!token || !userId || !role) {\r\n          throw new Error('登录响应缺少必要字段')\r\n        }\r\n        \r\n        localStorage.setItem('token', token)\r\n        localStorage.setItem('userId', userId)\r\n        localStorage.setItem('role', role)\r\n\r\n        switch (role) {\r\n          case 'merchant':\r\n            this.$router.push('/business')\r\n            break\r\n          case 'customer':\r\n            this.$router.push('/buyer')\r\n            break\r\n          case 'admin':\r\n            this.$router.push('/admin')\r\n            break\r\n          default:\r\n            alert('未知用户角色: ' + role)\r\n        }\r\n      } catch (error) {\r\n        console.error('登录错误详情:', error)\r\n        \r\n        let message = '登录失败，请稍后再试'\r\n        \r\n        if (error.response) {\r\n          // 服务器返回了错误响应\r\n          const status = error.response.status\r\n          const data = error.response.data || {}\r\n          \r\n          if (status === 400) {\r\n            message = data.message || '请求参数错误'\r\n          } else if (status === 401) {\r\n            message = data.message || '用户名或密码错误'\r\n          } else if (status === 403) {\r\n            message = data.message || '无权限访问'\r\n          } else if (status === 404) {\r\n            message = 'API接口不存在'\r\n          } else if (status === 500) {\r\n            message = data.error || '服务器内部错误'\r\n          }\r\n        } else if (error.request) {\r\n          // 请求已发送但无响应\r\n          message = '服务器无响应，请检查网络连接'\r\n        } else {\r\n          // 请求未发送\r\n          message = error.message || '请求发送失败'\r\n        }\r\n        \r\n        this.errorMessage = message\r\n      }\r\n    },\r\n    goToRegister() {\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  position: relative;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.button-group {\r\n  margin-top: 1.5rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\nbutton {\r\n  flex: 1;\r\n  padding: 0.5rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 1rem;\r\n  padding: 0.75rem;\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n  border-radius: 4px;\r\n}\r\n</style>"],"mappings":";AAwBA,OAAOA,WAAU,MAAO,kBAAiB;AAEzC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACF,YAAW,GAAI,EAAC;MAErB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMR,WAAW,CAACS,KAAK,CAAC,IAAI,CAACP,SAAS;;QAEvD;QACAQ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,QAAQ;;QAE7B;QACA,MAAMI,KAAI,GAAIJ,QAAQ,CAACP,IAAI,CAACW,KAAI,IAAKJ,QAAQ,CAACP,IAAI,CAACY,WAAW;QAC9D,MAAMC,MAAK,GAAIN,QAAQ,CAACP,IAAI,CAACa,MAAK,IAAKN,QAAQ,CAACP,IAAI,CAACc,EAAE;QACvD,MAAMC,IAAG,GAAIR,QAAQ,CAACP,IAAI,CAACe,IAAG,IAAKR,QAAQ,CAACP,IAAI,CAACgB,QAAQ;QAEzD,IAAI,CAACL,KAAI,IAAK,CAACE,MAAK,IAAK,CAACE,IAAI,EAAE;UAC9B,MAAM,IAAIE,KAAK,CAAC,YAAY;QAC9B;QAEAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,KAAK;QACnCO,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEN,MAAM;QACrCK,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEJ,IAAI;QAEjC,QAAQA,IAAI;UACV,KAAK,UAAU;YACb,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,WAAW;YAC7B;UACF,KAAK,UAAU;YACb,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,QAAQ;YAC1B;UACF,KAAK,OAAO;YACV,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,QAAQ;YAC1B;UACF;YACEC,KAAK,CAAC,UAAS,GAAIP,IAAI;QAC3B;MACF,EAAE,OAAOQ,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,SAAS,EAAEA,KAAK;QAE9B,IAAIC,OAAM,GAAI,YAAW;QAEzB,IAAID,KAAK,CAAChB,QAAQ,EAAE;UAClB;UACA,MAAMkB,MAAK,GAAIF,KAAK,CAAChB,QAAQ,CAACkB,MAAK;UACnC,MAAMzB,IAAG,GAAIuB,KAAK,CAAChB,QAAQ,CAACP,IAAG,IAAK,CAAC;UAErC,IAAIyB,MAAK,KAAM,GAAG,EAAE;YAClBD,OAAM,GAAIxB,IAAI,CAACwB,OAAM,IAAK,QAAO;UACnC,OAAO,IAAIC,MAAK,KAAM,GAAG,EAAE;YACzBD,OAAM,GAAIxB,IAAI,CAACwB,OAAM,IAAK,UAAS;UACrC,OAAO,IAAIC,MAAK,KAAM,GAAG,EAAE;YACzBD,OAAM,GAAIxB,IAAI,CAACwB,OAAM,IAAK,OAAM;UAClC,OAAO,IAAIC,MAAK,KAAM,GAAG,EAAE;YACzBD,OAAM,GAAI,UAAS;UACrB,OAAO,IAAIC,MAAK,KAAM,GAAG,EAAE;YACzBD,OAAM,GAAIxB,IAAI,CAACuB,KAAI,IAAK,SAAQ;UAClC;QACF,OAAO,IAAIA,KAAK,CAACG,OAAO,EAAE;UACxB;UACAF,OAAM,GAAI,gBAAe;QAC3B,OAAO;UACL;UACAA,OAAM,GAAID,KAAK,CAACC,OAAM,IAAK,QAAO;QACpC;QAEA,IAAI,CAACpB,YAAW,GAAIoB,OAAM;MAC5B;IACF,CAAC;IACDG,YAAYA,CAAA,EAAG;MACb,IAAI,CAACP,OAAO,CAACC,IAAI,CAAC,WAAW;IAC/B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}