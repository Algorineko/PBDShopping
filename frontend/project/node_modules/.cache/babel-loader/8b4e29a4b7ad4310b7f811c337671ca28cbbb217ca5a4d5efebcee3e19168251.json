{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  __name: 'UserReviews',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const reviews = ref([]);\n\n    // JWT 解析函数\n    const parseJwt = token => {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n        return JSON.parse(jsonPayload);\n      } catch (e) {\n        console.error('Token解析失败:', e);\n        return null;\n      }\n    };\n\n    // 从token获取用户名\n    const token = localStorage.getItem('token');\n    const username = computed(() => {\n      if (token) {\n        const payload = parseJwt(token);\n        return payload.sub || 'guest';\n      }\n      return 'guest';\n    });\n\n    // 从Token获取用户ID\n    const getCustomerIdFromToken = () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        ElMessage.error('用户未登录，请先登录');\n        return null;\n      }\n      try {\n        const decoded = parseJwt(token);\n        return decoded.customerId || null;\n      } catch (error) {\n        console.error('Token解析失败:', error);\n        ElMessage.error('用户信息解析失败');\n        return null;\n      }\n    };\n\n    // 加载评价数据\n    const loadReviews = async () => {\n      try {\n        const customerId = getCustomerIdFromToken();\n        if (!customerId) {\n          ElMessage.error('无法获取用户信息');\n          return;\n        }\n\n        // 从后端获取评价列表\n        const response = await axios.get(`http://algorineko.top:8080/api/customer/review/customer/${customerId}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n\n        // 获取本地存储的商品快照\n        const savedReviews = JSON.parse(localStorage.getItem('productReviews') || '[]');\n\n        // 合并数据：后端返回的评价数据 + 本地存储的商品快照\n        reviews.value = response.data.map(apiReview => {\n          // 查找本地存储中对应的评价（如果有）\n          const localReview = savedReviews.find(r => r.orderItemId === apiReview.orderItemId);\n\n          // 使用本地存储的商品快照（如果存在）\n          const itemSnapshot = localReview?.itemSnapshot || {};\n          return {\n            ...apiReview,\n            content: apiReview.comment,\n            // 为了兼容原有模板\n            date: localReview?.date || new Date().toLocaleString(),\n            // 保留原有日期\n            item: {\n              id: itemSnapshot.id || 0,\n              name: itemSnapshot.name || '商品信息缺失',\n              price: itemSnapshot.price || 0,\n              quantity: itemSnapshot.quantity || 1,\n              image: itemSnapshot.image || '/placeholder-product.jpg'\n            }\n          };\n        });\n      } catch (error) {\n        console.error('加载评价失败:', error);\n        ElMessage.error('加载评价失败');\n        reviews.value = [];\n      }\n    };\n    const deleteReview = async review => {\n      try {\n        await ElMessageBox.confirm('确定要删除这个评价吗？删除后无法恢复', '警告', {\n          confirmButtonText: '确定删除',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n\n        // 调用后端API删除评价 - 使用正确的URL格式\n        await axios.delete(`http://algorineko.top:8080/api/customer/review/${review.reviewId}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n\n        // 从本地存储中移除商品快照\n        const savedReviews = JSON.parse(localStorage.getItem('productReviews') || '[]');\n        const newReviews = savedReviews.filter(r => r.orderItemId !== review.orderItemId);\n        localStorage.setItem('productReviews', JSON.stringify(newReviews));\n\n        // 重新加载评价\n        loadReviews();\n        ElMessage.success('删除成功');\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除评价失败:', error);\n          ElMessage.error('删除评价失败');\n        }\n      }\n    };\n    onMounted(loadReviews);\n    const __returned__ = {\n      reviews,\n      parseJwt,\n      token,\n      username,\n      getCustomerIdFromToken,\n      loadReviews,\n      deleteReview,\n      ref,\n      onMounted,\n      computed,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","ElMessage","ElMessageBox","axios","reviews","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","e","console","error","localStorage","getItem","username","payload","sub","getCustomerIdFromToken","decoded","customerId","loadReviews","response","get","headers","savedReviews","value","data","apiReview","localReview","find","r","orderItemId","itemSnapshot","content","comment","date","Date","toLocaleString","item","id","name","price","quantity","image","deleteReview","review","confirm","confirmButtonText","cancelButtonText","type","delete","reviewId","newReviews","filter","setItem","stringify","success"],"sources":["E:/实验例子/project/src/components/UserReviews.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-reviews\">\r\n    <h2>评价管理</h2>\r\n    \r\n    <el-table :data=\"reviews\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"orderItemId\" label=\"订单项ID\" width=\"120\" />\r\n      \r\n      <el-table-column label=\"商品信息\">\r\n        <template #default=\"{ row }\">\r\n          <div class=\"product-list\">\r\n            <div class=\"product-item\">\r\n              <router-link :to=\"`/buyer/${username}/product/${row.item.id}`\">\r\n                <el-image \r\n                  :src=\"row.item.image || '/placeholder-product.jpg'\"\r\n                  style=\"width: 60px; height: 60px;\"\r\n                  fit=\"cover\"\r\n                />\r\n              </router-link>\r\n              <div class=\"product-details\">\r\n                <router-link :to=\"`/buyer/${username}/product/${row.item.id}`\" class=\"product-name\">\r\n                  {{ row.item.name || '商品信息缺失' }}\r\n                </router-link>\r\n                <div class=\"product-price\">¥{{ (row.item.price || 0).toFixed(2) }} × {{ row.item.quantity || 1 }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      \r\n      <el-table-column label=\"评分\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-rate \r\n            v-model=\"scope.row.rating\"\r\n            disabled\r\n            show-score\r\n            text-color=\"#ff9900\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n      \r\n      <el-table-column prop=\"comment\" label=\"评价内容\" />\r\n      \r\n      <el-table-column prop=\"date\" label=\"评价时间\" width=\"180\" />\r\n      \r\n      <el-table-column label=\"操作\" width=\"150\">\r\n        <template #default=\"{ row }\">\r\n          <el-button type=\"danger\" size=\"small\" @click=\"deleteReview(row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-empty \r\n      v-if=\"reviews.length === 0\" \r\n      description=\"暂无评价记录\"\r\n      class=\"empty-tip\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\nconst reviews = ref([])\r\n\r\n// JWT 解析函数\r\nconst parseJwt = (token) => {\r\n  try {\r\n    const base64Url = token.split('.')[1]\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/')\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n        .join('')\r\n    )\r\n    return JSON.parse(jsonPayload)\r\n  } catch (e) {\r\n    console.error('Token解析失败:', e)\r\n    return null\r\n  }\r\n}\r\n\r\n// 从token获取用户名\r\nconst token = localStorage.getItem('token')\r\nconst username = computed(() => {\r\n  if (token) {\r\n    const payload = parseJwt(token)\r\n    return payload.sub || 'guest'\r\n  }\r\n  return 'guest'\r\n})\r\n\r\n// 从Token获取用户ID\r\nconst getCustomerIdFromToken = () => {\r\n  const token = localStorage.getItem('token')\r\n  if (!token) {\r\n    ElMessage.error('用户未登录，请先登录')\r\n    return null\r\n  }\r\n  try {\r\n    const decoded = parseJwt(token)\r\n    return decoded.customerId || null\r\n  } catch (error) {\r\n    console.error('Token解析失败:', error)\r\n    ElMessage.error('用户信息解析失败')\r\n    return null\r\n  }\r\n}\r\n\r\n// 加载评价数据\r\nconst loadReviews = async () => {\r\n  try {\r\n    const customerId = getCustomerIdFromToken()\r\n    if (!customerId) {\r\n      ElMessage.error('无法获取用户信息')\r\n      return\r\n    }\r\n    \r\n    // 从后端获取评价列表\r\n    const response = await axios.get(\r\n      `http://algorineko.top:8080/api/customer/review/customer/${customerId}`,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      }\r\n    )\r\n    \r\n    // 获取本地存储的商品快照\r\n    const savedReviews = JSON.parse(localStorage.getItem('productReviews') || '[]')\r\n    \r\n    // 合并数据：后端返回的评价数据 + 本地存储的商品快照\r\n    reviews.value = response.data.map(apiReview => {\r\n      // 查找本地存储中对应的评价（如果有）\r\n      const localReview = savedReviews.find(r => \r\n        r.orderItemId === apiReview.orderItemId\r\n      )\r\n      \r\n      // 使用本地存储的商品快照（如果存在）\r\n      const itemSnapshot = localReview?.itemSnapshot || {}\r\n      \r\n      return {\r\n        ...apiReview,\r\n        content: apiReview.comment, // 为了兼容原有模板\r\n        date: localReview?.date || new Date().toLocaleString(), // 保留原有日期\r\n        item: {\r\n          id: itemSnapshot.id || 0,\r\n          name: itemSnapshot.name || '商品信息缺失',\r\n          price: itemSnapshot.price || 0,\r\n          quantity: itemSnapshot.quantity || 1,\r\n          image: itemSnapshot.image || '/placeholder-product.jpg'\r\n        }\r\n      }\r\n    })\r\n    \r\n  } catch (error) {\r\n    console.error('加载评价失败:', error)\r\n    ElMessage.error('加载评价失败')\r\n    reviews.value = []\r\n  }\r\n}\r\n\r\nconst deleteReview = async (review) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要删除这个评价吗？删除后无法恢复',\r\n      '警告',\r\n      {\r\n        confirmButtonText: '确定删除',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    // 调用后端API删除评价 - 使用正确的URL格式\r\n    await axios.delete(\r\n      `http://algorineko.top:8080/api/customer/review/${review.reviewId}`,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      }\r\n    )\r\n    \r\n    // 从本地存储中移除商品快照\r\n    const savedReviews = JSON.parse(localStorage.getItem('productReviews') || '[]')\r\n    const newReviews = savedReviews.filter(r => \r\n      r.orderItemId !== review.orderItemId\r\n    )\r\n    localStorage.setItem('productReviews', JSON.stringify(newReviews))\r\n    \r\n    // 重新加载评价\r\n    loadReviews()\r\n    ElMessage.success('删除成功')\r\n    \r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      console.error('删除评价失败:', error)\r\n      ElMessage.error('删除评价失败')\r\n    }\r\n  }\r\n}\r\n\r\nonMounted(loadReviews)\r\n</script>\r\n\r\n<style scoped>\r\n.user-reviews {\r\n  padding: 20px;\r\n  background: #fff;\r\n}\r\n\r\n.empty-tip {\r\n  margin-top: 50px;\r\n}\r\n\r\n.product-list {\r\n  padding: 10px 0;\r\n}\r\n\r\n.product-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 10px 0;\r\n}\r\n\r\n.product-details {\r\n  flex: 1;\r\n}\r\n\r\n.product-name {\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n  color: #606266;\r\n  text-decoration: none;\r\n  display: block;\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.product-name:hover {\r\n  color: #409eff;\r\n  text-decoration: underline;\r\n}\r\n\r\n.product-price {\r\n  color: #f56c6c;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 图片链接样式 */\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\n/* 图片悬停效果 */\r\n.el-image {\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.el-image:hover {\r\n  transform: scale(1.05);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}