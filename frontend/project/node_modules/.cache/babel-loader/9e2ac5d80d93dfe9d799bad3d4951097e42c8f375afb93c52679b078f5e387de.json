{"ast":null,"code":"import { ElMessage } from 'element-plus';\nimport { useCartStore } from '@/stores/cart';\nimport { storeToRefs } from 'pinia';\nexport default {\n  __name: 'ShoppingCart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const cartStore = useCartStore();\n    const {\n      items: cartItems,\n      totalPrice\n    } = storeToRefs(cartStore);\n    const updateQuantity = item => {\n      if (!item?.id) {\n        ElMessage.error('无效的商品数据');\n        return;\n      }\n      if (item.quantity < 1) {\n        cartStore.removeItem(item.id);\n        ElMessage.warning('商品已移除');\n      }\n    };\n    const removeItem = itemId => {\n      if (!itemId) {\n        ElMessage.error('无效操作');\n        return;\n      }\n      cartStore.removeItem(itemId);\n      ElMessage.success('已移除商品');\n    };\n    const __returned__ = {\n      cartStore,\n      cartItems,\n      totalPrice,\n      updateQuantity,\n      removeItem,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useCartStore() {\n        return useCartStore;\n      },\n      get storeToRefs() {\n        return storeToRefs;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ElMessage","useCartStore","storeToRefs","cartStore","items","cartItems","totalPrice","updateQuantity","item","id","error","quantity","removeItem","warning","itemId","success"],"sources":["E:/实验例子/project/src/components/ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shopping-cart\">\r\n    <!-- 添加空值保护 -->\r\n    <h2>购物车 ({{ cartItems?.length || 0 }})</h2>\r\n    \r\n    <!-- 添加加载状态判断 -->\r\n    <el-table \r\n      :data=\"cartItems\"\r\n      v-if=\"cartItems?.length > 0\"\r\n      border\r\n      style=\"width: 100%\"\r\n    >\r\n      <!-- 商品列 -->\r\n      <el-table-column label=\"商品\" width=\"300\">\r\n        <template #default=\"scope\">\r\n          <div class=\"product-info\">\r\n            <el-image \r\n              :src=\"scope.row?.image || '/placeholder-product.jpg'\"\r\n              width=\"80\"\r\n            />\r\n            <span>{{ scope.row?.name || '未知商品' }}</span>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 单价列 -->\r\n      <el-table-column label=\"单价\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          ¥{{ scope.row?.price?.toFixed(2) || '0.00' }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 数量列 -->\r\n      <el-table-column label=\"数量\" width=\"150\">\r\n        <template #default=\"scope\">\r\n          <el-input-number \r\n            v-model=\"scope.row.quantity\"\r\n            :min=\"1\"\r\n            :max=\"99\"\r\n            @change=\"updateQuantity(scope.row)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 操作列 -->\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"removeItem(scope.row?.id)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 空购物车提示 -->\r\n    <el-empty\r\n      v-else\r\n      description=\"您的购物车还是空的，快去选购商品吧！\"\r\n      class=\"empty-tip\"\r\n    />\r\n\r\n    <!-- 结算区域 -->\r\n    <div class=\"checkout\" v-if=\"cartItems?.length > 0\">\r\n      <div class=\"total\">总计：¥{{ totalPrice?.toFixed(2) || '0.00' }}</div>\r\n      <el-button type=\"primary\" size=\"large\">去结算</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\nimport { storeToRefs } from 'pinia'\r\n\r\nconst cartStore = useCartStore()\r\nconst { items: cartItems, totalPrice } = storeToRefs(cartStore)\r\n\r\nconst updateQuantity = (item) => {\r\n  if (!item?.id) {\r\n    ElMessage.error('无效的商品数据')\r\n    return\r\n  }\r\n  if (item.quantity < 1) {\r\n    cartStore.removeItem(item.id)\r\n    ElMessage.warning('商品已移除')\r\n  }\r\n}\r\n\r\nconst removeItem = (itemId) => {\r\n  if (!itemId) {\r\n    ElMessage.error('无效操作')\r\n    return\r\n  }\r\n  cartStore.removeItem(itemId)\r\n  ElMessage.success('已移除商品')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.checkout {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 30px;\r\n}\r\n\r\n.total {\r\n  font-size: 20px;\r\n  color: #f56c6c;\r\n}\r\n\r\n.empty-tip {\r\n  margin-top: 50px;\r\n  padding: 40px 0;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n</style>"],"mappings":"AAyEA,SAASA,SAAS,QAAQ,cAAc;AACxC,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,WAAW,QAAQ,OAAO;;;;;;;IAEnC,MAAMC,SAAS,GAAGF,YAAY,CAAC,CAAC;IAChC,MAAM;MAAEG,KAAK,EAAEC,SAAS;MAAEC;IAAW,CAAC,GAAGJ,WAAW,CAACC,SAAS,CAAC;IAE/D,MAAMI,cAAc,GAAIC,IAAI,IAAK;MAC/B,IAAI,CAACA,IAAI,EAAEC,EAAE,EAAE;QACbT,SAAS,CAACU,KAAK,CAAC,SAAS,CAAC;QAC1B;MACF;MACA,IAAIF,IAAI,CAACG,QAAQ,GAAG,CAAC,EAAE;QACrBR,SAAS,CAACS,UAAU,CAACJ,IAAI,CAACC,EAAE,CAAC;QAC7BT,SAAS,CAACa,OAAO,CAAC,OAAO,CAAC;MAC5B;IACF,CAAC;IAED,MAAMD,UAAU,GAAIE,MAAM,IAAK;MAC7B,IAAI,CAACA,MAAM,EAAE;QACXd,SAAS,CAACU,KAAK,CAAC,MAAM,CAAC;QACvB;MACF;MACAP,SAAS,CAACS,UAAU,CAACE,MAAM,CAAC;MAC5Bd,SAAS,CAACe,OAAO,CAAC,OAAO,CAAC;IAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}