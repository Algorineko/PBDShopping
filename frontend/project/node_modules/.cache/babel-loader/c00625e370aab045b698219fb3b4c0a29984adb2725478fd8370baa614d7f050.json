{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://ajax-api.itheima.net',\n  withCredentials: false,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  login(user) {\n    // 本地验证逻辑\n    const roles = ['business', 'buyer', 'admin'];\n    for (const role of roles) {\n      const users = JSON.parse(localStorage.getItem(`${role}Users`) || '[]');\n      const foundUser = users.find(u => u.userId === user.userId && u.password === user.password);\n      if (foundUser) {\n        return Promise.resolve({\n          data: {\n            token: 'simulated-token',\n            userId: foundUser.userId,\n            userName: foundUser.userName,\n            role: foundUser.role\n          }\n        });\n      }\n    }\n    return Promise.reject(new Error('用户ID或密码错误'));\n  },\n  register(user) {\n    // 本地存储逻辑\n    return new Promise((resolve, reject) => {\n      const key = `${user.role}Users`;\n      const users = JSON.parse(localStorage.getItem(key) || []);\n      if (users.some(u => u.userId === user.userId)) {\n        reject(new Error('用户ID已存在'));\n        return;\n      }\n      users.push({\n        userId: user.userId,\n        userName: user.userName,\n        password: user.password,\n        role: user.role\n      });\n      localStorage.setItem(key, JSON.stringify(users));\n      resolve({\n        data: '注册成功'\n      });\n    });\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","withCredentials","headers","Accept","login","user","roles","role","users","JSON","parse","localStorage","getItem","foundUser","find","u","userId","password","Promise","resolve","data","token","userName","reject","Error","register","key","some","push","setItem","stringify"],"sources":["E:/实验例子/project/src/services/auth.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://ajax-api.itheima.net',\r\n  withCredentials: false,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\nexport default {\r\n  login(user) {\r\n    // 本地验证逻辑\r\n    const roles = ['business', 'buyer', 'admin']\r\n    for (const role of roles) {\r\n      const users = JSON.parse(localStorage.getItem(`${role}Users`) || '[]')\r\n      const foundUser = users.find(u => \r\n        u.userId === user.userId && u.password === user.password\r\n      )\r\n      if (foundUser) {\r\n        return Promise.resolve({\r\n          data: {\r\n            token: 'simulated-token',\r\n            userId: foundUser.userId,\r\n            userName: foundUser.userName,\r\n            role: foundUser.role\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return Promise.reject(new Error('用户ID或密码错误'))\r\n  },\r\n\r\n  register(user) {\r\n    // 本地存储逻辑\r\n    return new Promise((resolve, reject) => {\r\n      const key = `${user.role}Users`\r\n      const users = JSON.parse(localStorage.getItem(key) || [])\r\n      \r\n      if (users.some(u => u.userId === user.userId)) {\r\n        reject(new Error('用户ID已存在'))\r\n        return\r\n      }\r\n\r\n      users.push({\r\n        userId: user.userId,\r\n        userName: user.userName,\r\n        password: user.password,\r\n        role: user.role\r\n      })\r\n      \r\n      localStorage.setItem(key, JSON.stringify(users))\r\n      resolve({ data: '注册成功' })\r\n    })\r\n  }\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,6BAA6B;EACtCC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAkB;IAC1B,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe;EACbC,KAAKA,CAACC,IAAI,EAAE;IACV;IACA,MAAMC,KAAK,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;IAC5C,KAAK,MAAMC,IAAI,IAAID,KAAK,EAAE;MACxB,MAAME,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,GAAGL,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC;MACtE,MAAMM,SAAS,GAAGL,KAAK,CAACM,IAAI,CAACC,CAAC,IAC5BA,CAAC,CAACC,MAAM,KAAKX,IAAI,CAACW,MAAM,IAAID,CAAC,CAACE,QAAQ,KAAKZ,IAAI,CAACY,QAClD,CAAC;MACD,IAAIJ,SAAS,EAAE;QACb,OAAOK,OAAO,CAACC,OAAO,CAAC;UACrBC,IAAI,EAAE;YACJC,KAAK,EAAE,iBAAiB;YACxBL,MAAM,EAAEH,SAAS,CAACG,MAAM;YACxBM,QAAQ,EAAET,SAAS,CAACS,QAAQ;YAC5Bf,IAAI,EAAEM,SAAS,CAACN;UAClB;QACF,CAAC,CAAC;MACJ;IACF;IACA,OAAOW,OAAO,CAACK,MAAM,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;EAC/C,CAAC;EAEDC,QAAQA,CAACpB,IAAI,EAAE;IACb;IACA,OAAO,IAAIa,OAAO,CAAC,CAACC,OAAO,EAAEI,MAAM,KAAK;MACtC,MAAMG,GAAG,GAAG,GAAGrB,IAAI,CAACE,IAAI,OAAO;MAC/B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACc,GAAG,CAAC,IAAI,EAAE,CAAC;MAEzD,IAAIlB,KAAK,CAACmB,IAAI,CAACZ,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKX,IAAI,CAACW,MAAM,CAAC,EAAE;QAC7CO,MAAM,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC5B;MACF;MAEAhB,KAAK,CAACoB,IAAI,CAAC;QACTZ,MAAM,EAAEX,IAAI,CAACW,MAAM;QACnBM,QAAQ,EAAEjB,IAAI,CAACiB,QAAQ;QACvBL,QAAQ,EAAEZ,IAAI,CAACY,QAAQ;QACvBV,IAAI,EAAEF,IAAI,CAACE;MACb,CAAC,CAAC;MAEFI,YAAY,CAACkB,OAAO,CAACH,GAAG,EAAEjB,IAAI,CAACqB,SAAS,CAACtB,KAAK,CAAC,CAAC;MAChDW,OAAO,CAAC;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}