{"ast":null,"code":"import { ref, reactive, computed, onMounted, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\n\n// 响应式数据\n\nexport default {\n  __name: 'UserProfile',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userData = ref({\n      username: '',\n      address: ''\n    });\n    const showDialog = ref(false);\n    const formRef = ref(null); // 明确初始化表单引用\n\n    // 表单数据\n    const editForm = reactive({\n      username: '',\n      address: ''\n    });\n\n    // 验证规则\n    const formRules = {\n      username: [{\n        required: true,\n        message: '用户名不能为空',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 20,\n        message: '长度需在2-20个字符之间',\n        trigger: 'blur'\n      }],\n      address: [{\n        required: true,\n        message: '收货地址不能为空',\n        trigger: 'blur'\n      }, {\n        max: 100,\n        message: '最多可输入100个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 计算属性\n    const currentUsername = computed(() => userData.value.username || '未设置');\n    const currentAddress = computed(() => userData.value.address || '暂无收货地址');\n\n    // 生命周期钩子\n    onMounted(() => {\n      loadLocalData();\n    });\n\n    // 方法实现\n    const loadLocalData = () => {\n      try {\n        const savedData = localStorage.getItem('userProfile');\n        if (savedData) {\n          userData.value = JSON.parse(savedData);\n        }\n      } catch (error) {\n        ElMessage.error('本地数据加载失败');\n      }\n    };\n    const openEditDialog = () => {\n      editForm.username = userData.value.username;\n      editForm.address = userData.value.address;\n      showDialog.value = true;\n\n      // 使用nextTick确保DOM更新完成\n      nextTick(() => {\n        if (formRef.value?.clearValidate) {\n          formRef.value.clearValidate(); // 安全调用方法\n        }\n      });\n    };\n    const submitForm = async () => {\n      try {\n        // 执行表单验证\n        const valid = await formRef.value.validate();\n        if (!valid) return;\n\n        // 更新数据\n        userData.value = {\n          ...editForm\n        };\n        localStorage.setItem('userProfile', JSON.stringify(userData.value));\n        ElMessage.success('修改成功');\n        showDialog.value = false;\n      } catch (error) {\n        ElMessage.warning('请正确填写表单');\n      }\n    };\n    const __returned__ = {\n      userData,\n      showDialog,\n      formRef,\n      editForm,\n      formRules,\n      currentUsername,\n      currentAddress,\n      loadLocalData,\n      openEditDialog,\n      submitForm,\n      ref,\n      reactive,\n      computed,\n      onMounted,\n      nextTick,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","nextTick","ElMessage","userData","username","address","showDialog","formRef","editForm","formRules","required","message","trigger","min","max","currentUsername","value","currentAddress","loadLocalData","savedData","localStorage","getItem","JSON","parse","error","openEditDialog","clearValidate","submitForm","valid","validate","setItem","stringify","success","warning"],"sources":["E:/实验例子/project/src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <h2>我的信息</h2>\r\n    \r\n    <div class=\"info-card\">\r\n      <div class=\"info-item\">\r\n        <label>用户名：</label>\r\n        <span class=\"info-content\">{{ currentUsername }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>收货地址：</label>\r\n        <span class=\"info-content\">{{ currentAddress }}</span>\r\n      </div>\r\n      <el-button \r\n        type=\"primary\" \r\n        @click=\"openEditDialog\"\r\n        class=\"edit-button\"\r\n      >\r\n        编辑信息\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-dialog\r\n      v-model=\"showDialog\"\r\n      title=\"修改个人信息\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"formRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"用户名：\" prop=\"username\">\r\n          <el-input\r\n            v-model=\"editForm.username\"\r\n            placeholder=\"请输入2-20位用户名\"\r\n            clearable\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收货地址：\" prop=\"address\">\r\n          <el-input\r\n            v-model=\"editForm.address\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入详细收货地址\"\r\n            maxlength=\"100\"\r\n            show-word-limit\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template #footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button @click=\"showDialog = false\">取消</el-button>\r\n          <el-button \r\n            type=\"primary\"\r\n            @click=\"submitForm\"\r\n          >\r\n            确认修改\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted, nextTick } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 响应式数据\r\nconst userData = ref({\r\n  username: '',\r\n  address: ''\r\n})\r\n\r\nconst showDialog = ref(false)\r\nconst formRef = ref(null) // 明确初始化表单引用\r\n\r\n// 表单数据\r\nconst editForm = reactive({\r\n  username: '',\r\n  address: ''\r\n})\r\n\r\n// 验证规则\r\nconst formRules = {\r\n  username: [\r\n    { required: true, message: '用户名不能为空', trigger: 'blur' },\r\n    { min: 2, max: 20, message: '长度需在2-20个字符之间', trigger: 'blur' }\r\n  ],\r\n  address: [\r\n    { required: true, message: '收货地址不能为空', trigger: 'blur' },\r\n    { max: 100, message: '最多可输入100个字符', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 计算属性\r\nconst currentUsername = computed(() => \r\n  userData.value.username || '未设置'\r\n)\r\n\r\nconst currentAddress = computed(() =>\r\n  userData.value.address || '暂无收货地址'\r\n)\r\n\r\n// 生命周期钩子\r\nonMounted(() => {\r\n  loadLocalData()\r\n})\r\n\r\n// 方法实现\r\nconst loadLocalData = () => {\r\n  try {\r\n    const savedData = localStorage.getItem('userProfile')\r\n    if (savedData) {\r\n      userData.value = JSON.parse(savedData)\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('本地数据加载失败')\r\n  }\r\n}\r\n\r\nconst openEditDialog = () => {\r\n  editForm.username = userData.value.username\r\n  editForm.address = userData.value.address\r\n  showDialog.value = true\r\n\r\n  // 使用nextTick确保DOM更新完成\r\n  nextTick(() => {\r\n    if (formRef.value?.clearValidate) {\r\n      formRef.value.clearValidate() // 安全调用方法\r\n    }\r\n  })\r\n}\r\n\r\nconst submitForm = async () => {\r\n  try {\r\n    // 执行表单验证\r\n    const valid = await formRef.value.validate()\r\n    if (!valid) return\r\n\r\n    // 更新数据\r\n    userData.value = { ...editForm }\r\n    localStorage.setItem('userProfile', JSON.stringify(userData.value))\r\n    \r\n    ElMessage.success('修改成功')\r\n    showDialog.value = false\r\n  } catch (error) {\r\n    ElMessage.warning('请正确填写表单')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.info-card {\r\n  background: #fff;\r\n  padding: 24px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-item label {\r\n  font-weight: 500;\r\n  color: #606266;\r\n  width: 100px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.info-content {\r\n  flex: 1;\r\n  word-break: break-word;\r\n  color: #303133;\r\n}\r\n\r\n.edit-button {\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  max-width: 200px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .info-item {\r\n    flex-direction: column;\r\n    gap: 8px;\r\n  }\r\n  \r\n  .info-item label {\r\n    width: auto;\r\n  }\r\n  \r\n  .edit-button {\r\n    max-width: none;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}