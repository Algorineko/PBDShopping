{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"button-group\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"用户登录\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"用户名:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.loginForm.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginForm.username]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"密码:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.loginForm.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginForm.password]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"身份:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.loginForm.role = $event),\n    required: \"\"\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"option\", {\n    value: \"customer\"\n  }, \"顾客\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"merchant\"\n  }, \"商家\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"admin\"\n  }, \"管理员\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.loginForm.role]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"登录\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.goToRegister && $options.goToRegister(...args))\n  }, \"注册\")]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","handleLogin","_hoisted_2","type","$event","$data","loginForm","username","required","_hoisted_3","password","_hoisted_4","role","value","_hoisted_5","onClick","goToRegister","errorMessage","_hoisted_6","_toDisplayString","_createCommentVNode"],"sources":["E:\\实验例子\\project\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>用户登录</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div class=\"form-group\">\r\n        <label>用户名:</label>\r\n        <input type=\"text\" v-model=\"loginForm.username\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>密码:</label>\r\n        <input type=\"password\" v-model=\"loginForm.password\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>身份:</label>\r\n        <select v-model=\"loginForm.role\" required>\r\n          <option value=\"customer\">顾客</option>\r\n          <option value=\"merchant\">商家</option>\r\n          <option value=\"admin\">管理员</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button type=\"submit\">登录</button>\r\n        <button type=\"button\" @click=\"goToRegister\">注册</button>\r\n      </div>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">\r\n        {{ errorMessage }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/auth'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n        role: 'customer'\r\n      },\r\n      errorMessage: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      this.errorMessage = ''\r\n      \r\n      try {\r\n        console.log('发送登录请求:', this.loginForm)\r\n        const response = await authService.login(this.loginForm)\r\n        console.log('token:', response.token)\r\n        // 打印完整响应以便调试\r\n        console.log('完整登录响应:', response)\r\n        \r\n        // 更灵活地处理响应数据\r\n        const responseData = response.data || {}\r\n        \r\n        // 提取token和角色信息\r\n        const token = responseData.token || \r\n                      responseData.accessToken || \r\n                      responseData.data?.token;\r\n        console .log('token1:', responseData.token) \r\n        console .log('token2:', responseData.accessToken) \r\n        console .log('token3:', responseData.data?.token) \r\n        // 使用用户名作为用户标识\r\n        const username = responseData.username || \r\n                         responseData.data?.username || \r\n                         this.loginForm.username; // 如果后端未返回，使用前端输入的值\r\n        \r\n        const role = responseData.role || \r\n                     responseData.userType || \r\n                     responseData.data?.userType ||\r\n                     this.loginForm.role; // 如果后端未返回，使用前端选择的值\r\n        \r\n        // 调试输出获取的值\r\n        console.log('提取的登录信息:', { token, username, role })\r\n        \r\n        if (!token) {\r\n          throw new Error('登录响应缺少token字段')\r\n        }\r\n        \r\n        if (!username) {\r\n          throw new Error('无法获取用户名信息')\r\n        }\r\n        \r\n        // 存储认证信息（使用username作为用户标识）\r\n        localStorage.setItem('token', token)\r\n        localStorage.setItem('username', username)\r\n        localStorage.setItem('role', role)\r\n\r\n        // 根据角色跳转到对应页面，并在路由中携带用户名\r\n        switch (role) {\r\n          case 'merchant':\r\n            this.$router.push(`/business/${username}`)\r\n            break\r\n          case 'customer':\r\n            this.$router.push(`/buyer/${username}`)\r\n            break\r\n          case 'admin':\r\n            this.$router.push('/admin')\r\n            break\r\n          default:\r\n            console.warn('未知用户角色:', role)\r\n            alert(`未知用户角色: ${role}，将跳转到默认页面`)\r\n            this.$router.push('/')\r\n        }\r\n      } catch (error) {\r\n        console.error('登录错误详情:', error)\r\n        \r\n        let message = '登录失败，请稍后再试'\r\n        \r\n        if (error.response) {\r\n          // 服务器返回了错误响应\r\n          const status = error.response.status\r\n          const data = error.response.data || {}\r\n          \r\n          // 尝试从错误响应中获取更具体的消息\r\n          message = data.message || \r\n                    data.error || \r\n                    data.msg || \r\n                    `服务器返回错误: ${status}`\r\n          \r\n          // 添加特定状态码的默认消息\r\n          if (status === 400 && !message.includes('请求参数错误')) {\r\n            message = '请求参数错误: ' + message\r\n          } else if (status === 401 && !message.includes('用户名或密码错误')) {\r\n            message = '认证失败: ' + message\r\n          } else if (status === 403) {\r\n            message = '无权限访问: ' + message\r\n          } else if (status === 404) {\r\n            message = 'API接口不存在: ' + message\r\n          } else if (status >= 500) {\r\n            message = '服务器错误: ' + message\r\n          }\r\n        } else if (error.request) {\r\n          // 请求已发送但无响应\r\n          message = '服务器无响应，请检查网络连接'\r\n        } else {\r\n          // 请求未发送或处理逻辑错误\r\n          message = error.message || '请求处理失败'\r\n        }\r\n        \r\n        this.errorMessage = message\r\n      }\r\n    },\r\n    goToRegister() {\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式保持不变 */\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  position: relative;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.button-group {\r\n  margin-top: 1.5rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\nbutton {\r\n  flex: 1;\r\n  padding: 0.5rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 1rem;\r\n  padding: 0.75rem;\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n  border-radius: 4px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAGnBA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;;EAQlBA,KAAK,EAAC;AAAc;;EApB/BC,GAAA;EAwB+BD,KAAK,EAAC;;;uBAvBnCE,mBAAA,CA2BM,OA3BNC,UA2BM,G,4BA1BJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAwBO;IAxBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAChCJ,mBAAA,CAGM,OAHNO,UAGM,G,0BAFJP,mBAAA,CAAmB,eAAZ,MAAI,sB,gBACXA,mBAAA,CAAyD;IAAlDQ,IAAI,EAAC,MAAM;IAN1B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMoCC,KAAA,CAAAC,SAAS,CAACC,QAAQ,GAAAH,MAAA;IAAEI,QAAQ,EAAR;iDAApBH,KAAA,CAAAC,SAAS,CAACC,QAAQ,E,KAEhDZ,mBAAA,CAGM,OAHNc,UAGM,G,0BAFJd,mBAAA,CAAkB,eAAX,KAAG,sB,gBACVA,mBAAA,CAA6D;IAAtDQ,IAAI,EAAC,UAAU;IAV9B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAUwCC,KAAA,CAAAC,SAAS,CAACI,QAAQ,GAAAN,MAAA;IAAEI,QAAQ,EAAR;iDAApBH,KAAA,CAAAC,SAAS,CAACI,QAAQ,E,KAEpDf,mBAAA,CAOM,OAPNgB,UAOM,G,0BANJhB,mBAAA,CAAkB,eAAX,KAAG,sB,gBACVA,mBAAA,CAIS;IAlBjB,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAcyBC,KAAA,CAAAC,SAAS,CAACM,IAAI,GAAAR,MAAA;IAAEI,QAAQ,EAAR;gCAC/Bb,mBAAA,CAAoC;IAA5BkB,KAAK,EAAC;EAAU,GAAC,IAAE,qBAC3BlB,mBAAA,CAAoC;IAA5BkB,KAAK,EAAC;EAAU,GAAC,IAAE,qBAC3BlB,mBAAA,CAAkC;IAA1BkB,KAAK,EAAC;EAAO,GAAC,KAAG,oB,2CAHVR,KAAA,CAAAC,SAAS,CAACM,IAAI,E,KAMjCjB,mBAAA,CAGM,OAHNmB,UAGM,G,0BAFJnB,mBAAA,CAAiC;IAAzBQ,IAAI,EAAC;EAAQ,GAAC,IAAE,sBACxBR,mBAAA,CAAuD;IAA/CQ,IAAI,EAAC,QAAQ;IAAEY,OAAK,EAAAlB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAgB,YAAA,IAAAhB,QAAA,CAAAgB,YAAA,IAAAjB,IAAA,CAAY;KAAE,IAAE,E,GAErCM,KAAA,CAAAY,YAAY,I,cAAvBxB,mBAAA,CAEM,OAFNyB,UAEM,EAAAC,gBAAA,CADDd,KAAA,CAAAY,YAAY,oBAzBvBG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}