{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'UserOrders',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n\n    // 订单状态配置\n    const statusText = {\n      pending: '待付款',\n      shipped: '已发货',\n      completed: '已完成',\n      canceled: '已取消'\n    };\n    const statusType = {\n      pending: 'warning',\n      shipped: 'primary',\n      completed: 'success',\n      canceled: 'info'\n    };\n\n    // 筛选选项\n    const statusOptions = ref([{\n      value: 'all',\n      label: '全部状态'\n    }, {\n      value: 'pending',\n      label: '待付款'\n    }, {\n      value: 'shipped',\n      label: '已发货'\n    }, {\n      value: 'completed',\n      label: '已完成'\n    }]);\n\n    // 订单数据\n    const orders = ref([]);\n    const filterStatus = ref('all');\n    const filterDate = ref([]);\n    const total = ref(0);\n    const pageSize = ref(10);\n    const currentPage = ref(1);\n\n    // 模拟订单数据\n    const mockOrders = (page = 1) => {\n      const data = [];\n      const start = (page - 1) * pageSize.value;\n      for (let i = 0; i < pageSize.value; i++) {\n        data.push({\n          orderId: `2023100${start + i + 1}`,\n          createTime: `2023-10-${String(start + i + 1).padStart(2, '0')} 14:30:00`,\n          amount: Math.random() * 500 + 100,\n          status: Object.keys(statusText)[Math.floor(Math.random() * 4)]\n        });\n      }\n      return data;\n    };\n\n    // 加载订单\n    const loadOrders = async () => {\n      // 实际项目应调用API\n      orders.value = mockOrders(currentPage.value);\n      total.value = 50; // 模拟总条目数\n    };\n\n    // 查看订单详情\n    const viewDetail = orderId => {\n      router.push(`/buyer/order/${orderId}`);\n    };\n\n    // 支付订单\n    const payOrder = orderId => {\n      ElMessage.success(`模拟支付订单 ${orderId} 成功`);\n      orders.value = orders.value.map(order => order.orderId === orderId ? {\n        ...order,\n        status: 'shipped'\n      } : order);\n    };\n\n    // 分页处理\n    const handlePageChange = page => {\n      currentPage.value = page;\n      loadOrders();\n    };\n\n    // 初始化加载\n    onMounted(() => {\n      loadOrders();\n    });\n    const __returned__ = {\n      router,\n      statusText,\n      statusType,\n      statusOptions,\n      orders,\n      filterStatus,\n      filterDate,\n      total,\n      pageSize,\n      currentPage,\n      mockOrders,\n      loadOrders,\n      viewDetail,\n      payOrder,\n      handlePageChange,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","router","statusText","pending","shipped","completed","canceled","statusType","statusOptions","value","label","orders","filterStatus","filterDate","total","pageSize","currentPage","mockOrders","page","data","start","i","push","orderId","createTime","String","padStart","amount","Math","random","status","Object","keys","floor","loadOrders","viewDetail","payOrder","success","map","order","handlePageChange"],"sources":["E:/实验例子/project/src/components/UserOrders.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-orders\">\r\n    <h2>我的订单</h2>\r\n    \r\n    <!-- 订单筛选 -->\r\n    <div class=\"filter-section\">\r\n      <el-select v-model=\"filterStatus\" placeholder=\"全部状态\" @change=\"loadOrders\">\r\n        <el-option\r\n          v-for=\"status in statusOptions\"\r\n          :key=\"status.value\"\r\n          :label=\"status.label\"\r\n          :value=\"status.value\"\r\n        />\r\n      </el-select>\r\n      <el-date-picker\r\n        v-model=\"filterDate\"\r\n        type=\"daterange\"\r\n        range-separator=\"至\"\r\n        start-placeholder=\"开始日期\"\r\n        end-placeholder=\"结束日期\"\r\n        @change=\"loadOrders\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 订单列表 -->\r\n    <el-table :data=\"orders\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"orderId\" label=\"订单号\" width=\"200\" />\r\n      <el-table-column prop=\"createTime\" label=\"下单时间\" width=\"180\" />\r\n      <el-table-column label=\"金额\" width=\"120\" align=\"right\">\r\n        <template #default=\"{row}\">¥{{ row.amount.toFixed(2) }}</template>\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\" width=\"120\">\r\n        <template #default=\"{row}\">\r\n          <el-tag :type=\"statusType[row.status]\">\r\n            {{ statusText[row.status] }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"150\">\r\n        <template #default=\"{row}\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"viewDetail(row.orderId)\">\r\n            详情\r\n          </el-button>\r\n          <el-button \r\n            v-if=\"row.status === 'pending'\"\r\n            type=\"success\" \r\n            size=\"small\"\r\n            @click=\"payOrder(row.orderId)\"\r\n          >\r\n            付款\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        background\r\n        layout=\"prev, pager, next\"\r\n        :total=\"total\"\r\n        :page-size=\"pageSize\"\r\n        @current-change=\"handlePageChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst router = useRouter()\r\n\r\n// 订单状态配置\r\nconst statusText = {\r\n  pending: '待付款',\r\n  shipped: '已发货',\r\n  completed: '已完成',\r\n  canceled: '已取消'\r\n}\r\n\r\nconst statusType = {\r\n  pending: 'warning',\r\n  shipped: 'primary',\r\n  completed: 'success',\r\n  canceled: 'info'\r\n}\r\n\r\n// 筛选选项\r\nconst statusOptions = ref([\r\n  { value: 'all', label: '全部状态' },\r\n  { value: 'pending', label: '待付款' },\r\n  { value: 'shipped', label: '已发货' },\r\n  { value: 'completed', label: '已完成' }\r\n])\r\n\r\n// 订单数据\r\nconst orders = ref([])\r\nconst filterStatus = ref('all')\r\nconst filterDate = ref([])\r\nconst total = ref(0)\r\nconst pageSize = ref(10)\r\nconst currentPage = ref(1)\r\n\r\n// 模拟订单数据\r\nconst mockOrders = (page = 1) => {\r\n  const data = []\r\n  const start = (page - 1) * pageSize.value\r\n  for (let i = 0; i < pageSize.value; i++) {\r\n    data.push({\r\n      orderId: `2023100${start + i + 1}`,\r\n      createTime: `2023-10-${String(start + i + 1).padStart(2, '0')} 14:30:00`,\r\n      amount: Math.random() * 500 + 100,\r\n      status: Object.keys(statusText)[Math.floor(Math.random() * 4)]\r\n    })\r\n  }\r\n  return data\r\n}\r\n\r\n// 加载订单\r\nconst loadOrders = async () => {\r\n  // 实际项目应调用API\r\n  orders.value = mockOrders(currentPage.value)\r\n  total.value = 50 // 模拟总条目数\r\n}\r\n\r\n// 查看订单详情\r\nconst viewDetail = (orderId) => {\r\n  router.push(`/buyer/order/${orderId}`)\r\n}\r\n\r\n// 支付订单\r\nconst payOrder = (orderId) => {\r\n  ElMessage.success(`模拟支付订单 ${orderId} 成功`)\r\n  orders.value = orders.value.map(order => \r\n    order.orderId === orderId ? { ...order, status: 'shipped' } : order\r\n  )\r\n}\r\n\r\n// 分页处理\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page\r\n  loadOrders()\r\n}\r\n\r\n// 初始化加载\r\nonMounted(() => {\r\n  loadOrders()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.user-orders {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n}\r\n\r\n.filter-section {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n\r\n.el-tag {\r\n  margin: 2px 0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}