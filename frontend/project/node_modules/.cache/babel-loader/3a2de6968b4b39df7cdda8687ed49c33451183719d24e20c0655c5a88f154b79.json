{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { defineStore } from 'pinia';\nexport const useCartStore = defineStore('cart', () => {\n  // 确保初始化为数组\n  const items = ref(JSON.parse(localStorage.getItem('cart')) || []);\n\n  // 添加商品\n  const addItem = item => {\n    const existing = items.value.find(i => i.id === item.id);\n    existing ? existing.quantity += item.quantity : items.value.push(item);\n    persistCart();\n  };\n\n  // 移除商品\n  const removeItem = id => {\n    items.value = items.value.filter(i => i.id !== id);\n    persistCart();\n  };\n\n  // 持久化存储\n  const persistCart = () => {\n    localStorage.setItem('cart', JSON.stringify(items.value));\n  };\n\n  // 计算总价\n  const totalPrice = computed(() => items.value.reduce((sum, item) => sum + item.price * item.quantity, 0));\n  return {\n    items: computed(() => items.value || []),\n    // 确保返回数组\n    totalPrice,\n    addItem,\n    removeItem\n  };\n});","map":{"version":3,"names":["defineStore","useCartStore","items","ref","JSON","parse","localStorage","getItem","addItem","item","existing","value","find","i","id","quantity","push","persistCart","removeItem","filter","setItem","stringify","totalPrice","computed","reduce","sum","price"],"sources":["E:/实验例子/project/src/stores/cart.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\nexport const useCartStore = defineStore('cart', () => {\r\n  // 确保初始化为数组\r\n  const items = ref(JSON.parse(localStorage.getItem('cart')) || [])\r\n\r\n  // 添加商品\r\n  const addItem = (item) => {\r\n    const existing = items.value.find(i => i.id === item.id)\r\n    existing ? existing.quantity += item.quantity : items.value.push(item)\r\n    persistCart()\r\n  }\r\n\r\n  // 移除商品\r\n  const removeItem = (id) => {\r\n    items.value = items.value.filter(i => i.id !== id)\r\n    persistCart()\r\n  }\r\n\r\n  // 持久化存储\r\n  const persistCart = () => {\r\n    localStorage.setItem('cart', JSON.stringify(items.value))\r\n  }\r\n\r\n  // 计算总价\r\n  const totalPrice = computed(() => \r\n    items.value.reduce((sum, item) => sum + item.price * item.quantity, 0)\r\n  )\r\n\r\n  return { \r\n    items: computed(() => items.value || []), // 确保返回数组\r\n    totalPrice,\r\n    addItem,\r\n    removeItem\r\n  }\r\n})"],"mappings":";;;;;AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC,MAAM,EAAE,MAAM;EACpD;EACA,MAAME,KAAK,GAAGC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;;EAEjE;EACA,MAAMC,OAAO,GAAIC,IAAI,IAAK;IACxB,MAAMC,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;IACxDJ,QAAQ,GAAGA,QAAQ,CAACK,QAAQ,IAAIN,IAAI,CAACM,QAAQ,GAAGb,KAAK,CAACS,KAAK,CAACK,IAAI,CAACP,IAAI,CAAC;IACtEQ,WAAW,CAAC,CAAC;EACf,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIJ,EAAE,IAAK;IACzBZ,KAAK,CAACS,KAAK,GAAGT,KAAK,CAACS,KAAK,CAACQ,MAAM,CAACN,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKA,EAAE,CAAC;IAClDG,WAAW,CAAC,CAAC;EACf,CAAC;;EAED;EACA,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxBX,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEhB,IAAI,CAACiB,SAAS,CAACnB,KAAK,CAACS,KAAK,CAAC,CAAC;EAC3D,CAAC;;EAED;EACA,MAAMW,UAAU,GAAGC,QAAQ,CAAC,MAC1BrB,KAAK,CAACS,KAAK,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEhB,IAAI,KAAKgB,GAAG,GAAGhB,IAAI,CAACiB,KAAK,GAAGjB,IAAI,CAACM,QAAQ,EAAE,CAAC,CACvE,CAAC;EAED,OAAO;IACLb,KAAK,EAAEqB,QAAQ,CAAC,MAAMrB,KAAK,CAACS,KAAK,IAAI,EAAE,CAAC;IAAE;IAC1CW,UAAU;IACVd,OAAO;IACPU;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}