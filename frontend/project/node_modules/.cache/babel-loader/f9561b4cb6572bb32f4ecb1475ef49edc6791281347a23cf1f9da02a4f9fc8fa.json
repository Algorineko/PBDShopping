{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ElMessage } from 'element-plus';\nimport { useCartStore } from '@/stores/cart';\nimport { storeToRefs } from 'pinia';\nexport default {\n  __name: 'ShoppingCart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const cartStore = useCartStore();\n    const {\n      items: cartItems,\n      totalPrice,\n      selectedItems\n    } = storeToRefs(cartStore);\n    const selectedTotal = computed(() => cartStore.items.reduce((sum, item) => {\n      if (cartStore.selectedItems.has(item.id)) {\n        return sum + item.price * item.quantity;\n      }\n      return sum;\n    }, 0));\n    const checkout = () => {\n      const selectedProducts = cartStore.items.filter(item => cartStore.selectedItems.has(item.id));\n      // 生成订单逻辑（示例）\n      ElMessage.success('结算成功，已生成订单');\n      cartStore.clearSelected();\n    };\n    const __returned__ = {\n      cartStore,\n      cartItems,\n      totalPrice,\n      selectedItems,\n      selectedTotal,\n      checkout,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useCartStore() {\n        return useCartStore;\n      },\n      get storeToRefs() {\n        return storeToRefs;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ElMessage","useCartStore","storeToRefs","cartStore","items","cartItems","totalPrice","selectedItems","selectedTotal","computed","reduce","sum","item","has","id","price","quantity","checkout","selectedProducts","filter","success","clearSelected"],"sources":["E:/实验例子/project/src/components/ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shopping-cart\">\r\n    <h2>购物车 ({{ cartItems?.length || 0 }})</h2>\r\n    \r\n    <el-table \r\n      :data=\"cartItems\"\r\n      v-if=\"cartItems?.length > 0\"\r\n      border\r\n      style=\"width: 100%\"\r\n    >\r\n      <!-- 商品列 -->\r\n      <el-table-column label=\"商品\" width=\"300\">\r\n        <template #default=\"{ row }\">\r\n          <div class=\"product-info\" v-if=\"row\">\r\n            <router-link :to=\"`/buyer/product/${row.id}`\">\r\n              <el-image \r\n                :src=\"row.image || '/placeholder-product.jpg'\"\r\n                width=\"80\"\r\n                style=\"cursor: pointer\"\r\n              />\r\n            </router-link>\r\n            <router-link \r\n              :to=\"`/buyer/product/${row.id}`\"\r\n              class=\"product-link\"\r\n            >\r\n              {{ row.name || '未知商品' }}\r\n            </router-link>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 单价列 -->\r\n      <el-table-column label=\"单价\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          ¥{{ (row.price || 0).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 数量列 -->\r\n      <el-table-column label=\"数量\" width=\"150\">\r\n        <template #default=\"{ row }\">\r\n          <el-input-number \r\n            v-model=\"row.quantity\"\r\n            :min=\"1\"\r\n            :max=\"99\"\r\n            @change=\"updateQuantity(row)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 操作列 -->\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"removeItem(row?.id)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 空购物车提示 -->\r\n    <el-empty\r\n      v-else\r\n      description=\"您的购物车还是空的，快去选购商品吧！\"\r\n      class=\"empty-tip\"\r\n    />\r\n\r\n     <!-- 结算区域 -->\r\n     <div class=\"checkout\" v-if=\"cartItems?.length > 0\">\r\n      <div class=\"total\">总计：¥{{ (selectedTotal || 0).toFixed(2) }}</div>\r\n      <el-button \r\n        type=\"primary\" \r\n        size=\"large\"\r\n        @click=\"checkout\"\r\n        :disabled=\"selectedItems.size === 0\"\r\n      >\r\n        去结算\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\nimport { storeToRefs } from 'pinia'\r\n\r\nconst cartStore = useCartStore()\r\nconst { items: cartItems, totalPrice, selectedItems } = storeToRefs(cartStore)\r\n\r\nconst selectedTotal = computed(() => \r\n  cartStore.items.reduce((sum, item) => {\r\n    if (cartStore.selectedItems.has(item.id)) {\r\n      return sum + (item.price * item.quantity)\r\n    }\r\n    return sum\r\n  }, 0)\r\n)\r\n\r\nconst checkout = () => {\r\n  const selectedProducts = cartStore.items.filter(item => \r\n    cartStore.selectedItems.has(item.id)\r\n  )\r\n  // 生成订单逻辑（示例）\r\n  ElMessage.success('结算成功，已生成订单')\r\n  cartStore.clearSelected()\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.product-link {\r\n  color: #606266;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #409eff;\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.checkout {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 30px;\r\n}\r\n\r\n.total {\r\n  font-size: 20px;\r\n  color: #f56c6c;\r\n}\r\n\r\n.empty-tip {\r\n  margin-top: 50px;\r\n  padding: 40px 0;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n</style>"],"mappings":";;;AAsFA,SAASA,SAAS,QAAQ,cAAc;AACxC,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,WAAW,QAAQ,OAAO;;;;;;;IAEnC,MAAMC,SAAS,GAAGF,YAAY,CAAC,CAAC;IAChC,MAAM;MAAEG,KAAK,EAAEC,SAAS;MAAEC,UAAU;MAAEC;IAAc,CAAC,GAAGL,WAAW,CAACC,SAAS,CAAC;IAE9E,MAAMK,aAAa,GAAGC,QAAQ,CAAC,MAC7BN,SAAS,CAACC,KAAK,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MACpC,IAAIT,SAAS,CAACI,aAAa,CAACM,GAAG,CAACD,IAAI,CAACE,EAAE,CAAC,EAAE;QACxC,OAAOH,GAAG,GAAIC,IAAI,CAACG,KAAK,GAAGH,IAAI,CAACI,QAAS;MAC3C;MACA,OAAOL,GAAG;IACZ,CAAC,EAAE,CAAC,CACN,CAAC;IAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;MACrB,MAAMC,gBAAgB,GAAGf,SAAS,CAACC,KAAK,CAACe,MAAM,CAACP,IAAI,IAClDT,SAAS,CAACI,aAAa,CAACM,GAAG,CAACD,IAAI,CAACE,EAAE,CACrC,CAAC;MACD;MACAd,SAAS,CAACoB,OAAO,CAAC,YAAY,CAAC;MAC/BjB,SAAS,CAACkB,aAAa,CAAC,CAAC;IAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}