{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-section\"\n};\nconst _hoisted_2 = {\n  class: \"table-header\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-image\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"error-text\"\n};\nconst _hoisted_6 = {\n  class: \"image-upload-container\"\n};\nconst _hoisted_7 = {\n  class: \"image-preview-list\"\n};\nconst _hoisted_8 = {\n  class: \"image-actions\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"info-tip\"\n};\nimport { ref, computed, onMounted } from 'vue';\nimport { ElMessage, ElLoading } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  __name: 'ProductManagement',\n  setup(__props) {\n    const productFilter = ref({\n      keyword: ''\n    });\n    const products = ref([]);\n    const productDialogVisible = ref(false);\n    const currentProduct = ref({\n      productName: '',\n      categoryId: '',\n      price: 0,\n      description: '',\n      images: [\"\"]\n    });\n    const isEditing = ref(false);\n    const merchantId = ref(Number(localStorage.getItem('userId')));\n\n    // 分类选项\n    const categoryOptions = ref([{\n      id: \"1005000\",\n      name: \"居家\"\n    }, {\n      id: \"1005002\",\n      name: \"美食\"\n    }, {\n      id: \"1010000\",\n      name: \"服饰\"\n    }, {\n      id: \"1011000\",\n      name: \"母婴\"\n    }, {\n      id: \"1013001\",\n      name: \"个护\"\n    }, {\n      id: \"1019000\",\n      name: \"严选\"\n    }, {\n      id: \"1043000\",\n      name: \"数码\"\n    }, {\n      id: \"109243029\",\n      name: \"运动\"\n    }, {\n      id: \"19999999\",\n      name: \"杂项\"\n    }]);\n    const filteredProducts = computed(() => {\n      return (products.value || []).filter(p => (p?.productName?.toLowerCase() || '').includes(productFilter.value.keyword?.toLowerCase() || '')).map(p => ({\n        ...p,\n        price: Number(p.price) || 0\n      }));\n    });\n    const dialogTitle = computed(() => isEditing.value ? '编辑商品' : '新增商品');\n\n    // 根据分类ID获取分类名称\n    const getCategoryName = categoryId => {\n      const category = categoryOptions.value.find(cat => cat.id === categoryId);\n      return category ? category.name : categoryId || '未知分类';\n    };\n    const showAddDialog = () => {\n      currentProduct.value = {\n        productName: '',\n        categoryId: '',\n        price: 0,\n        description: '',\n        images: []\n      };\n      isEditing.value = false;\n      productDialogVisible.value = true;\n    };\n    const editProduct = product => {\n      if (!product?.productId) {\n        ElMessage.warning('无效的商品数据');\n        return;\n      }\n      currentProduct.value = {\n        ...product,\n        productId: product.productId\n      };\n      isEditing.value = true;\n      productDialogVisible.value = true;\n    };\n    const handleImageChange = file => {\n      if (!file) return;\n      // 检查文件大小，限制为2MB\n      const maxSize = 2 * 1024 * 1024; // 2MB\n      if (file.size > maxSize) {\n        ElMessage.error('图片大小不能超过2MB');\n        return;\n      }\n      // 检查图片数量，最多5张\n      if (currentProduct.value.images.length >= 5) {\n        ElMessage.error('最多只能上传5张图片');\n        return;\n      }\n      const rawFile = file.raw;\n      if (rawFile) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          currentProduct.value.images.push(e.target.result);\n        };\n        reader.readAsDataURL(rawFile);\n      }\n    };\n    const removeImage = index => {\n      currentProduct.value.images.splice(index, 1);\n    };\n    const saveProduct = async () => {\n      if (!currentProduct.value.productName?.trim()) {\n        ElMessage.error('商品名称不能为空');\n        return;\n      }\n      if (!currentProduct.value.categoryId) {\n        ElMessage.error('请选择商品分类');\n        return;\n      }\n      if (currentProduct.value.price < 0) {\n        ElMessage.error('价格不能为负数');\n        return;\n      }\n      let loadingInstance = null;\n      try {\n        loadingInstance = ElLoading.service({\n          lock: true,\n          text: '保存中...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n        if (isEditing.value) {\n          // 编辑商品\n          const response = await axios.put('http://algorineko.top:8080/api/merchant/product/update', {\n            productId: currentProduct.value.productId,\n            merchantId: merchantId.value,\n            productName: currentProduct.value.productName,\n            description: currentProduct.value.description || '',\n            price: currentProduct.value.price,\n            categoryId: currentProduct.value.categoryId\n          });\n          if (response.data.includes('成功')) {\n            // 更新成功后重新加载商品列表\n            ElMessage.success('商品更新成功');\n            productDialogVisible.value = false;\n            await loadProducts();\n          } else {\n            throw new Error(response.data || '商品更新失败');\n          }\n        } else {\n          // 新增商品\n          const response = await axios.post('http://algorineko.top:8080/api/merchant/product/add', {\n            merchantId: merchantId.value,\n            productName: currentProduct.value.productName,\n            description: currentProduct.value.description || '',\n            price: currentProduct.value.price,\n            categoryId: currentProduct.value.categoryId,\n            images: currentProduct.value.images.length > 0 ? currentProduct.value.images : [\"\"]\n          });\n          if (response.data.includes('成功')) {\n            // 新增成功后重新加载商品列表\n            ElMessage.success('商品添加成功');\n            productDialogVisible.value = false;\n            await loadProducts();\n          } else {\n            throw new Error(response.data || '商品添加失败');\n          }\n        }\n      } catch (error) {\n        const errorMsg = error.response?.data?.message || error.message || '操作失败';\n        ElMessage.error(`操作失败: ${errorMsg}`);\n      } finally {\n        if (loadingInstance) {\n          loadingInstance.close();\n        }\n      }\n    };\n\n    // 删除商品方法\n    const deleteProduct = async productId => {\n      if (!productId) {\n        ElMessage.warning('无效的商品ID');\n        return;\n      }\n      let loadingInstance = null;\n      try {\n        loadingInstance = ElLoading.service({\n          lock: true,\n          text: '删除中...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n        const response = await axios.delete(`http://algorineko.top:8080/api/merchant/product/delete?productId=${productId}`);\n        if (typeof response.data === 'string' && response.data.includes('成功')) {\n          const index = products.value.findIndex(p => p.productId === productId);\n          if (index !== -1) {\n            products.value.splice(index, 1);\n          }\n          ElMessage.success('商品删除成功');\n        } else {\n          throw new Error(response.data || '删除失败');\n        }\n      } catch (error) {\n        const errorMsg = error.response?.data?.message || error.message || '删除失败';\n        ElMessage.error(`删除失败: ${errorMsg}`);\n      } finally {\n        if (loadingInstance) {\n          loadingInstance.close();\n        }\n      }\n    };\n\n    // 加载商品方法\n    const loadProducts = async () => {\n      let loadingInstance = null;\n      try {\n        loadingInstance = ElLoading.service({\n          lock: true,\n          text: '加载商品数据...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n        const response = await axios.get(`http://algorineko.top:8080/api/merchant/product/list?merchantId=${merchantId.value}`);\n        if (Array.isArray(response.data)) {\n          products.value = response.data.map(item => ({\n            productId: item.productId,\n            productName: item.productName,\n            // 确保分类ID为字符串格式，以便匹配分类选项\n            categoryId: String(item.categoryId || ''),\n            price: item.price,\n            description: item.description,\n            images: item.images || []\n          }));\n        } else {\n          throw new Error('返回的数据格式不正确');\n        }\n      } catch (error) {\n        const errorMsg = error.response?.data?.message || error.message || '加载商品失败';\n        ElMessage.error(`加载商品失败: ${errorMsg}`);\n        // 示例数据使用字符串格式的分类ID\n        products.value = [{\n          productId: 1,\n          productName: '示例商品1',\n          categoryId: '1005000',\n          price: 19.9,\n          description: '这是一个示例商品',\n          images: []\n        }];\n      } finally {\n        if (loadingInstance) {\n          loadingInstance.close();\n        }\n      }\n    };\n    onMounted(() => {\n      loadProducts();\n    });\n    return (_ctx, _cache) => {\n      const _component_el_input = _resolveComponent(\"el-input\");\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_image = _resolveComponent(\"el-image\");\n      const _component_el_table_column = _resolveComponent(\"el-table-column\");\n      const _component_el_table = _resolveComponent(\"el-table\");\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n      const _component_el_option = _resolveComponent(\"el-option\");\n      const _component_el_select = _resolveComponent(\"el-select\");\n      const _component_el_input_number = _resolveComponent(\"el-input-number\");\n      const _component_el_upload = _resolveComponent(\"el-upload\");\n      const _component_el_form = _resolveComponent(\"el-form\");\n      const _component_el_dialog = _resolveComponent(\"el-dialog\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"h2\", null, [_createElementVNode(\"i\", {\n        class: \"el-icon-goods\"\n      }), _createTextVNode(\" 商品管理\")], -1)), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n        modelValue: productFilter.value.keyword,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => productFilter.value.keyword = $event),\n        placeholder: \"输入商品名称搜索\",\n        style: {\n          \"width\": \"300px\"\n        },\n        clearable: \"\",\n        \"prefix-icon\": \"el-icon-search\"\n      }, null, 8, [\"modelValue\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        icon: \"el-icon-plus\",\n        onClick: showAddDialog\n      }, {\n        default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"新增商品\")])),\n        _: 1,\n        __: [7]\n      })]), _createVNode(_component_el_table, {\n        data: filteredProducts.value,\n        border: \"\",\n        style: {\n          \"width\": \"100%\"\n        },\n        class: \"data-table\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_table_column, {\n          label: \"商品图片\",\n          width: \"120\"\n        }, {\n          default: _withCtx(scope => [scope.row.images && scope.row.images.length > 0 ? (_openBlock(), _createBlock(_component_el_image, {\n            key: 0,\n            src: scope.row.images[0],\n            fit: \"cover\",\n            style: {\n              \"width\": \"80px\",\n              \"height\": \"80px\",\n              \"border-radius\": \"4px\"\n            }\n          }, {\n            error: _withCtx(() => _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n              class: \"image-slot\"\n            }, [_createElementVNode(\"i\", {\n              class: \"el-icon-picture-outline\"\n            })], -1)])),\n            _: 2\n          }, 1032, [\"src\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"无图片\"))]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productName\",\n          label: \"商品名称\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productId\",\n          label: \"商品ID\",\n          width: \"120\"\n        }), _createVNode(_component_el_table_column, {\n          label: \"分类\",\n          width: \"120\"\n        }, {\n          default: _withCtx(scope => [_createTextVNode(_toDisplayString(getCategoryName(scope.row.categoryId)), 1)]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          label: \"价格\",\n          width: \"120\",\n          align: \"right\"\n        }, {\n          default: _withCtx(scope => [_createTextVNode(\" ¥\" + _toDisplayString((scope?.row?.price ?? 0).toFixed(2)), 1)]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          label: \"操作\",\n          width: \"200\"\n        }, {\n          default: _withCtx(scope => [scope?.row ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n            size: \"small\",\n            icon: \"el-icon-edit\",\n            onClick: $event => editProduct(scope.row)\n          }, {\n            default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"编辑\")])),\n            _: 2,\n            __: [9]\n          }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"danger\",\n            icon: \"el-icon-delete\",\n            onClick: $event => deleteProduct(scope.row.productId)\n          }, {\n            default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"删除\")])),\n            _: 2,\n            __: [10]\n          }, 1032, [\"onClick\"])])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"数据异常\"))]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"data\"]), _createVNode(_component_el_dialog, {\n        modelValue: productDialogVisible.value,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => productDialogVisible.value = $event),\n        title: dialogTitle.value,\n        width: \"800px\"\n      }, {\n        footer: _withCtx(() => [_createVNode(_component_el_button, {\n          onClick: _cache[5] || (_cache[5] = $event => productDialogVisible.value = false)\n        }, {\n          default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"取消\")])),\n          _: 1,\n          __: [14]\n        }), _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: saveProduct\n        }, {\n          default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"保存\")])),\n          _: 1,\n          __: [15]\n        })]),\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          model: currentProduct.value,\n          \"label-width\": \"100px\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"商品名称\",\n            required: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: currentProduct.value.productName,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => currentProduct.value.productName = $event),\n              placeholder: \"请输入商品名称\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"分类\",\n            required: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: currentProduct.value.categoryId,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => currentProduct.value.categoryId = $event),\n              placeholder: \"请选择分类\",\n              style: {\n                \"width\": \"100%\"\n              }\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(categoryOptions.value, category => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: category.id,\n                  label: category.name,\n                  value: category.id\n                }, null, 8, [\"label\", \"value\"]);\n              }), 128))]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"价格\",\n            required: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input_number, {\n              modelValue: currentProduct.value.price,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => currentProduct.value.price = $event),\n              min: 0,\n              precision: 2,\n              controls: false,\n              style: {\n                \"width\": \"200px\"\n              }\n            }, null, 8, [\"modelValue\"]), _cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n              class: \"input-unit\"\n            }, \"元\", -1))]),\n            _: 1,\n            __: [11]\n          }), _createVNode(_component_el_form_item, {\n            label: \"描述\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: currentProduct.value.description,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => currentProduct.value.description = $event),\n              type: \"textarea\",\n              rows: 4\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"商品图片\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(currentProduct.value.images, (image, index) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: index,\n                class: \"image-preview-item\"\n              }, [_createVNode(_component_el_image, {\n                src: image,\n                fit: \"cover\",\n                class: \"preview-image\"\n              }, null, 8, [\"src\"]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_button, {\n                type: \"danger\",\n                icon: \"el-icon-delete\",\n                size: \"small\",\n                circle: \"\",\n                onClick: $event => removeImage(index),\n                disabled: isEditing.value\n              }, null, 8, [\"onClick\", \"disabled\"])])]);\n            }), 128))]), _createVNode(_component_el_upload, {\n              action: \"#\",\n              multiple: true,\n              \"show-file-list\": false,\n              \"auto-upload\": false,\n              \"on-change\": handleImageChange,\n              disabled: isEditing.value,\n              class: \"image-upload-btn\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"primary\",\n                icon: \"el-icon-plus\",\n                disabled: isEditing.value\n              }, {\n                default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"添加图片\")])),\n                _: 1,\n                __: [12]\n              }, 8, [\"disabled\"]), _cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n                class: \"upload-tip\"\n              }, \"支持多图上传（最多5张，单张不超过2MB）\", -1))]),\n              _: 1,\n              __: [13]\n            }, 8, [\"disabled\"])]), isEditing.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"编辑模式下不可修改图片\")) : _createCommentVNode(\"\", true)]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"model\"])]),\n        _: 1\n      }, 8, [\"modelValue\", \"title\"])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","ElMessage","ElLoading","axios","productFilter","keyword","products","productDialogVisible","currentProduct","productName","categoryId","price","description","images","isEditing","merchantId","Number","localStorage","getItem","categoryOptions","id","name","filteredProducts","value","filter","p","toLowerCase","includes","map","dialogTitle","getCategoryName","category","find","cat","showAddDialog","editProduct","product","productId","warning","handleImageChange","file","maxSize","size","error","length","rawFile","raw","reader","FileReader","onload","e","push","target","result","readAsDataURL","removeImage","index","splice","saveProduct","trim","loadingInstance","service","lock","text","background","response","put","data","success","loadProducts","Error","post","errorMsg","message","close","deleteProduct","delete","findIndex","get","Array","isArray","item","String"],"sources":["E:/实验例子/project/src/views/business/ProductManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-section\">\r\n    <h2><i class=\"el-icon-goods\"></i> 商品管理</h2>\r\n    <div class=\"table-header\">\r\n      <el-input \r\n        v-model=\"productFilter.keyword\" \r\n        placeholder=\"输入商品名称搜索\" \r\n        style=\"width: 300px\"\r\n        clearable\r\n        prefix-icon=\"el-icon-search\"\r\n      />\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddDialog\">新增商品</el-button>\r\n    </div>\r\n    \r\n    <el-table :data=\"filteredProducts\" border style=\"width: 100%\" class=\"data-table\">\r\n      <el-table-column label=\"商品图片\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-image \r\n            v-if=\"scope.row.images && scope.row.images.length > 0\"\r\n            :src=\"scope.row.images[0]\" \r\n            fit=\"cover\" \r\n            style=\"width: 80px; height: 80px; border-radius: 4px;\"\r\n          >\r\n            <template #error>\r\n              <div class=\"image-slot\">\r\n                <i class=\"el-icon-picture-outline\"></i>\r\n              </div>\r\n            </template>\r\n          </el-image>\r\n          <div v-else class=\"no-image\">无图片</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\" />\r\n      <el-table-column prop=\"productId\" label=\"商品ID\" width=\"120\" />\r\n      <!-- 显示分类名称 -->\r\n      <el-table-column label=\"分类\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          {{ getCategoryName(scope.row.categoryId) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"价格\" width=\"120\" align=\"right\">\r\n        <template #default=\"scope\">\r\n          ¥{{ (scope?.row?.price ?? 0).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template #default=\"scope\">\r\n          <div v-if=\"scope?.row\">\r\n            <el-button \r\n              size=\"small\" \r\n              icon=\"el-icon-edit\"\r\n              @click=\"editProduct(scope.row)\"\r\n            >编辑</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              icon=\"el-icon-delete\"\r\n              @click=\"deleteProduct(scope.row.productId)\"\r\n            >删除</el-button>\r\n          </div>\r\n          <span v-else class=\"error-text\">数据异常</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑商品对话框 -->\r\n    <el-dialog v-model=\"productDialogVisible\" :title=\"dialogTitle\" width=\"800px\">\r\n      <el-form :model=\"currentProduct\" label-width=\"100px\">\r\n        <el-form-item label=\"商品名称\" required>\r\n          <el-input v-model=\"currentProduct.productName\" placeholder=\"请输入商品名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" required>\r\n          <el-select \r\n            v-model=\"currentProduct.categoryId\" \r\n            placeholder=\"请选择分类\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-option\r\n              v-for=\"category in categoryOptions\"\r\n              :key=\"category.id\"\r\n              :label=\"category.name\"\r\n              :value=\"category.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" required>\r\n          <el-input-number \r\n            v-model=\"currentProduct.price\" \r\n            :min=\"0\" \r\n            :precision=\"2\" \r\n            :controls=\"false\"\r\n            style=\"width: 200px\"\r\n          />\r\n          <span class=\"input-unit\">元</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"currentProduct.description\" type=\"textarea\" :rows=\"4\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"商品图片\">\r\n          <div class=\"image-upload-container\">\r\n            <div class=\"image-preview-list\">\r\n              <div v-for=\"(image, index) in currentProduct.images\" :key=\"index\" class=\"image-preview-item\">\r\n                <el-image \r\n                  :src=\"image\" \r\n                  fit=\"cover\" \r\n                  class=\"preview-image\"\r\n                />\r\n                <div class=\"image-actions\">\r\n                  <el-button \r\n                    type=\"danger\" \r\n                    icon=\"el-icon-delete\" \r\n                    size=\"small\"\r\n                    circle\r\n                    @click=\"removeImage(index)\"\r\n                    :disabled=\"isEditing\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <el-upload\r\n              action=\"#\"\r\n              :multiple=\"true\"\r\n              :show-file-list=\"false\"\r\n              :auto-upload=\"false\"\r\n              :on-change=\"handleImageChange\"\r\n              :disabled=\"isEditing\"\r\n              class=\"image-upload-btn\"\r\n            >\r\n              <el-button type=\"primary\" icon=\"el-icon-plus\" :disabled=\"isEditing\">添加图片</el-button>\r\n              <div class=\"upload-tip\">支持多图上传（最多5张，单张不超过2MB）</div>\r\n            </el-upload>\r\n          </div>\r\n          <div v-if=\"isEditing\" class=\"info-tip\">编辑模式下不可修改图片</div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"productDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveProduct\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { ElMessage, ElLoading } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\nconst productFilter = ref({ keyword: '' })\r\nconst products = ref([])\r\nconst productDialogVisible = ref(false)\r\nconst currentProduct = ref({\r\n  productName: '',\r\n  categoryId: '',\r\n  price: 0,\r\n  description: '',\r\n  images: [\"\"]\r\n})\r\nconst isEditing = ref(false)\r\nconst merchantId = ref(Number(localStorage.getItem('userId')))\r\n\r\n// 分类选项\r\nconst categoryOptions = ref([\r\n  { id: \"1005000\", name: \"居家\" },\r\n  { id: \"1005002\", name: \"美食\" },\r\n  { id: \"1010000\", name: \"服饰\" },\r\n  { id: \"1011000\", name: \"母婴\" },\r\n  { id: \"1013001\", name: \"个护\" },\r\n  { id: \"1019000\", name: \"严选\" },\r\n  { id: \"1043000\", name: \"数码\" },\r\n  { id: \"109243029\", name: \"运动\" },\r\n  { id: \"19999999\", name: \"杂项\" }\r\n])\r\n\r\nconst filteredProducts = computed(() => {\r\n  return (products.value || [])\r\n    .filter(p => \r\n      (p?.productName?.toLowerCase() || '').includes(\r\n        (productFilter.value.keyword?.toLowerCase() || '')\r\n      )\r\n    )\r\n    .map(p => ({\r\n      ...p,\r\n      price: Number(p.price) || 0\r\n    }))\r\n})\r\n\r\nconst dialogTitle = computed(() => isEditing.value ? '编辑商品' : '新增商品')\r\n\r\n// 根据分类ID获取分类名称\r\nconst getCategoryName = (categoryId) => {\r\n  const category = categoryOptions.value.find(cat => cat.id === categoryId)\r\n  return category ? category.name : categoryId || '未知分类'\r\n}\r\n\r\nconst showAddDialog = () => {\r\n  currentProduct.value = {\r\n    productName: '',\r\n    categoryId: '',\r\n    price: 0,\r\n    description: '',\r\n    images: []\r\n  }\r\n  isEditing.value = false\r\n  productDialogVisible.value = true\r\n}\r\n\r\nconst editProduct = (product) => {\r\n  if (!product?.productId) {\r\n    ElMessage.warning('无效的商品数据')\r\n    return\r\n  }\r\n  currentProduct.value = { \r\n    ...product,\r\n    productId: product.productId\r\n  }\r\n  isEditing.value = true\r\n  productDialogVisible.value = true\r\n}\r\n\r\nconst handleImageChange = (file) => {\r\n  if (!file) return\r\n  // 检查文件大小，限制为2MB\r\n  const maxSize = 2 * 1024 * 1024 // 2MB\r\n  if (file.size > maxSize) {\r\n    ElMessage.error('图片大小不能超过2MB')\r\n    return\r\n  }\r\n  // 检查图片数量，最多5张\r\n  if (currentProduct.value.images.length >= 5) {\r\n    ElMessage.error('最多只能上传5张图片')\r\n    return\r\n  }\r\n  const rawFile = file.raw\r\n  if (rawFile) {\r\n    const reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      currentProduct.value.images.push(e.target.result)\r\n    }\r\n    reader.readAsDataURL(rawFile)\r\n  }\r\n}\r\n\r\nconst removeImage = (index) => {\r\n  currentProduct.value.images.splice(index, 1)\r\n}\r\n\r\nconst saveProduct = async () => {\r\n  if (!currentProduct.value.productName?.trim()) {\r\n    ElMessage.error('商品名称不能为空')\r\n    return\r\n  }\r\n  if (!currentProduct.value.categoryId) {\r\n    ElMessage.error('请选择商品分类')\r\n    return\r\n  }\r\n  if (currentProduct.value.price < 0) {\r\n    ElMessage.error('价格不能为负数')\r\n    return\r\n  }\r\n\r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '保存中...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    if (isEditing.value) {\r\n      // 编辑商品\r\n      const response = await axios.put('http://algorineko.top:8080/api/merchant/product/update', {\r\n        productId: currentProduct.value.productId,\r\n        merchantId: merchantId.value,\r\n        productName: currentProduct.value.productName,\r\n        description: currentProduct.value.description || '',\r\n        price: currentProduct.value.price,\r\n        categoryId: currentProduct.value.categoryId\r\n      })\r\n      \r\n      if (response.data.includes('成功')) {\r\n        // 更新成功后重新加载商品列表\r\n        ElMessage.success('商品更新成功')\r\n        productDialogVisible.value = false\r\n        await loadProducts()\r\n      } else {\r\n        throw new Error(response.data || '商品更新失败')\r\n      }\r\n    } else {\r\n      // 新增商品\r\n      const response = await axios.post('http://algorineko.top:8080/api/merchant/product/add', {\r\n        merchantId: merchantId.value,\r\n        productName: currentProduct.value.productName,\r\n        description: currentProduct.value.description || '',\r\n        price: currentProduct.value.price,\r\n        categoryId: currentProduct.value.categoryId,\r\n        images: currentProduct.value.images.length > 0 \r\n                ? currentProduct.value.images \r\n                : [\"\"]\r\n      })\r\n      if (response.data.includes('成功')) {\r\n        // 新增成功后重新加载商品列表\r\n        ElMessage.success('商品添加成功')\r\n        productDialogVisible.value = false\r\n        await loadProducts()\r\n      } else {\r\n        throw new Error(response.data || '商品添加失败')\r\n      }\r\n    }\r\n  } catch (error) {\r\n    const errorMsg = error.response?.data?.message || error.message || '操作失败'\r\n    ElMessage.error(`操作失败: ${errorMsg}`)\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\n// 删除商品方法\r\nconst deleteProduct = async (productId) => {\r\n  if (!productId) {\r\n    ElMessage.warning('无效的商品ID')\r\n    return\r\n  }\r\n  \r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '删除中...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    const response = await axios.delete(`http://algorineko.top:8080/api/merchant/product/delete?productId=${productId}`)\r\n    \r\n    if (typeof response.data === 'string' && response.data.includes('成功')) {\r\n      const index = products.value.findIndex(p => p.productId === productId)\r\n      if (index !== -1) {\r\n        products.value.splice(index, 1)\r\n      }\r\n      ElMessage.success('商品删除成功')\r\n    } else {\r\n      throw new Error(response.data || '删除失败')\r\n    }\r\n  } catch (error) {\r\n    const errorMsg = error.response?.data?.message || error.message || '删除失败'\r\n    ElMessage.error(`删除失败: ${errorMsg}`)\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\n// 加载商品方法\r\nconst loadProducts = async () => {\r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '加载商品数据...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    const response = await axios.get(`http://algorineko.top:8080/api/merchant/product/list?merchantId=${merchantId.value}`)\r\n    \r\n    if (Array.isArray(response.data)) {\r\n      products.value = response.data.map(item => ({\r\n        productId: item.productId,\r\n        productName: item.productName,\r\n        // 确保分类ID为字符串格式，以便匹配分类选项\r\n        categoryId: String(item.categoryId || ''),\r\n        price: item.price,\r\n        description: item.description,\r\n        images: item.images || []\r\n      }))\r\n    } else {\r\n      throw new Error('返回的数据格式不正确')\r\n    }\r\n  } catch (error) {\r\n    const errorMsg = error.response?.data?.message || error.message || '加载商品失败'\r\n    ElMessage.error(`加载商品失败: ${errorMsg}`)\r\n    // 示例数据使用字符串格式的分类ID\r\n    products.value = [\r\n      {\r\n        productId: 1,\r\n        productName: '示例商品1',\r\n        categoryId: '1005000',\r\n        price: 19.9,\r\n        description: '这是一个示例商品',\r\n        images: []\r\n      }\r\n    ]\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadProducts()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.product-section h2 {\r\n  margin-top: 0;\r\n  margin-bottom: 25px;\r\n  color: #303133;\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n.product-section h2 i {\r\n  margin-right: 12px;\r\n  font-size: 24px;\r\n  color: #409eff;\r\n}\r\n\r\n.table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.data-table {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n}\r\n\r\n.error-text {\r\n  color: #f56c6c;\r\n  font-size: 12px;\r\n  padding: 4px 8px;\r\n}\r\n\r\n.input-unit {\r\n  margin-left: 10px;\r\n  color: #909399;\r\n}\r\n\r\n.image-upload-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.image-preview-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n}\r\n\r\n.image-preview-item {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  border: 1px dashed #dcdfe6;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.image-preview-item:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.image-actions {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n}\r\n\r\n.image-upload-btn {\r\n  width: 120px;\r\n}\r\n\r\n.upload-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.no-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  border: 1px dashed #dcdfe6;\r\n  border-radius: 4px;\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n.image-slot {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #f5f7fa;\r\n  color: #909399;\r\n  font-size: 30px;\r\n}\r\n\r\n.info-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}