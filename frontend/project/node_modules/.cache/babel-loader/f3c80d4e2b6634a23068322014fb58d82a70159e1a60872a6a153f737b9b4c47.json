{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElNotification } from 'element-plus';\nexport default {\n  __name: 'BusinessView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n\n    // 功能列表\n    const functions = ref([{\n      key: 'info',\n      label: '商家信息',\n      icon: 'el-icon-user'\n    }, {\n      key: 'products',\n      label: '商品管理',\n      icon: 'el-icon-goods'\n    }, {\n      key: 'orders',\n      label: '订单管理',\n      icon: 'el-icon-tickets'\n    }, {\n      key: 'reviews',\n      label: '评价管理',\n      icon: 'el-icon-chat-dot-round'\n    }]);\n\n    // 当前视图\n    const currentView = ref('info');\n\n    // 商家信息 - 初始值从登录信息获取\n    const shopInfo = ref({\n      id: '',\n      name: '',\n      address: '',\n      contact: '',\n      password: '',\n      avatar: '',\n      credit: 'AAAA级',\n      balance: 12580.60\n    });\n\n    // 备份初始商家信息用于重置\n    const originalShopInfo = ref({});\n\n    // 商品数据（从localStorage加载）\n    const products = ref([]);\n\n    // 订单数据\n    const orders = ref([]);\n\n    // 评价数据\n    const reviews = ref([{\n      productName: '有机大米 5kg',\n      rating: 4.8,\n      content: '米粒饱满，煮饭很香',\n      createTime: '2023-11-14 16:30:00',\n      replied: false\n    }, {\n      productName: '特级橄榄油',\n      rating: 5.0,\n      content: '炒菜味道清香，品质很好',\n      createTime: '2023-11-14 17:15:00',\n      replied: true\n    }]);\n    const productFilter = ref({\n      keyword: ''\n    });\n    const productDialogVisible = ref(false);\n    const currentProduct = ref({\n      id: '',\n      categoryId: '',\n      name: '',\n      price: 0,\n      stock: 0,\n      description: '',\n      images: []\n    });\n    const isEditing = ref(false);\n    const orderFilter = ref({\n      status: 'all',\n      dateRange: []\n    });\n    const statusMap = {\n      pending: {\n        text: '待付款',\n        type: 'warning'\n      },\n      paid: {\n        text: '已付款',\n        type: 'primary'\n      },\n      shipped: {\n        text: '已发货',\n        type: 'success'\n      },\n      completed: {\n        text: '已完成',\n        type: 'info'\n      }\n    };\n    const reviewFilter = ref({\n      keyword: '',\n      rating: '0'\n    });\n    const replyDialogVisible = ref(false);\n    const replyContent = ref('');\n    const currentReview = ref(null);\n\n    // 计算属性 - 过滤商品\n    const filteredProducts = computed(() => {\n      return (products.value || []).filter(p => (p?.name?.toLowerCase() || '').includes(productFilter.value.keyword?.toLowerCase() || '')).map(p => ({\n        ...p,\n        price: Number(p.price) || 0,\n        stock: Math.max(Number(p.stock) || 0, 0)\n      }));\n    });\n\n    // 过滤订单 - 只显示当前商家的订单\n    const filteredOrders = computed(() => {\n      // 获取当前商家的所有商品ID\n      const myProductIds = products.value.map(p => p.id);\n      return (orders.value || []).filter(o => {\n        // 检查订单是否包含当前商家的商品\n        const hasMyProduct = o.items?.some(item => myProductIds.includes(item.id)) ?? false;\n        const statusMatch = orderFilter.value.status === 'all' || o.status === orderFilter.value.status;\n        const dateMatch = !orderFilter.value.dateRange?.length || new Date(o.createTime) >= new Date(orderFilter.value.dateRange[0]) && new Date(o.createTime) <= new Date(orderFilter.value.dateRange[1]);\n        return statusMatch && dateMatch && hasMyProduct;\n      });\n    });\n\n    // 过滤订单中的商品（只显示当前商家的商品）\n    const filteredOrderItems = row => {\n      if (!row.items) return [];\n      const myProductIds = products.value.map(p => p.id);\n      return row.items.filter(item => myProductIds.includes(item.id));\n    };\n    const filteredReviews = computed(() => {\n      return (reviews.value || []).filter(r => {\n        const keywordMatch = (r.productName?.toLowerCase() || '').includes(reviewFilter.value.keyword?.toLowerCase() || '');\n        const ratingValue = Number(reviewFilter.value.rating);\n        const ratingMatch = ratingValue === 0 || ratingValue === 5 && r.rating === 5 || ratingValue === 4 && r.rating >= 4 && r.rating < 5 || ratingValue === 3 && r.rating <= 3;\n        return keywordMatch && ratingMatch;\n      });\n    });\n    const dialogTitle = computed(() => isEditing.value ? '编辑商品' : '新增商品');\n\n    // 检查商品是否属于当前商家\n    const isMyProduct = productId => {\n      return products.value.some(p => p.id === productId);\n    };\n\n    // 检查订单是否有当前商家的商品\n    const hasMyProducts = order => {\n      return order.items?.some(item => isMyProduct(item.id)) || false;\n    };\n\n    // 计算当前商家在订单中的总金额\n    const calculateMerchantTotal = order => {\n      if (!order.items) return 0;\n      return order.items.reduce((total, item) => {\n        if (isMyProduct(item.id)) {\n          return total + (item.price || 0) * (item.quantity || 1);\n        }\n        return total;\n      }, 0);\n    };\n\n    // 方法\n    const switchView = view => {\n      if (['info', 'products', 'orders', 'reviews'].includes(view)) {\n        currentView.value = view;\n\n        // 切换到订单管理时加载订单\n        if (view === 'orders') {\n          loadOrders();\n        }\n      }\n    };\n    const logout = () => {\n      // 只清除认证信息，保留用户数据\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('userName');\n      localStorage.removeItem('role');\n      router.push('/login');\n    };\n    const saveShopInfo = () => {\n      // 更新本地存储中的商家信息\n      const businessUsers = JSON.parse(localStorage.getItem('businessUsers') || '[]');\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        ElMessage.error('用户信息异常，请重新登录');\n        return;\n      }\n      const index = businessUsers.findIndex(u => u.userId === userId);\n      if (index !== -1) {\n        // 更新商家信息\n        const updatedUser = {\n          ...businessUsers[index],\n          userName: shopInfo.value.name,\n          address: shopInfo.value.address,\n          contact: shopInfo.value.contact,\n          avatar: shopInfo.value.avatar\n        };\n\n        // 如果输入了新密码，则更新密码\n        if (shopInfo.value.password) {\n          updatedUser.password = shopInfo.value.password;\n        }\n        businessUsers[index] = updatedUser;\n        localStorage.setItem('businessUsers', JSON.stringify(businessUsers));\n\n        // 更新本地存储中的用户名\n        localStorage.setItem('userName', shopInfo.value.name);\n\n        // 更新原始信息备份\n        originalShopInfo.value = {\n          ...shopInfo.value\n        };\n        ElNotification.success({\n          title: '保存成功',\n          message: '商家信息已更新',\n          duration: 2000\n        });\n\n        // 清空密码字段\n        shopInfo.value.password = '';\n      } else {\n        ElMessage.error('未找到商家信息，请重新登录');\n      }\n    };\n    const resetForm = () => {\n      shopInfo.value = {\n        ...originalShopInfo.value\n      };\n      shopInfo.value.password = '';\n      ElMessage.info('已重置修改内容');\n    };\n\n    // 处理商家头像上传\n    const handleAvatarChange = file => {\n      if (!file) return;\n      const rawFile = file.raw;\n      if (rawFile) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          shopInfo.value.avatar = e.target.result;\n        };\n        reader.readAsDataURL(rawFile);\n      }\n    };\n\n    // 处理商品图片上传\n    const handleImageChange = file => {\n      if (!file) return;\n      const rawFile = file.raw;\n      if (rawFile) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          currentProduct.value.images.push(e.target.result);\n        };\n        reader.readAsDataURL(rawFile);\n      }\n    };\n\n    // 移除商品图片\n    const removeImage = index => {\n      currentProduct.value.images.splice(index, 1);\n    };\n    const showAddDialog = () => {\n      currentProduct.value = {\n        id: '',\n        categoryId: '',\n        name: '',\n        price: 0,\n        stock: 0,\n        description: '',\n        images: []\n      };\n      isEditing.value = false;\n      productDialogVisible.value = true;\n    };\n    const editProduct = product => {\n      if (!product?.id) {\n        ElMessage.warning('无效的商品数据');\n        return;\n      }\n      currentProduct.value = {\n        ...product\n      };\n      isEditing.value = true;\n      productDialogVisible.value = true;\n    };\n\n    // 保存商品到localStorage\n    const saveProductToLocalStorage = () => {\n      const businessId = localStorage.getItem('userId') || 'default';\n      const storageKey = `businessProducts_${businessId}`;\n      localStorage.setItem(storageKey, JSON.stringify(products.value));\n    };\n\n    // 从localStorage加载商品\n    const loadProductsFromLocalStorage = () => {\n      const businessId = localStorage.getItem('userId') || 'default';\n      const storageKey = `businessProducts_${businessId}`;\n      const savedProducts = localStorage.getItem(storageKey);\n      if (savedProducts) {\n        products.value = JSON.parse(savedProducts);\n      }\n    };\n\n    // 从localStorage加载订单\n    const loadOrders = () => {\n      const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n\n      // 应用筛选条件\n      let filteredOrders = [...savedOrders];\n\n      // 状态筛选\n      if (orderFilter.value.status !== 'all') {\n        filteredOrders = filteredOrders.filter(order => order.status === orderFilter.value.status);\n      }\n\n      // 日期筛选\n      if (orderFilter.value.dateRange && orderFilter.value.dateRange.length === 2) {\n        const startDate = new Date(orderFilter.value.dateRange[0]);\n        const endDate = new Date(orderFilter.value.dateRange[1]);\n        endDate.setHours(23, 59, 59, 999); // 包含结束日期的全天\n\n        filteredOrders = filteredOrders.filter(order => {\n          const orderDate = new Date(order.createTime);\n          return orderDate >= startDate && orderDate <= endDate;\n        });\n      }\n      orders.value = filteredOrders;\n    };\n    const saveProduct = () => {\n      if (!currentProduct.value.id) {\n        ElMessage.error('商品ID不能为空');\n        return;\n      }\n      if (!currentProduct.value.name?.trim()) {\n        ElMessage.error('商品名称不能为空');\n        return;\n      }\n      if (currentProduct.value.price < 0) {\n        ElMessage.error('价格不能为负数');\n        return;\n      }\n      try {\n        if (isEditing.value) {\n          const index = products.value.findIndex(p => p?.id === currentProduct.value?.id);\n          if (index !== -1) {\n            products.value.splice(index, 1, {\n              ...currentProduct.value,\n              price: Number(currentProduct.value.price) || 0,\n              stock: Math.max(Number(currentProduct.value.stock), 0)\n            });\n          }\n        } else {\n          // 检查商品ID是否已存在\n          if (products.value.some(p => p.id === currentProduct.value.id)) {\n            ElMessage.error('商品ID已存在，请使用不同的ID');\n            return;\n          }\n          products.value.push({\n            ...currentProduct.value,\n            name: currentProduct.value.name || '新商品',\n            price: Number(currentProduct.value.price) || 0,\n            stock: Math.max(Number(currentProduct.value.stock), 0)\n          });\n        }\n\n        // 保存到localStorage\n        saveProductToLocalStorage();\n        productDialogVisible.value = false;\n        ElMessage.success('商品保存成功');\n      } catch (error) {\n        ElMessage.error(`保存失败: ${error.message}`);\n      }\n    };\n    const deleteProduct = id => {\n      if (!id) {\n        ElMessage.warning('无效的商品ID');\n        return;\n      }\n      const index = products.value.findIndex(p => p?.id === id);\n      if (index !== -1) {\n        products.value.splice(index, 1);\n\n        // 保存到localStorage\n        saveProductToLocalStorage();\n        ElMessage.success('商品删除成功');\n      }\n    };\n\n    // 发货操作 - 只能对已付款订单进行发货\n    const handleShip = order => {\n      if (order?.orderId && order.status === 'paid') {\n        // 更新订单状态\n        const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n        const updatedOrders = savedOrders.map(o => {\n          if (o.orderId === order.orderId) {\n            return {\n              ...o,\n              status: 'shipped',\n              shipTime: new Date().toLocaleString()\n            };\n          }\n          return o;\n        });\n        localStorage.setItem('orders', JSON.stringify(updatedOrders));\n        ElMessage.success('订单状态已更新为已发货');\n        loadOrders(); // 重新加载订单以更新状态显示\n      } else {\n        ElMessage.error('只能对已付款的订单进行发货操作');\n      }\n    };\n    const showReplyDialog = review => {\n      if (review) {\n        currentReview.value = review;\n        replyDialogVisible.value = true;\n        replyContent.value = '';\n      }\n    };\n    const submitReply = () => {\n      if (currentReview.value && replyContent.value.trim()) {\n        currentReview.value.replied = true;\n        replyDialogVisible.value = false;\n        replyContent.value = '';\n        ElMessage.success('回复成功');\n      }\n    };\n\n    // 页面加载时从本地存储获取商家信息和商品数据\n    onMounted(() => {\n      // 设置商家ID为登录时的用户ID\n      const userId = localStorage.getItem('userId');\n      const userName = localStorage.getItem('userName');\n      shopInfo.value.id = userId || 'BUS2023VIP';\n      shopInfo.value.name = userName || '商家名称';\n\n      // 尝试从本地存储获取完整商家信息\n      const businessUsers = JSON.parse(localStorage.getItem('businessUsers') || '[]');\n      const currentBusiness = businessUsers.find(u => u.userId === userId);\n      if (currentBusiness) {\n        shopInfo.value = {\n          ...shopInfo.value,\n          address: currentBusiness.address || '',\n          contact: currentBusiness.contact || '',\n          avatar: currentBusiness.avatar || ''\n        };\n      }\n\n      // 保存原始信息用于重置\n      originalShopInfo.value = {\n        ...shopInfo.value\n      };\n\n      // 从localStorage加载商品数据\n      loadProductsFromLocalStorage();\n    });\n    const __returned__ = {\n      router,\n      functions,\n      currentView,\n      shopInfo,\n      originalShopInfo,\n      products,\n      orders,\n      reviews,\n      productFilter,\n      productDialogVisible,\n      currentProduct,\n      isEditing,\n      orderFilter,\n      statusMap,\n      reviewFilter,\n      replyDialogVisible,\n      replyContent,\n      currentReview,\n      filteredProducts,\n      filteredOrders,\n      filteredOrderItems,\n      filteredReviews,\n      dialogTitle,\n      isMyProduct,\n      hasMyProducts,\n      calculateMerchantTotal,\n      switchView,\n      logout,\n      saveShopInfo,\n      resetForm,\n      handleAvatarChange,\n      handleImageChange,\n      removeImage,\n      showAddDialog,\n      editProduct,\n      saveProductToLocalStorage,\n      loadProductsFromLocalStorage,\n      loadOrders,\n      saveProduct,\n      deleteProduct,\n      handleShip,\n      showReplyDialog,\n      submitReply,\n      ref,\n      computed,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElNotification() {\n        return ElNotification;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","ElMessage","ElNotification","router","functions","key","label","icon","currentView","shopInfo","id","name","address","contact","password","avatar","credit","balance","originalShopInfo","products","orders","reviews","productName","rating","content","createTime","replied","productFilter","keyword","productDialogVisible","currentProduct","categoryId","price","stock","description","images","isEditing","orderFilter","status","dateRange","statusMap","pending","text","type","paid","shipped","completed","reviewFilter","replyDialogVisible","replyContent","currentReview","filteredProducts","value","filter","p","toLowerCase","includes","map","Number","Math","max","filteredOrders","myProductIds","o","hasMyProduct","items","some","item","statusMatch","dateMatch","length","Date","filteredOrderItems","row","filteredReviews","r","keywordMatch","ratingValue","ratingMatch","dialogTitle","isMyProduct","productId","hasMyProducts","order","calculateMerchantTotal","reduce","total","quantity","switchView","view","loadOrders","logout","localStorage","removeItem","push","saveShopInfo","businessUsers","JSON","parse","getItem","userId","error","index","findIndex","u","updatedUser","userName","setItem","stringify","success","title","message","duration","resetForm","info","handleAvatarChange","file","rawFile","raw","reader","FileReader","onload","e","target","result","readAsDataURL","handleImageChange","removeImage","splice","showAddDialog","editProduct","product","warning","saveProductToLocalStorage","businessId","storageKey","loadProductsFromLocalStorage","savedProducts","savedOrders","startDate","endDate","setHours","orderDate","saveProduct","trim","deleteProduct","handleShip","orderId","updatedOrders","shipTime","toLocaleString","showReplyDialog","review","submitReply","currentBusiness","find"],"sources":["E:/实验例子/project/src/views/BusinessView.vue"],"sourcesContent":["<template>\r\n  <div class=\"business-container\">\r\n    <!-- 顶部操作栏 -->\r\n    <div class=\"action-bar\">\r\n      <div class=\"user-info\">\r\n        <el-avatar :size=\"40\" :src=\"shopInfo.avatar\" />\r\n        <div class=\"user-details\">\r\n          <span class=\"welcome-text\">欢迎，{{ shopInfo.name }}</span>\r\n          <span class=\"shop-id\">商家ID: {{ shopInfo.id }}</span>\r\n        </div>\r\n      </div>\r\n      <el-button class=\"logout-btn\" type=\"danger\" @click=\"logout\">\r\n        <i class=\"el-icon-switch-button\"></i> 退出登录\r\n      </el-button>\r\n    </div>\r\n\r\n    <!-- 左侧功能面板 -->\r\n    <div class=\"function-panel\">\r\n      <div \r\n        v-for=\"item in functions\" \r\n        :key=\"item.key\"\r\n        class=\"function-card\"\r\n        :class=\"{ active: currentView === item.key }\"\r\n        @click=\"switchView(item.key)\"\r\n      >\r\n        <i :class=\"item.icon\" class=\"function-icon\"></i>\r\n        <span>{{ item.label }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 右侧内容区 -->\r\n    <div class=\"content-area\">\r\n      <!-- 商家信息 -->\r\n      <div v-if=\"currentView === 'info'\" class=\"info-section\">\r\n        <h2><i class=\"el-icon-user\"></i> 商家信息管理</h2>\r\n        <el-card class=\"info-card\">\r\n          <el-form label-width=\"120px\">\r\n            <el-form-item label=\"商家ID\">\r\n              <el-input v-model=\"shopInfo.id\" disabled />\r\n              <div class=\"info-tip\">商家ID不可更改</div>\r\n            </el-form-item>\r\n            <el-form-item label=\"商家名称\">\r\n              <el-input v-model=\"shopInfo.name\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"登录密码\">\r\n              <el-input \r\n                v-model=\"shopInfo.password\" \r\n                type=\"password\" \r\n                show-password\r\n                placeholder=\"请输入新密码\" \r\n              />\r\n              <div class=\"info-tip\">留空则不修改密码</div>\r\n            </el-form-item>\r\n            <el-form-item label=\"商家地址\">\r\n              <el-input v-model=\"shopInfo.address\" placeholder=\"请输入商家地址\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"联系方式\">\r\n              <el-input v-model=\"shopInfo.contact\" placeholder=\"请输入联系电话\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"商家头像\">\r\n              <div class=\"avatar-upload\">\r\n                <el-avatar \r\n                  :size=\"120\" \r\n                  :src=\"shopInfo.avatar\" \r\n                  class=\"avatar-preview\"\r\n                />\r\n                <div class=\"avatar-actions\">\r\n                  <el-upload\r\n                    action=\"#\"\r\n                    :show-file-list=\"false\"\r\n                    :auto-upload=\"false\"\r\n                    :on-change=\"handleAvatarChange\"\r\n                  >\r\n                    <el-button type=\"primary\" icon=\"el-icon-upload\" size=\"small\">上传头像</el-button>\r\n                  </el-upload>\r\n                  <el-button \r\n                    v-if=\"shopInfo.avatar\" \r\n                    type=\"danger\" \r\n                    icon=\"el-icon-delete\" \r\n                    size=\"small\"\r\n                    @click=\"shopInfo.avatar = ''\"\r\n                  >\r\n                    移除\r\n                  </el-button>\r\n                </div>\r\n              </div>\r\n            </el-form-item>\r\n            <div class=\"form-actions\">\r\n              <el-button type=\"primary\" @click=\"saveShopInfo\">\r\n                <i class=\"el-icon-check\"></i> 保存修改\r\n              </el-button>\r\n              <el-button @click=\"resetForm\">\r\n                <i class=\"el-icon-refresh\"></i> 重置修改\r\n              </el-button>\r\n            </div>\r\n          </el-form>\r\n        </el-card>\r\n      </div>\r\n\r\n      <!-- 商品管理 -->\r\n      <div v-if=\"currentView === 'products'\" class=\"product-section\">\r\n        <h2><i class=\"el-icon-goods\"></i> 商品管理</h2>\r\n        <div class=\"table-header\">\r\n          <el-input \r\n            v-model=\"productFilter.keyword\" \r\n            placeholder=\"输入商品名称搜索\" \r\n            style=\"width: 300px\"\r\n            clearable\r\n            prefix-icon=\"el-icon-search\"\r\n          />\r\n          <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddDialog\">新增商品</el-button>\r\n        </div>\r\n        \r\n        <el-table :data=\"filteredProducts\" border style=\"width: 100%\" class=\"data-table\">\r\n          <el-table-column label=\"商品图片\" width=\"120\">\r\n            <template #default=\"scope\">\r\n              <el-image \r\n                v-if=\"scope.row.images && scope.row.images.length > 0\"\r\n                :src=\"scope.row.images[0]\" \r\n                fit=\"cover\" \r\n                style=\"width: 80px; height: 80px; border-radius: 4px;\"\r\n              >\r\n                <template #error>\r\n                  <div class=\"image-slot\">\r\n                    <i class=\"el-icon-picture-outline\"></i>\r\n                  </div>\r\n                </template>\r\n              </el-image>\r\n              <div v-else class=\"no-image\">无图片</div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"name\" label=\"商品名称\" width=\"180\" />\r\n          <el-table-column prop=\"id\" label=\"商品ID\" width=\"120\" />\r\n          <el-table-column prop=\"categoryId\" label=\"分类ID\" width=\"120\" />\r\n          <el-table-column label=\"价格\" width=\"120\" align=\"right\">\r\n            <template #default=\"scope\">\r\n              ¥{{ (scope?.row?.price ?? 0).toFixed(2) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"stock\" label=\"库存\" width=\"120\" />\r\n          <el-table-column label=\"操作\" width=\"200\">\r\n            <template #default=\"scope\">\r\n              <div v-if=\"scope?.row\">\r\n                <el-button \r\n                  size=\"small\" \r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"editProduct(scope.row)\"\r\n                >编辑</el-button>\r\n                <el-button \r\n                  size=\"small\" \r\n                  type=\"danger\" \r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"deleteProduct(scope.row.id)\"\r\n                >删除</el-button>\r\n              </div>\r\n              <span v-else class=\"error-text\">数据异常</span>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <!-- 订单管理 -->\r\n      <div v-if=\"currentView === 'orders'\" class=\"order-section\">\r\n        <h2><i class=\"el-icon-tickets\"></i> 订单管理</h2>\r\n        <div class=\"filter-bar\">\r\n          <div class=\"filter-group\">\r\n            <el-select \r\n              v-model=\"orderFilter.status\" \r\n              placeholder=\"订单状态\" \r\n              style=\"width: 150px\"\r\n            >\r\n              <el-option label=\"全部\" value=\"all\" />\r\n              <el-option label=\"待付款\" value=\"pending\" />\r\n              <el-option label=\"已付款\" value=\"paid\" />\r\n              <el-option label=\"已发货\" value=\"shipped\" />\r\n              <el-option label=\"已完成\" value=\"completed\" />\r\n            </el-select>\r\n            <el-date-picker\r\n              v-model=\"orderFilter.dateRange\"\r\n              type=\"daterange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              style=\"width: 350px\"\r\n            />\r\n          </div>\r\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"loadOrders\">搜索</el-button>\r\n        </div>\r\n\r\n        <el-table :data=\"filteredOrders\" border style=\"width: 100%\" class=\"data-table\">\r\n          <el-table-column prop=\"orderId\" label=\"订单号\" width=\"180\" />\r\n          <el-table-column prop=\"createTime\" label=\"下单时间\" width=\"180\" />\r\n          \r\n          <!-- 商品信息列 -->\r\n          <el-table-column label=\"商品信息\">\r\n            <template #default=\"{ row }\">\r\n              <div class=\"product-list\">\r\n                <div \r\n                  v-for=\"(item, index) in filteredOrderItems(row)\" \r\n                  :key=\"index\"\r\n                  class=\"product-item\"\r\n                >\r\n                  <el-image \r\n                    :src=\"item.image || '/placeholder-product.jpg'\"\r\n                    style=\"width: 60px; height: 60px; border-radius: 4px;\"\r\n                    fit=\"cover\"\r\n                  />\r\n                  <div class=\"product-details\">\r\n                    <div class=\"product-name\">{{ item.name }}</div>\r\n                    <div class=\"product-price\">¥{{ (item.price || 0).toFixed(2) }} × {{ item.quantity || 1 }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          \r\n          <!-- 金额列（只计算当前商家的商品金额） -->\r\n          <el-table-column label=\"金额\" width=\"120\" align=\"right\">\r\n            <template #default=\"{ row }\">\r\n              ¥{{ calculateMerchantTotal(row).toFixed(2) }}\r\n            </template>\r\n          </el-table-column>\r\n          \r\n          <el-table-column label=\"状态\" width=\"120\">\r\n            <template #default=\"{ row }\">\r\n              <el-tag :type=\"statusMap[row?.status]?.type || 'info'\">\r\n                {{ statusMap[row?.status]?.text || '未知状态' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          \r\n          <!-- 操作列：增加发货按钮 -->\r\n          <el-table-column label=\"操作\" width=\"150\">\r\n            <template #default=\"{ row }\">\r\n              <div v-if=\"row\">\r\n                <!-- 发货按钮：只对已付款订单显示 -->\r\n                <el-button \r\n                  v-if=\"row.status === 'paid' && hasMyProducts(row)\"\r\n                  size=\"small\" \r\n                  type=\"success\"\r\n                  icon=\"el-icon-truck\"\r\n                  @click=\"handleShip(row)\"\r\n                >发货</el-button>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <!-- 评价管理 -->\r\n      <div v-if=\"currentView === 'reviews'\" class=\"review-section\">\r\n        <h2><i class=\"el-icon-chat-dot-round\"></i> 评价管理</h2>\r\n        <div class=\"filter-bar\">\r\n          <el-input \r\n            v-model=\"reviewFilter.keyword\" \r\n            placeholder=\"搜索商品名称\" \r\n            style=\"width: 300px\"\r\n            prefix-icon=\"el-icon-search\"\r\n          />\r\n          <el-select \r\n            v-model=\"reviewFilter.rating\" \r\n            placeholder=\"评分筛选\" \r\n            style=\"width: 150px\"\r\n          >\r\n            <el-option label=\"全部\" value=\"0\" />\r\n            <el-option label=\"5星\" value=\"5\" />\r\n            <el-option label=\"4星\" value=\"4\" />\r\n            <el-option label=\"3星及以下\" value=\"3\" />\r\n          </el-select>\r\n        </div>\r\n\r\n        <el-table :data=\"filteredReviews\" border style=\"width: 100%\" class=\"data-table\">\r\n          <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\" />\r\n          <el-table-column label=\"评分\" width=\"120\">\r\n            <template #default=\"scope\">\r\n              <el-rate \r\n                :model-value=\"scope?.row?.rating ?? 0\"\r\n                disabled \r\n                :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\" \r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"content\" label=\"评价内容\" min-width=\"200\" />\r\n          <el-table-column prop=\"createTime\" label=\"评价时间\" width=\"180\" />\r\n          <el-table-column label=\"操作\" width=\"120\">\r\n            <template #default=\"scope\">\r\n              <div v-if=\"scope?.row\">\r\n                <el-button \r\n                  v-if=\"!scope.row.replied\"\r\n                  type=\"primary\" \r\n                  size=\"small\"\r\n                  icon=\"el-icon-chat-line-round\"\r\n                  @click=\"showReplyDialog(scope.row)\"\r\n                >回复</el-button>\r\n                <span v-else class=\"replied-text\">已回复</span>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 添加/编辑商品对话框 -->\r\n    <el-dialog v-model=\"productDialogVisible\" :title=\"dialogTitle\" width=\"800px\">\r\n      <el-form :model=\"currentProduct\" label-width=\"100px\">\r\n        <el-form-item label=\"商品ID\">\r\n          <el-input v-model=\"currentProduct.id\" placeholder=\"请输入商品ID\" :disabled=\"isEditing\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类ID\">\r\n          <el-input v-model=\"currentProduct.categoryId\" placeholder=\"请输入分类ID\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"商品名称\">\r\n          <el-input v-model=\"currentProduct.name\" placeholder=\"请输入商品名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <el-input-number \r\n            v-model=\"currentProduct.price\" \r\n            :min=\"0\" \r\n            :precision=\"2\" \r\n            :controls=\"false\"\r\n            style=\"width: 200px\"\r\n          />\r\n          <span class=\"input-unit\">元</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"库存\">\r\n          <el-input-number \r\n            v-model=\"currentProduct.stock\" \r\n            :min=\"0\" \r\n            :controls=\"false\"\r\n            style=\"width: 200px\"\r\n          />\r\n          <span class=\"input-unit\">件</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"currentProduct.description\" type=\"textarea\" :rows=\"4\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"商品图片\">\r\n          <div class=\"image-upload-container\">\r\n            <div class=\"image-preview-list\">\r\n              <div v-for=\"(image, index) in currentProduct.images\" :key=\"index\" class=\"image-preview-item\">\r\n                <el-image \r\n                  :src=\"image\" \r\n                  fit=\"cover\" \r\n                    class=\"preview-image\"\r\n                />\r\n                <div class=\"image-actions\">\r\n                  <el-button \r\n                    type=\"danger\" \r\n                    icon=\"el-icon-delete\" \r\n                    size=\"small\"\r\n                    circle\r\n                    @click=\"removeImage(index)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <el-upload\r\n              action=\"#\"\r\n              :multiple=\"true\"\r\n              :show-file-list=\"false\"\r\n              :auto-upload=\"false\"\r\n              :on-change=\"handleImageChange\"\r\n              class=\"image-upload-btn\"\r\n            >\r\n              <el-button type=\"primary\" icon=\"el-icon-plus\">添加图片</el-button>\r\n              <div class=\"upload-tip\">支持多图上传</div>\r\n            </el-upload>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"productDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveProduct\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 回复评价对话框 -->\r\n    <el-dialog v-model=\"replyDialogVisible\" title=\"回复评价\" width=\"600px\">\r\n      <div class=\"review-dialog\">\r\n        <div class=\"review-info\">\r\n          <div class=\"review-product\">{{ currentReview?.productName }}</div>\r\n          <el-rate \r\n            :model-value=\"currentReview?.rating ?? 0\"\r\n                disabled \r\n                :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\" \r\n              />\r\n              <div class=\"review-content\">{{ currentReview?.content }}</div>\r\n            </div>\r\n            <div class=\"reply-section\">\r\n              <div class=\"reply-label\">商家回复：</div>\r\n              <el-input\r\n                v-model=\"replyContent\"\r\n                type=\"textarea\"\r\n                :rows=\"4\"\r\n                placeholder=\"请输入回复内容\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <template #footer>\r\n            <el-button @click=\"replyDialogVisible = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"submitReply\">提交回复</el-button>\r\n          </template>\r\n        </el-dialog>\r\n      </div>\r\n    </template>\r\n\r\n    <script setup>\r\n    import { ref, computed, onMounted } from 'vue'\r\n    import { useRouter } from 'vue-router'\r\n    import { ElMessage, ElNotification } from 'element-plus'\r\n\r\n    const router = useRouter()\r\n\r\n    // 功能列表\r\n    const functions = ref([\r\n      { key: 'info', label: '商家信息', icon: 'el-icon-user' },\r\n      { key: 'products', label: '商品管理', icon: 'el-icon-goods' },\r\n      { key: 'orders', label: '订单管理', icon: 'el-icon-tickets' },\r\n      { key: 'reviews', label: '评价管理', icon: 'el-icon-chat-dot-round' }\r\n    ])\r\n\r\n    // 当前视图\r\n    const currentView = ref('info')\r\n\r\n    // 商家信息 - 初始值从登录信息获取\r\n    const shopInfo = ref({\r\n      id: '',\r\n      name: '',\r\n      address: '',\r\n      contact: '',\r\n      password: '',\r\n      avatar: '',\r\n      credit: 'AAAA级',\r\n      balance: 12580.60\r\n    })\r\n\r\n    // 备份初始商家信息用于重置\r\n    const originalShopInfo = ref({})\r\n\r\n    // 商品数据（从localStorage加载）\r\n    const products = ref([])\r\n\r\n    // 订单数据\r\n    const orders = ref([])\r\n\r\n    // 评价数据\r\n    const reviews = ref([\r\n      {\r\n        productName: '有机大米 5kg',\r\n        rating: 4.8,\r\n        content: '米粒饱满，煮饭很香',\r\n        createTime: '2023-11-14 16:30:00',\r\n        replied: false\r\n      },\r\n      {\r\n        productName: '特级橄榄油',\r\n        rating: 5.0,\r\n        content: '炒菜味道清香，品质很好',\r\n        createTime: '2023-11-14 17:15:00',\r\n        replied: true\r\n      }\r\n    ])\r\n\r\n    const productFilter = ref({ keyword: '' })\r\n    const productDialogVisible = ref(false)\r\n    const currentProduct = ref({\r\n      id: '',\r\n      categoryId: '',\r\n      name: '',\r\n      price: 0,\r\n      stock: 0,\r\n      description: '',\r\n      images: []\r\n    })\r\n    const isEditing = ref(false)\r\n\r\n    const orderFilter = ref({ status: 'all', dateRange: [] })\r\n    const statusMap = {\r\n      pending: { text: '待付款', type: 'warning' },\r\n      paid: { text: '已付款', type: 'primary' },\r\n      shipped: { text: '已发货', type: 'success' },\r\n      completed: { text: '已完成', type: 'info' }\r\n    }\r\n\r\n    const reviewFilter = ref({ keyword: '', rating: '0' })\r\n    const replyDialogVisible = ref(false)\r\n    const replyContent = ref('')\r\n    const currentReview = ref(null)\r\n\r\n    // 计算属性 - 过滤商品\r\n    const filteredProducts = computed(() => {\r\n      return (products.value || [])\r\n        .filter(p => \r\n          (p?.name?.toLowerCase() || '').includes(\r\n            (productFilter.value.keyword?.toLowerCase() || '')\r\n          )\r\n        )\r\n        .map(p => ({\r\n          ...p,\r\n          price: Number(p.price) || 0,\r\n          stock: Math.max(Number(p.stock) || 0, 0)\r\n        }))\r\n    })\r\n\r\n    // 过滤订单 - 只显示当前商家的订单\r\n    const filteredOrders = computed(() => {\r\n      // 获取当前商家的所有商品ID\r\n      const myProductIds = products.value.map(p => p.id)\r\n      \r\n      return (orders.value || [])\r\n        .filter(o => {\r\n          // 检查订单是否包含当前商家的商品\r\n          const hasMyProduct = o.items?.some(item => myProductIds.includes(item.id)) ?? false\r\n          \r\n          const statusMatch = orderFilter.value.status === 'all' || \r\n                           o.status === orderFilter.value.status\r\n          const dateMatch = !orderFilter.value.dateRange?.length || (\r\n            new Date(o.createTime) >= new Date(orderFilter.value.dateRange[0]) &&\r\n            new Date(o.createTime) <= new Date(orderFilter.value.dateRange[1]))\r\n          \r\n          return statusMatch && dateMatch && hasMyProduct\r\n        })\r\n    })\r\n\r\n    // 过滤订单中的商品（只显示当前商家的商品）\r\n    const filteredOrderItems = (row) => {\r\n      if (!row.items) return []\r\n      const myProductIds = products.value.map(p => p.id)\r\n      return row.items.filter(item => myProductIds.includes(item.id))\r\n    }\r\n\r\n    const filteredReviews = computed(() => {\r\n      return (reviews.value || [])\r\n        .filter(r => {\r\n          const keywordMatch = (r.productName?.toLowerCase() || '').includes(\r\n            (reviewFilter.value.keyword?.toLowerCase() || '')\r\n          )\r\n          const ratingValue = Number(reviewFilter.value.rating)\r\n          const ratingMatch = ratingValue === 0 || \r\n            (ratingValue === 5 && r.rating === 5) ||\r\n            (ratingValue === 4 && r.rating >= 4 && r.rating < 5) ||\r\n            (ratingValue === 3 && r.rating <= 3)\r\n          return keywordMatch && ratingMatch\r\n        })\r\n    })\r\n\r\n    const dialogTitle = computed(() => isEditing.value ? '编辑商品' : '新增商品')\r\n\r\n    // 检查商品是否属于当前商家\r\n    const isMyProduct = (productId) => {\r\n      return products.value.some(p => p.id === productId)\r\n    }\r\n\r\n    // 检查订单是否有当前商家的商品\r\n    const hasMyProducts = (order) => {\r\n      return order.items?.some(item => isMyProduct(item.id)) || false\r\n    }\r\n\r\n    // 计算当前商家在订单中的总金额\r\n    const calculateMerchantTotal = (order) => {\r\n      if (!order.items) return 0\r\n      \r\n      return order.items.reduce((total, item) => {\r\n        if (isMyProduct(item.id)) {\r\n          return total + (item.price || 0) * (item.quantity || 1)\r\n        }\r\n        return total\r\n      }, 0)\r\n    }\r\n\r\n    // 方法\r\n    const switchView = (view) => {\r\n      if (['info', 'products', 'orders', 'reviews'].includes(view)) {\r\n        currentView.value = view\r\n        \r\n        // 切换到订单管理时加载订单\r\n        if (view === 'orders') {\r\n          loadOrders()\r\n        }\r\n      }\r\n    }\r\n\r\n    const logout = () => {\r\n      // 只清除认证信息，保留用户数据\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('userId')\r\n      localStorage.removeItem('userName')\r\n      localStorage.removeItem('role')\r\n      router.push('/login')\r\n    }\r\n\r\n    const saveShopInfo = () => {\r\n      // 更新本地存储中的商家信息\r\n      const businessUsers = JSON.parse(localStorage.getItem('businessUsers') || '[]')\r\n      const userId = localStorage.getItem('userId')\r\n      \r\n      if (!userId) {\r\n        ElMessage.error('用户信息异常，请重新登录')\r\n        return\r\n      }\r\n      \r\n      const index = businessUsers.findIndex(u => u.userId === userId)\r\n      \r\n      if (index !== -1) {\r\n        // 更新商家信息\r\n        const updatedUser = {\r\n          ...businessUsers[index],\r\n          userName: shopInfo.value.name,\r\n          address: shopInfo.value.address,\r\n          contact: shopInfo.value.contact,\r\n          avatar: shopInfo.value.avatar\r\n        }\r\n        \r\n        // 如果输入了新密码，则更新密码\r\n        if (shopInfo.value.password) {\r\n          updatedUser.password = shopInfo.value.password\r\n        }\r\n        \r\n        businessUsers[index] = updatedUser\r\n        localStorage.setItem('businessUsers', JSON.stringify(businessUsers))\r\n        \r\n        // 更新本地存储中的用户名\r\n        localStorage.setItem('userName', shopInfo.value.name)\r\n        \r\n        // 更新原始信息备份\r\n        originalShopInfo.value = { ...shopInfo.value }\r\n        \r\n        ElNotification.success({\r\n          title: '保存成功',\r\n          message: '商家信息已更新',\r\n          duration: 2000\r\n        })\r\n        \r\n        // 清空密码字段\r\n        shopInfo.value.password = ''\r\n      } else {\r\n        ElMessage.error('未找到商家信息，请重新登录')\r\n      }\r\n    }\r\n\r\n    const resetForm = () => {\r\n      shopInfo.value = { ...originalShopInfo.value }\r\n      shopInfo.value.password = ''\r\n      ElMessage.info('已重置修改内容')\r\n    }\r\n\r\n    // 处理商家头像上传\r\n    const handleAvatarChange = (file) => {\r\n      if (!file) return\r\n      \r\n      const rawFile = file.raw\r\n      if (rawFile) {\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n          shopInfo.value.avatar = e.target.result\r\n        }\r\n        reader.readAsDataURL(rawFile)\r\n      }\r\n    }\r\n\r\n    // 处理商品图片上传\r\n    const handleImageChange = (file) => {\r\n      if (!file) return\r\n      \r\n      const rawFile = file.raw\r\n      if (rawFile) {\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n          currentProduct.value.images.push(e.target.result)\r\n        }\r\n        reader.readAsDataURL(rawFile)\r\n      }\r\n    }\r\n\r\n    // 移除商品图片\r\n    const removeImage = (index) => {\r\n      currentProduct.value.images.splice(index, 1)\r\n    }\r\n\r\n    const showAddDialog = () => {\r\n      currentProduct.value = {\r\n        id: '',\r\n        categoryId: '',\r\n        name: '',\r\n        price: 0,\r\n        stock: 0,\r\n        description: '',\r\n        images: []\r\n      }\r\n      isEditing.value = false\r\n      productDialogVisible.value = true\r\n    }\r\n\r\n    const editProduct = (product) => {\r\n      if (!product?.id) {\r\n        ElMessage.warning('无效的商品数据')\r\n        return\r\n      }\r\n      currentProduct.value = { ...product }\r\n      isEditing.value = true\r\n      productDialogVisible.value = true\r\n    }\r\n\r\n    // 保存商品到localStorage\r\n    const saveProductToLocalStorage = () => {\r\n      const businessId = localStorage.getItem('userId') || 'default'\r\n      const storageKey = `businessProducts_${businessId}`\r\n      localStorage.setItem(storageKey, JSON.stringify(products.value))\r\n    }\r\n\r\n    // 从localStorage加载商品\r\n    const loadProductsFromLocalStorage = () => {\r\n      const businessId = localStorage.getItem('userId') || 'default'\r\n      const storageKey = `businessProducts_${businessId}`\r\n      const savedProducts = localStorage.getItem(storageKey)\r\n      if (savedProducts) {\r\n        products.value = JSON.parse(savedProducts)\r\n      }\r\n    }\r\n\r\n    // 从localStorage加载订单\r\n    const loadOrders = () => {\r\n      const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]')\r\n      \r\n      // 应用筛选条件\r\n      let filteredOrders = [...savedOrders]\r\n      \r\n      // 状态筛选\r\n      if (orderFilter.value.status !== 'all') {\r\n        filteredOrders = filteredOrders.filter(order => order.status === orderFilter.value.status)\r\n      }\r\n      \r\n      // 日期筛选\r\n      if (orderFilter.value.dateRange && orderFilter.value.dateRange.length === 2) {\r\n        const startDate = new Date(orderFilter.value.dateRange[0])\r\n        const endDate = new Date(orderFilter.value.dateRange[1])\r\n        endDate.setHours(23, 59, 59, 999) // 包含结束日期的全天\r\n        \r\n        filteredOrders = filteredOrders.filter(order => {\r\n          const orderDate = new Date(order.createTime)\r\n          return orderDate >= startDate && orderDate <= endDate\r\n        })\r\n      }\r\n      \r\n      orders.value = filteredOrders\r\n    }\r\n\r\n    const saveProduct = () => {\r\n      if (!currentProduct.value.id) {\r\n        ElMessage.error('商品ID不能为空')\r\n        return\r\n      }\r\n      if (!currentProduct.value.name?.trim()) {\r\n        ElMessage.error('商品名称不能为空')\r\n        return\r\n      }\r\n      if (currentProduct.value.price < 0) {\r\n        ElMessage.error('价格不能为负数')\r\n        return\r\n      }\r\n\r\n      try {\r\n        if (isEditing.value) {\r\n          const index = products.value.findIndex(p => p?.id === currentProduct.value?.id)\r\n          if (index !== -1) {\r\n            products.value.splice(index, 1, {\r\n              ...currentProduct.value,\r\n              price: Number(currentProduct.value.price) || 0,\r\n              stock: Math.max(Number(currentProduct.value.stock), 0)\r\n            })\r\n          }\r\n        } else {\r\n          // 检查商品ID是否已存在\r\n          if (products.value.some(p => p.id === currentProduct.value.id)) {\r\n            ElMessage.error('商品ID已存在，请使用不同的ID')\r\n            return\r\n          }\r\n          \r\n          products.value.push({\r\n            ...currentProduct.value,\r\n            name: currentProduct.value.name || '新商品',\r\n            price: Number(currentProduct.value.price) || 0,\r\n            stock: Math.max(Number(currentProduct.value.stock), 0)\r\n          })\r\n        }\r\n        \r\n        // 保存到localStorage\r\n        saveProductToLocalStorage()\r\n        \r\n        productDialogVisible.value = false\r\n        ElMessage.success('商品保存成功')\r\n      } catch (error) {\r\n        ElMessage.error(`保存失败: ${error.message}`)\r\n      }\r\n    }\r\n\r\n    const deleteProduct = (id) => {\r\n      if (!id) {\r\n        ElMessage.warning('无效的商品ID')\r\n        return\r\n      }\r\n      const index = products.value.findIndex(p => p?.id === id)\r\n      if (index !== -1) {\r\n        products.value.splice(index, 1)\r\n        \r\n        // 保存到localStorage\r\n        saveProductToLocalStorage()\r\n        \r\n        ElMessage.success('商品删除成功')\r\n      }\r\n    }\r\n\r\n    // 发货操作 - 只能对已付款订单进行发货\r\n    const handleShip = (order) => {\r\n      if (order?.orderId && order.status === 'paid') {\r\n        // 更新订单状态\r\n        const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]')\r\n        const updatedOrders = savedOrders.map(o => {\r\n          if (o.orderId === order.orderId) {\r\n            return {\r\n              ...o,\r\n              status: 'shipped',\r\n              shipTime: new Date().toLocaleString()\r\n            }\r\n          }\r\n          return o\r\n        })\r\n        \r\n        localStorage.setItem('orders', JSON.stringify(updatedOrders))\r\n        \r\n        ElMessage.success('订单状态已更新为已发货')\r\n        loadOrders() // 重新加载订单以更新状态显示\r\n      } else {\r\n        ElMessage.error('只能对已付款的订单进行发货操作')\r\n      }\r\n    }\r\n\r\n    const showReplyDialog = (review) => {\r\n      if (review) {\r\n        currentReview.value = review\r\n        replyDialogVisible.value = true\r\n        replyContent.value = ''\r\n      }\r\n    }\r\n\r\n    const submitReply = () => {\r\n      if (currentReview.value && replyContent.value.trim()) {\r\n        currentReview.value.replied = true\r\n        replyDialogVisible.value = false\r\n        replyContent.value = ''\r\n        ElMessage.success('回复成功')\r\n      }\r\n    }\r\n\r\n    // 页面加载时从本地存储获取商家信息和商品数据\r\n    onMounted(() => {\r\n      // 设置商家ID为登录时的用户ID\r\n      const userId = localStorage.getItem('userId')\r\n      const userName = localStorage.getItem('userName')\r\n      \r\n      shopInfo.value.id = userId || 'BUS2023VIP'\r\n      shopInfo.value.name = userName || '商家名称'\r\n      \r\n      // 尝试从本地存储获取完整商家信息\r\n      const businessUsers = JSON.parse(localStorage.getItem('businessUsers') || '[]')\r\n      const currentBusiness = businessUsers.find(u => u.userId === userId)\r\n      \r\n      if (currentBusiness) {\r\n        shopInfo.value = {\r\n          ...shopInfo.value,\r\n          address: currentBusiness.address || '',\r\n          contact: currentBusiness.contact || '',\r\n          avatar: currentBusiness.avatar || ''\r\n        }\r\n      }\r\n      \r\n      // 保存原始信息用于重置\r\n      originalShopInfo.value = { ...shopInfo.value }\r\n      \r\n      // 从localStorage加载商品数据\r\n      loadProductsFromLocalStorage()\r\n    })\r\n    </script>\r\n\r\n    <style scoped>\r\n    .business-container {\r\n      display: grid;\r\n      grid-template-columns: 220px 1fr;\r\n      grid-template-rows: 80px 1fr;\r\n      height: 100vh;\r\n      background: #f5f7fa;\r\n      font-family: 'Helvetica Neue', Arial, sans-serif;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .action-bar {\r\n      grid-column: 1 / -1;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 0 30px;\r\n      background: #fff;\r\n      border-bottom: 1px solid #ebeef5;\r\n      box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n      z-index: 10;\r\n    }\r\n\r\n    .user-info {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 15px;\r\n    }\r\n\r\n    .user-details {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .welcome-text {\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      color: #303133;\r\n    }\r\n\r\n    .shop-id {\r\n      font-size: 13px;\r\n      color: #909399;\r\n    }\r\n\r\n    .logout-btn {\r\n      padding: 10px 20px;\r\n      border-radius: 6px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .function-panel {\r\n      padding: 25px 0;\r\n      background: #fff;\r\n      border-right: 1px solid #ebeef5;\r\n      overflow-y: auto;\r\n      box-shadow: 2px 0 5px rgba(0,0,0,0.03);\r\n    }\r\n\r\n    .function-card {\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 16px 30px;\r\n      cursor: pointer;\r\n      transition: all 0.3s;\r\n      font-size: 15px;\r\n      color: #606266;\r\n      border-left: 4px solid transparent;\r\n    }\r\n\r\n    .function-card:hover {\r\n      background-color: #f5f7fa;\r\n      color: #409eff;\r\n    }\r\n\r\n    .function-card.active {\r\n      background-color: #ecf5ff;\r\n      color: #409eff;\r\n      font-weight: 500;\r\n      border-left: 4px solid #409eff;\r\n    }\r\n\r\n    .function-icon {\r\n      margin-right: 15px;\r\n      font-size: 20px;\r\n      width: 24px;\r\n      text-align: center;\r\n    }\r\n\r\n    .content-area {\r\n      padding: 30px;\r\n      background: white;\r\n      overflow-y: auto;\r\n      max-height: calc(100vh - 80px);\r\n    }\r\n\r\n    .content-area h2 {\r\n      margin-top: 0;\r\n      margin-bottom: 25px;\r\n      color: #303133;\r\n      font-size: 22px;\r\n      font-weight: 600;\r\n      display: flex;\r\n      align-items: center;\r\n      padding-bottom: 15px;\r\n      border-bottom: 1px solid #ebeef5;\r\n    }\r\n\r\n    .content-area h2 i {\r\n      margin-right: 12px;\r\n      font-size: 24px;\r\n      color: #409eff;\r\n    }\r\n\r\n    .info-card {\r\n      border-radius: 10px;\r\n      box-shadow: 0 4px 12px rgba(0,0,0,0.05);\r\n      border: none;\r\n    }\r\n\r\n    .table-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 25px;\r\n    }\r\n\r\n    .filter-bar {\r\n      display: flex;\r\n      gap: 15px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .avatar-upload {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 25px;\r\n    }\r\n\r\n    .avatar-preview {\r\n      border: 1px dashed #dcdfe6;\r\n      border-radius: 8px;\r\n      background-color: #f8f9fa;\r\n    }\r\n\r\n    .avatar-actions {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 10px;\r\n    }\r\n\r\n    .data-table {\r\n      border-radius: 8px;\r\n      overflow: hidden;\r\n      box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n    }\r\n\r\n    .error-text {\r\n      color: #f56c6c;\r\n      font-size: 12px;\r\n      padding: 4px 8px;\r\n    }\r\n\r\n    .replied-text {\r\n      color: #67C23A;\r\n      font-size: 12px;\r\n    }\r\n\r\n    .el-form-item {\r\n      margin-bottom: 25px;\r\n    }\r\n\r\n    .info-tip {\r\n      font-size: 12px;\r\n      color: #909399;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: center;\r\n      gap: 20px;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .form-actions .el-button {\r\n      padding: 12px 30px;\r\n      font-size: 16px;\r\n    }\r\n\r\n    .review-dialog {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 25px;\r\n    }\r\n\r\n    .review-info {\r\n      padding: 15px;\r\n      background: #f9fafc;\r\n      border-radius: 8px;\r\n    }\r\n\r\n    .review-product {\r\n      font-weight: 600;\r\n      margin-bottom: 10px;\r\n      font-size: 16px;\r\n    }\r\n\r\n    .review-content {\r\n      margin-top: 10px;\r\n      color: #606266;\r\n      line-height: 1.6;\r\n    }\r\n\r\n    .reply-section {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .reply-label {\r\n      font-weight: 500;\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    .input-unit {\r\n      margin-left: 10px;\r\n      color: #909399;\r\n    }\r\n\r\n    .image-upload-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 15px;\r\n    }\r\n\r\n    .image-preview-list {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 15px;\r\n    }\r\n\r\n    .image-preview-item {\r\n      position: relative;\r\n      width: 120px;\r\n      height: 120px;\r\n      border: 1px dashed #dcdfe6;\r\n      border-radius: 6px;\r\n      overflow: hidden;\r\n      transition: all 0.3s;\r\n    }\r\n\r\n    .image-preview-item:hover {\r\n      border-color: #409eff;\r\n    }\r\n\r\n    .preview-image {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n\r\n    .image-actions {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n    }\r\n\r\n    .image-upload-btn {\r\n      width: 120px;\r\n    }\r\n\r\n    .upload-tip {\r\n      font-size: 12px;\r\n      color: #909399;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    .no-image {\r\n      width: 80px;\r\n      height: 80px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background: #f5f7fa;\r\n      border: 1px dashed #dcdfe6;\r\n      border-radius: 4px;\r\n      color: #909399;\r\n      font-size: 12px;\r\n    }\r\n\r\n    .image-slot {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: #f5f7fa;\r\n      color: #909399;\r\n      font-size: 30px;\r\n    }\r\n\r\n    /* 新增的商品信息样式 */\r\n    .product-list {\r\n      padding: 10px 0;\r\n    }\r\n\r\n    .product-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 10px;\r\n      padding: 10px 0;\r\n      border-bottom: 1px solid #eee;\r\n    }\r\n\r\n    .product-item:last-child {\r\n      border-bottom: none;\r\n    }\r\n\r\n    .product-details {\r\n      flex: 1;\r\n    }\r\n\r\n    .product-name {\r\n      font-weight: 500;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    .product-price {\r\n      color: #f56c6c;\r\n      font-size: 14px;\r\n    }\r\n    </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}