{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'OrderManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const orderFilter = ref({\n      status: 'all',\n      dateRange: []\n    });\n    const orders = ref([]);\n    const statusMap = {\n      pending: {\n        text: '待付款',\n        type: 'warning'\n      },\n      paid: {\n        text: '已付款',\n        type: 'primary'\n      },\n      shipped: {\n        text: '已发货',\n        type: 'success'\n      },\n      completed: {\n        text: '已完成',\n        type: 'info'\n      }\n    };\n    const filteredOrders = computed(() => {\n      // 获取当前商家的所有商品ID\n      const myProductIds = JSON.parse(localStorage.getItem('businessProducts') || '[]').map(p => p.id);\n      return (orders.value || []).filter(o => {\n        const hasMyProduct = o.items?.some(item => myProductIds.includes(item.id)) ?? false;\n        const statusMatch = orderFilter.value.status === 'all' || o.status === orderFilter.value.status;\n        const dateMatch = !orderFilter.value.dateRange?.length || new Date(o.createTime) >= new Date(orderFilter.value.dateRange[0]) && new Date(o.createTime) <= new Date(orderFilter.value.dateRange[1]);\n        return statusMatch && dateMatch && hasMyProduct;\n      });\n    });\n    const filteredOrderItems = row => {\n      if (!row.items) return [];\n      const myProductIds = JSON.parse(localStorage.getItem('businessProducts') || '[]').map(p => p.id);\n      return row.items.filter(item => myProductIds.includes(item.id));\n    };\n    const isMyProduct = productId => {\n      const products = JSON.parse(localStorage.getItem('businessProducts') || '[]');\n      return products.some(p => p.id === productId);\n    };\n    const hasMyProducts = order => {\n      return order.items?.some(item => isMyProduct(item.id)) || false;\n    };\n    const calculateMerchantTotal = order => {\n      if (!order.items) return 0;\n      return order.items.reduce((total, item) => {\n        if (isMyProduct(item.id)) {\n          return total + (item.price || 0) * (item.quantity || 1);\n        }\n        return total;\n      }, 0);\n    };\n    const handleShip = order => {\n      if (order?.orderId && order.status === 'paid') {\n        const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n        const updatedOrders = savedOrders.map(o => {\n          if (o.orderId === order.orderId) {\n            return {\n              ...o,\n              status: 'shipped',\n              shipTime: new Date().toLocaleString()\n            };\n          }\n          return o;\n        });\n        localStorage.setItem('orders', JSON.stringify(updatedOrders));\n        ElMessage.success('订单状态已更新为已发货');\n        loadOrders();\n      } else {\n        ElMessage.error('只能对已付款的订单进行发货操作');\n      }\n    };\n    const loadOrders = () => {\n      const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n      let filteredOrders = [...savedOrders];\n      if (orderFilter.value.status !== 'all') {\n        filteredOrders = filteredOrders.filter(order => order.status === orderFilter.value.status);\n      }\n      if (orderFilter.value.dateRange && orderFilter.value.dateRange.length === 2) {\n        const startDate = new Date(orderFilter.value.dateRange[0]);\n        const endDate = new Date(orderFilter.value.dateRange[1]);\n        endDate.setHours(23, 59, 59, 999);\n        filteredOrders = filteredOrders.filter(order => {\n          const orderDate = new Date(order.createTime);\n          return orderDate >= startDate && orderDate <= endDate;\n        });\n      }\n      orders.value = filteredOrders;\n    };\n    onMounted(() => {\n      loadOrders();\n    });\n    const __returned__ = {\n      orderFilter,\n      orders,\n      statusMap,\n      filteredOrders,\n      filteredOrderItems,\n      isMyProduct,\n      hasMyProducts,\n      calculateMerchantTotal,\n      handleShip,\n      loadOrders,\n      ref,\n      computed,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","ElMessage","orderFilter","status","dateRange","orders","statusMap","pending","text","type","paid","shipped","completed","filteredOrders","myProductIds","JSON","parse","localStorage","getItem","map","p","id","value","filter","o","hasMyProduct","items","some","item","includes","statusMatch","dateMatch","length","Date","createTime","filteredOrderItems","row","isMyProduct","productId","products","hasMyProducts","order","calculateMerchantTotal","reduce","total","price","quantity","handleShip","orderId","savedOrders","updatedOrders","shipTime","toLocaleString","setItem","stringify","success","loadOrders","error","startDate","endDate","setHours","orderDate"],"sources":["E:/实验例子/project/src/views/business/OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-section\">\r\n    <h2><i class=\"el-icon-tickets\"></i> 订单管理</h2>\r\n    <div class=\"filter-bar\">\r\n      <div class=\"filter-group\">\r\n        <el-select \r\n          v-model=\"orderFilter.status\" \r\n          placeholder=\"订单状态\" \r\n          style=\"width: 150px\"\r\n        >\r\n          <el-option label=\"全部\" value=\"all\" />\r\n          <el-option label=\"待付款\" value=\"pending\" />\r\n          <el-option label=\"已付款\" value=\"paid\" />\r\n          <el-option label=\"已发货\" value=\"shipped\" />\r\n          <el-option label=\"已完成\" value=\"completed\" />\r\n        </el-select>\r\n        <el-date-picker\r\n          v-model=\"orderFilter.dateRange\"\r\n          type=\"daterange\"\r\n          range-separator=\"至\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n          style=\"width: 350px\"\r\n        />\r\n      </div>\r\n      <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"loadOrders\">搜索</el-button>\r\n    </div>\r\n\r\n    <el-table :data=\"filteredOrders\" border style=\"width: 100%\" class=\"data-table\">\r\n      <el-table-column prop=\"orderId\" label=\"订单号\" width=\"180\" />\r\n      <el-table-column prop=\"createTime\" label=\"下单时间\" width=\"180\" />\r\n      \r\n      <el-table-column label=\"商品信息\">\r\n        <template #default=\"{ row }\">\r\n          <div class=\"product-list\">\r\n            <div \r\n              v-for=\"(item, index) in filteredOrderItems(row)\" \r\n              :key=\"index\"\r\n              class=\"product-item\"\r\n            >\r\n              <el-image \r\n                :src=\"item.image || '/placeholder-product.jpg'\"\r\n                style=\"width: 60px; height: 60px; border-radius: 4px;\"\r\n                fit=\"cover\"\r\n              />\r\n              <div class=\"product-details\">\r\n                <div class=\"product-name\">{{ item.name }}</div>\r\n                <div class=\"product-price\">¥{{ (item.price || 0).toFixed(2) }} × {{ item.quantity || 1 }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      \r\n      <el-table-column label=\"金额\" width=\"120\" align=\"right\">\r\n        <template #default=\"{ row }\">\r\n          ¥{{ calculateMerchantTotal(row).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      \r\n      <el-table-column label=\"状态\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <el-tag :type=\"statusMap[row?.status]?.type || 'info'\">\r\n            {{ statusMap[row?.status]?.text || '未知状态' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      \r\n      <el-table-column label=\"操作\" width=\"150\">\r\n        <template #default=\"{ row }\">\r\n          <div v-if=\"row\">\r\n            <el-button \r\n              v-if=\"row.status === 'paid' && hasMyProducts(row)\"\r\n              size=\"small\" \r\n              type=\"success\"\r\n              icon=\"el-icon-truck\"\r\n              @click=\"handleShip(row)\"\r\n            >发货</el-button>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst orderFilter = ref({ status: 'all', dateRange: [] })\r\nconst orders = ref([])\r\n\r\nconst statusMap = {\r\n  pending: { text: '待付款', type: 'warning' },\r\n  paid: { text: '已付款', type: 'primary' },\r\n  shipped: { text: '已发货', type: 'success' },\r\n  completed: { text: '已完成', type: 'info' }\r\n}\r\n\r\nconst filteredOrders = computed(() => {\r\n  // 获取当前商家的所有商品ID\r\n  const myProductIds = JSON.parse(localStorage.getItem('businessProducts') || '[]')\r\n    .map(p => p.id)\r\n  \r\n  return (orders.value || [])\r\n    .filter(o => {\r\n      const hasMyProduct = o.items?.some(item => myProductIds.includes(item.id)) ?? false\r\n      \r\n      const statusMatch = orderFilter.value.status === 'all' || \r\n                       o.status === orderFilter.value.status\r\n      const dateMatch = !orderFilter.value.dateRange?.length || (\r\n        new Date(o.createTime) >= new Date(orderFilter.value.dateRange[0]) &&\r\n        new Date(o.createTime) <= new Date(orderFilter.value.dateRange[1]))\r\n      \r\n      return statusMatch && dateMatch && hasMyProduct\r\n    })\r\n})\r\n\r\nconst filteredOrderItems = (row) => {\r\n  if (!row.items) return []\r\n  const myProductIds = JSON.parse(localStorage.getItem('businessProducts') || '[]')\r\n    .map(p => p.id)\r\n  return row.items.filter(item => myProductIds.includes(item.id))\r\n}\r\n\r\nconst isMyProduct = (productId) => {\r\n  const products = JSON.parse(localStorage.getItem('businessProducts') || '[]')\r\n  return products.some(p => p.id === productId)\r\n}\r\n\r\nconst hasMyProducts = (order) => {\r\n  return order.items?.some(item => isMyProduct(item.id)) || false\r\n}\r\n\r\nconst calculateMerchantTotal = (order) => {\r\n  if (!order.items) return 0\r\n  \r\n  return order.items.reduce((total, item) => {\r\n    if (isMyProduct(item.id)) {\r\n      return total + (item.price || 0) * (item.quantity || 1)\r\n    }\r\n    return total\r\n  }, 0)\r\n}\r\n\r\nconst handleShip = (order) => {\r\n  if (order?.orderId && order.status === 'paid') {\r\n    const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]')\r\n    const updatedOrders = savedOrders.map(o => {\r\n      if (o.orderId === order.orderId) {\r\n        return {\r\n          ...o,\r\n          status: 'shipped',\r\n          shipTime: new Date().toLocaleString()\r\n        }\r\n      }\r\n      return o\r\n    })\r\n    \r\n    localStorage.setItem('orders', JSON.stringify(updatedOrders))\r\n    ElMessage.success('订单状态已更新为已发货')\r\n    loadOrders()\r\n  } else {\r\n    ElMessage.error('只能对已付款的订单进行发货操作')\r\n  }\r\n}\r\n\r\nconst loadOrders = () => {\r\n  const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]')\r\n  \r\n  let filteredOrders = [...savedOrders]\r\n  \r\n  if (orderFilter.value.status !== 'all') {\r\n    filteredOrders = filteredOrders.filter(order => order.status === orderFilter.value.status)\r\n  }\r\n  \r\n  if (orderFilter.value.dateRange && orderFilter.value.dateRange.length === 2) {\r\n    const startDate = new Date(orderFilter.value.dateRange[0])\r\n    const endDate = new Date(orderFilter.value.dateRange[1])\r\n    endDate.setHours(23, 59, 59, 999)\r\n    \r\n    filteredOrders = filteredOrders.filter(order => {\r\n      const orderDate = new Date(order.createTime)\r\n      return orderDate >= startDate && orderDate <= endDate\r\n    })\r\n  }\r\n  \r\n  orders.value = filteredOrders\r\n}\r\n\r\nonMounted(() => {\r\n  loadOrders()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.order-section h2 {\r\n  margin-top: 0;\r\n  margin-bottom: 25px;\r\n  color: #303133;\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n.order-section h2 i {\r\n  margin-right: 12px;\r\n  font-size: 24px;\r\n  color: #409eff;\r\n}\r\n\r\n.filter-bar {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-group {\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.data-table {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n}\r\n\r\n.product-list {\r\n  padding: 10px 0;\r\n}\r\n\r\n.product-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.product-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.product-details {\r\n  flex: 1;\r\n}\r\n\r\n.product-name {\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.product-price {\r\n  color: #f56c6c;\r\n  font-size: 14px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}