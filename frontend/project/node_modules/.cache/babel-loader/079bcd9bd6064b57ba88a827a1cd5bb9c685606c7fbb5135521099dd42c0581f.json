{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"shopping-cart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"cart-actions\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"product-info\"\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"checkout\"\n};\nconst _hoisted_7 = {\n  class: \"selected-info\"\n};\nconst _hoisted_8 = {\n  class: \"highlight\"\n};\nconst _hoisted_9 = {\n  class: \"total\"\n};\nconst _hoisted_10 = {\n  class: \"highlight\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_progress = _resolveComponent(\"el-progress\");\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"购物车 (\" + _toDisplayString($setup.cartItems?.length || 0) + \")\", 1 /* TEXT */), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_progress, {\n    percentage: 50,\n    indeterminate: true\n  }), _cache[0] || (_cache[0] = _createElementVNode(\"p\", null, \"加载购物车中...\", -1 /* HOISTED */))])) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_alert, {\n    title: $setup.error,\n    type: \"error\",\n    \"show-icon\": \"\"\n  }, null, 8 /* PROPS */, [\"title\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.retryFetch\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"重试\")])),\n    _: 1 /* STABLE */,\n    __: [1]\n  })])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [$setup.cartItems?.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_checkbox, {\n    \"model-value\": $setup.allSelected,\n    onChange: $setup.handleToggleSelectAll\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 全选 \")])),\n    _: 1 /* STABLE */,\n    __: [2]\n  }, 8 /* PROPS */, [\"model-value\"]), _createVNode(_component_el_button, {\n    type: \"danger\",\n    size: \"small\",\n    disabled: $setup.selectedItems.size === 0 || $setup.cartStore.loading,\n    loading: $setup.cartStore.loading,\n    onClick: $setup.removeSelectedItems\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 删除选中 \")])),\n    _: 1 /* STABLE */,\n    __: [3]\n  }, 8 /* PROPS */, [\"disabled\", \"loading\"])])) : _createCommentVNode(\"v-if\", true), $setup.cartItems?.length > 0 ? (_openBlock(), _createBlock(_component_el_table, {\n    key: 1,\n    data: $setup.cartItems,\n    border: \"\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 选择列 \"), _createVNode(_component_el_table_column, {\n      width: \"50\",\n      align: \"center\"\n    }, {\n      header: _withCtx(() => [_createVNode(_component_el_checkbox, {\n        \"model-value\": $setup.allSelected,\n        onChange: $setup.handleToggleSelectAll\n      }, null, 8 /* PROPS */, [\"model-value\"])]),\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_checkbox, {\n        \"model-value\": $setup.selectedItems.has(row.cartItemId),\n        onChange: $event => $setup.handleToggleSelection(row.cartItemId)\n      }, null, 8 /* PROPS */, [\"model-value\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 商品列 \"), _createVNode(_component_el_table_column, {\n      label: \"商品\",\n      width: \"300\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [row ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_router_link, {\n        to: `/buyer/${$setup.username}/product/${row.id}`\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_image, {\n          src: row.image || '/placeholder-product.jpg',\n          width: \"80\",\n          style: {\n            \"cursor\": \"pointer\"\n          }\n        }, null, 8 /* PROPS */, [\"src\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createVNode(_component_router_link, {\n        to: `/buyer/${$setup.username}/product/${row.id}`,\n        class: \"product-link\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.name || '未知商品'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 单价列 \"), _createVNode(_component_el_table_column, {\n      label: \"单价\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createTextVNode(\" ¥\" + _toDisplayString((row.price || 0).toFixed(2)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 数量列 \"), _createVNode(_component_el_table_column, {\n      label: \"数量\",\n      width: \"150\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_input_number, {\n        modelValue: row.quantity,\n        \"onUpdate:modelValue\": $event => row.quantity = $event,\n        min: 1,\n        max: 99,\n        disabled: $setup.cartStore.loading,\n        onChange: $event => $setup.updateQuantity(row)\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 小计列 \"), _createVNode(_component_el_table_column, {\n      label: \"小计\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createTextVNode(\" ¥\" + _toDisplayString(((row.price || 0) * (row.quantity || 1)).toFixed(2)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 操作列 \"), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        type: \"danger\",\n        disabled: $setup.cartStore.loading,\n        loading: $setup.cartStore.loading,\n        onClick: $event => $setup.removeItem(row)\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" 删除 \")])),\n        _: 2 /* DYNAMIC */,\n        __: [4]\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"disabled\", \"loading\", \"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 空购物车提示 \"), _createVNode(_component_el_empty, {\n    description: \"您的购物车还是空的，快去选购商品吧！\",\n    class: \"empty-tip\"\n  })], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 结算区域 \"), $setup.cartItems?.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[5] || (_cache[5] = _createTextVNode(\" 已选 \")), _createElementVNode(\"span\", _hoisted_8, _toDisplayString($setup.selectedItems.size), 1 /* TEXT */), _cache[6] || (_cache[6] = _createTextVNode(\" 件商品 \"))]), _createElementVNode(\"div\", _hoisted_9, [_cache[7] || (_cache[7] = _createTextVNode(\" 合计：\")), _createElementVNode(\"span\", _hoisted_10, \"¥\" + _toDisplayString(($setup.selectedTotalPrice || 0).toFixed(2)), 1 /* TEXT */)]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"large\",\n    disabled: $setup.selectedItems.size === 0 || $setup.cartStore.loading || $setup.checkoutLoading,\n    loading: $setup.checkoutLoading,\n    onClick: $setup.checkout\n  }, {\n    default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\" 去结算 \")])),\n    _: 1 /* STABLE */,\n    __: [8]\n  }, 8 /* PROPS */, [\"disabled\", \"loading\"])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","cartItems","length","loading","_hoisted_2","_createVNode","_component_el_progress","percentage","indeterminate","_createCommentVNode","error","_hoisted_3","_component_el_alert","title","type","_component_el_button","onClick","retryFetch","default","_withCtx","_cache","_createTextVNode","_","__","_Fragment","_hoisted_4","_component_el_checkbox","allSelected","onChange","handleToggleSelectAll","size","disabled","selectedItems","cartStore","removeSelectedItems","_createBlock","_component_el_table","data","border","style","_component_el_table_column","width","align","header","row","has","cartItemId","$event","handleToggleSelection","label","_hoisted_5","_component_router_link","to","username","id","_component_el_image","src","image","name","price","toFixed","_component_el_input_number","modelValue","quantity","min","max","updateQuantity","removeItem","_component_el_empty","description","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","selectedTotalPrice","checkoutLoading","checkout"],"sources":["E:\\实验例子\\project\\src\\components\\ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shopping-cart\">\r\n    <h2>购物车 ({{ cartItems?.length || 0 }})</h2>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-overlay\">\r\n      <el-progress :percentage=\"50\" :indeterminate=\"true\" />\r\n      <p>加载购物车中...</p>\r\n    </div>\r\n    \r\n    <div v-if=\"error\" class=\"error-message\">\r\n      <el-alert :title=\"error\" type=\"error\" show-icon />\r\n      <el-button type=\"primary\" @click=\"retryFetch\">重试</el-button>\r\n    </div>\r\n    \r\n    <template v-else>\r\n      <div class=\"cart-actions\" v-if=\"cartItems?.length > 0\">\r\n        <el-checkbox \r\n          :model-value=\"allSelected\"\r\n          @change=\"handleToggleSelectAll\"\r\n        >\r\n          全选\r\n        </el-checkbox>\r\n        <el-button \r\n          type=\"danger\" \r\n          size=\"small\"\r\n          :disabled=\"selectedItems.size === 0 || cartStore.loading\"\r\n          :loading=\"cartStore.loading\"\r\n          @click=\"removeSelectedItems\"\r\n        >\r\n          删除选中\r\n        </el-button>\r\n      </div>\r\n      \r\n      <el-table \r\n        :data=\"cartItems\"\r\n        v-if=\"cartItems?.length > 0\"\r\n        border\r\n        style=\"width: 100%\"\r\n      >\r\n        <!-- 选择列 -->\r\n        <el-table-column width=\"50\" align=\"center\">\r\n          <template #header>\r\n            <el-checkbox \r\n              :model-value=\"allSelected\"\r\n              @change=\"handleToggleSelectAll\" \r\n            />\r\n          </template>\r\n          <template #default=\"{ row }\">\r\n            <el-checkbox \r\n              :model-value=\"selectedItems.has(row.cartItemId)\" \r\n              @change=\"handleToggleSelection(row.cartItemId)\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <!-- 商品列 -->\r\n        <el-table-column label=\"商品\" width=\"300\">\r\n          <template #default=\"{ row }\">\r\n            <div class=\"product-info\" v-if=\"row\">\r\n              <router-link :to=\"`/buyer/${username}/product/${row.id}`\">\r\n                <el-image \r\n                  :src=\"row.image || '/placeholder-product.jpg'\"\r\n                  width=\"80\"\r\n                  style=\"cursor: pointer\"\r\n                />\r\n              </router-link>\r\n              <router-link \r\n                :to=\"`/buyer/${username}/product/${row.id}`\"\r\n                class=\"product-link\"\r\n              >\r\n                {{ row.name || '未知商品' }}\r\n              </router-link>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 单价列 -->\r\n        <el-table-column label=\"单价\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            ¥{{ (row.price || 0).toFixed(2) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 数量列 -->\r\n        <el-table-column label=\"数量\" width=\"150\">\r\n          <template #default=\"{ row }\">\r\n            <el-input-number \r\n              v-model=\"row.quantity\"\r\n              :min=\"1\"\r\n              :max=\"99\"\r\n              :disabled=\"cartStore.loading\"\r\n              @change=\"updateQuantity(row)\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 小计列 -->\r\n        <el-table-column label=\"小计\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            ¥{{ ((row.price || 0) * (row.quantity || 1)).toFixed(2) }}\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <!-- 操作列 -->\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            <el-button \r\n              type=\"danger\" \r\n              :disabled=\"cartStore.loading\"\r\n              :loading=\"cartStore.loading\"\r\n              @click=\"removeItem(row)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 空购物车提示 -->\r\n      <el-empty\r\n        v-else\r\n        description=\"您的购物车还是空的，快去选购商品吧！\"\r\n        class=\"empty-tip\"\r\n      />\r\n\r\n      <!-- 结算区域 -->\r\n      <div class=\"checkout\" v-if=\"cartItems?.length > 0\">\r\n        <div class=\"selected-info\">\r\n          已选 <span class=\"highlight\">{{ selectedItems.size }}</span> 件商品\r\n        </div>\r\n        <div class=\"total\">\r\n          合计：<span class=\"highlight\">¥{{ (selectedTotalPrice || 0).toFixed(2) }}</span>\r\n        </div>\r\n        <el-button \r\n          type=\"primary\" \r\n          size=\"large\"\r\n          :disabled=\"selectedItems.size === 0 || cartStore.loading || checkoutLoading\"\r\n          :loading=\"checkoutLoading\"\r\n          @click=\"checkout\"\r\n        >\r\n          去结算\r\n        </el-button>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\nimport { storeToRefs } from 'pinia'\r\nimport { computed, onMounted, ref } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst cartStore = useCartStore()\r\nconst { \r\n  items: cartItems, \r\n  selectedItems,\r\n  selectedTotalPrice,\r\n  selectedItemsList,\r\n  loading,\r\n  error\r\n} = storeToRefs(cartStore)\r\n\r\n// 添加结算加载状态\r\nconst checkoutLoading = ref(false)\r\n// 从token获取用户名\r\nconst token = localStorage.getItem('token')\r\nconst username = computed(() => {\r\n  if (token) {\r\n    const payload = parseJwt(token)\r\n    return payload.sub || 'guest'\r\n  }\r\n  return 'guest'\r\n})\r\n\r\n// 计算是否全选\r\nconst allSelected = computed(() => {\r\n  return selectedItems.value.size === cartItems.value.length && cartItems.value.length > 0\r\n})\r\n\r\n// 初始化获取购物车数据\r\nonMounted(async () => {\r\n  if (!cartItems.value.length) {\r\n    await cartStore.fetchCart()\r\n  }\r\n})\r\n\r\n// 重试获取购物车\r\nconst retryFetch = async () => {\r\n  await cartStore.fetchCart()\r\n}\r\n\r\n// 处理全选/取消全选\r\nconst handleToggleSelectAll = () => {\r\n  cartStore.toggleSelectAll()\r\n}\r\n\r\n// 处理单个选择项切换\r\nconst handleToggleSelection = (id) => {\r\n  cartStore.toggleSelection(id)\r\n}\r\n\r\nconst updateQuantity = async (item) => {\r\n  if (!item?.cartItemId) {\r\n    ElMessage.error('无效的商品数据')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    await cartStore.updateQuantity(item.cartItemId, item.quantity)\r\n    ElMessage.success('数量更新成功')\r\n  } catch (err) {\r\n    ElMessage.error(`数量更新失败: ${err.message || '未知错误'}`)\r\n  }\r\n}\r\n\r\nconst removeItem = async (item) => {\r\n  if (!item?.cartItemId) {\r\n    ElMessage.error('无效操作')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    await cartStore.removeItem(item.cartItemId)\r\n    ElMessage.success('已移除商品')\r\n  } catch (err) {\r\n    ElMessage.error(`移除商品失败: ${err.message || '未知错误'}`)\r\n  }\r\n}\r\n\r\n// 删除选中的商品\r\nconst removeSelectedItems = async () => {\r\n  if (selectedItems.value.size === 0) return\r\n  \r\n  const selectedIds = [...selectedItems.value]\r\n  try {\r\n    await cartStore.removeItems(selectedIds)\r\n    ElMessage.success(`已删除 ${selectedIds.length} 件商品`)\r\n  } catch (err) {\r\n    ElMessage.error(`删除商品失败: ${err.message || '未知错误'}`)\r\n  }\r\n}\r\n\r\n// 获取商品商家信息\r\nconst fetchProductMerchant = async (productId) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://algorineko.top:8080/api/merchant/product/detail/${productId}`\r\n    )\r\n    \r\n    if (response.data && response.data.merchantId) {\r\n      return response.data.merchantId\r\n    }\r\n    \r\n    throw new Error('未获取到商家信息')\r\n  } catch (error) {\r\n    console.error(`获取商品 ${productId} 的商家信息失败:`, error)\r\n    throw new Error(`获取商品商家信息失败: ${error.message || '未知错误'}`)\r\n  }\r\n}\r\n\r\n// JWT 解析函数\r\nconst parseJwt = (token) => {\r\n  try {\r\n    const base64Url = token.split('.')[1]\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/')\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n        .join('')\r\n    )\r\n    return JSON.parse(jsonPayload)\r\n  } catch (e) {\r\n    console.error('Token解析失败:', e)\r\n    return null\r\n  }\r\n}\r\n\r\n// 结算功能\r\nconst checkout = async () => {\r\n  if (selectedItems.value.size === 0) {\r\n    ElMessage.warning('请选择要结算的商品')\r\n    return\r\n  }\r\n  \r\n  checkoutLoading.value = true\r\n  \r\n  try {\r\n    // 1. 获取所有商品的商家ID\r\n    const merchantPromises = selectedItemsList.value.map(item => \r\n      fetchProductMerchant(item.id)\r\n    )\r\n    \r\n    const merchantIds = await Promise.all(merchantPromises)\r\n    \r\n    // 2. 检查所有商品是否属于同一商家\r\n    const uniqueMerchantIds = [...new Set(merchantIds)]\r\n    \r\n    if (uniqueMerchantIds.length === 0) {\r\n      throw new Error('无法确定商家信息')\r\n    }\r\n    \r\n    if (uniqueMerchantIds.length > 1) {\r\n      throw new Error('您选择的商品来自不同商家，请分开结算')\r\n    }\r\n    \r\n    const merchantId = uniqueMerchantIds[0]\r\n    \r\n    // 3. 调用后端API创建订单\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      throw new Error('请先登录后再结算')\r\n    }\r\n    \r\n    // 解析token获取用户ID\r\n    const payload = parseJwt(token)\r\n    if (!payload || !payload.customerId) {\r\n      throw new Error('用户信息不完整，请重新登录')\r\n    }\r\n    console.log('payload',payload)\r\n    // 构造请求数据\r\n    const orderItems = selectedItemsList.value.map(item => ({\r\n      productId: item.id,\r\n      quantity: item.quantity\r\n    }))\r\n    \r\n    const requestData = {\r\n      customerId: Number(payload.customerId),\r\n      merchantId: merchantId,\r\n      items: orderItems\r\n    }\r\n    console.log('requestData',requestData)  \r\n    // 调用创建订单API\r\n    const response = await axios.post(\r\n      'http://algorineko.top:8080/api/order/create',\r\n      requestData,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    )\r\n    \r\n    if (!response.data) {\r\n      throw new Error('订单创建失败')\r\n    }\r\n    \r\n    // 4. 从购物车中移除已结算商品\r\n    const selectedIds = [...selectedItems.value]\r\n    await cartStore.removeItems(selectedIds)\r\n    \r\n    ElMessage.success('订单创建成功！')\r\n    \r\n    // 跳转到订单页面\r\n    // router.push(`/buyer/user/orders`)\r\n  } catch (error) {\r\n    let errorMsg = '订单创建失败'\r\n    \r\n    // 处理特定错误类型\r\n    if (error.message.includes('不同商家')) {\r\n      errorMsg = error.message\r\n    } else if (error.message.includes('商家信息')) {\r\n      errorMsg = error.message\r\n    } else if (error.response) {\r\n      if (error.response.status === 400) {\r\n        errorMsg = error.response.data?.message || '请求参数错误'\r\n      } else if (error.response.status === 401) {\r\n        errorMsg = '身份验证失败，请重新登录'\r\n      } else if (error.response.status === 500) {\r\n        errorMsg = error.response.data?.message || '服务器内部错误'\r\n      } else {\r\n        errorMsg = error.response.data?.message || '未知错误'\r\n      }\r\n    } else {\r\n      errorMsg = error.message || '网络错误，请检查连接'\r\n    }\r\n    \r\n    ElMessage.error(errorMsg)\r\n    console.error('结算失败:', error)\r\n  } finally {\r\n    checkoutLoading.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.product-link {\r\n  color: #606266;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #409eff;\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.checkout {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 30px;\r\n}\r\n\r\n.total {\r\n  font-size: 20px;\r\n  color: #f56c6c;\r\n}\r\n\r\n.empty-tip {\r\n  margin-top: 50px;\r\n  padding: 40px 0;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.selected-info {\r\n  font-size: 14px;\r\n  color: #606266;\r\n}\r\n\r\n.highlight {\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n\r\n.loading-overlay {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 40px;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.error-message {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}