{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useCartStore } from '@/stores/cart';\nexport default {\n  __name: 'ProductDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const cartStore = useCartStore();\n    const product = ref({\n      id: '',\n      name: '',\n      price: 0,\n      inventory: 0,\n      mainPictures: [],\n      details: {\n        properties: []\n      }\n    });\n    const quantity = ref(1);\n    const fetchProductDetail = async id => {\n      try {\n        const response = await fetch(`http://pcapi-xiaotuxian-front-devtest.itheima.net/goods?id=${id}`);\n        const res = await response.json();\n        if (res.code !== 1) throw new Error(res.msg || '商品加载失败');\n        product.value = {\n          id: res.result.id,\n          name: res.result.name,\n          price: parseFloat(res.result.price),\n          inventory: res.result.inventory,\n          mainPictures: res.result.mainPictures,\n          details: res.result.details\n        };\n      } catch (error) {\n        ElMessage.error(error.message);\n      }\n    };\n    onMounted(() => {\n      const productId = route.params.id;\n      if (productId) fetchProductDetail(productId);\n    });\n    const addToCart = () => {\n      cartStore.addItem({\n        id: product.value.id,\n        name: product.value.name,\n        price: product.value.price,\n        quantity: quantity.value,\n        image: product.value.mainPictures[0]\n      });\n      ElMessage.success('已加入购物车');\n    };\n    const __returned__ = {\n      route,\n      cartStore,\n      product,\n      quantity,\n      fetchProductDetail,\n      addToCart,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useCartStore() {\n        return useCartStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","ElMessage","useCartStore","route","cartStore","product","id","name","price","inventory","mainPictures","details","properties","quantity","fetchProductDetail","response","fetch","res","json","code","Error","msg","value","result","parseFloat","error","message","productId","params","addToCart","addItem","image","success"],"sources":["E:/实验例子/project/src/views/Buyer/ProductDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n    <el-button type=\"text\" @click=\"$router.go(-1)\">返回</el-button>\r\n    \r\n    <div class=\"detail-content\">\r\n      <el-carousel :interval=\"4000\" height=\"400px\">\r\n        <el-carousel-item v-for=\"(img, index) in product.mainPictures\" :key=\"index\">\r\n          <el-image :src=\"img\" fit=\"cover\" />\r\n        </el-carousel-item>\r\n      </el-carousel>\r\n\r\n      <div class=\"product-info\">\r\n        <h1>{{ product.name }}</h1>\r\n        <p class=\"price\">¥{{ product.price.toFixed(2) }}</p>\r\n        <el-tag type=\"success\">库存 {{ product.inventory }} 件</el-tag>\r\n        \r\n        <div class=\"action-group\">\r\n          <el-input-number \r\n            v-model=\"quantity\" \r\n            :min=\"1\" \r\n            :max=\"product.inventory\"\r\n          />\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"addToCart\"\r\n            :disabled=\"product.inventory === 0\"\r\n          >\r\n            {{ product.inventory > 0 ? '加入购物车' : '已售罄' }}\r\n          </el-button>\r\n        </div>\r\n\r\n        <el-divider />\r\n        <div class=\"description\">\r\n          <h3>商品详情</h3>\r\n          <p>{{ product.details.properties[0]?.value }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\n\r\nconst route = useRoute()\r\nconst cartStore = useCartStore()\r\n\r\nconst product = ref({\r\n  id: '',\r\n  name: '',\r\n  price: 0,\r\n  inventory: 0,\r\n  mainPictures: [],\r\n  details: { properties: [] }\r\n})\r\n\r\nconst quantity = ref(1)\r\n\r\nconst fetchProductDetail = async (id) => {\r\n  try {\r\n    const response = await fetch(\r\n      `http://pcapi-xiaotuxian-front-devtest.itheima.net/goods?id=${id}`\r\n    )\r\n    const res = await response.json()\r\n    if (res.code !== 1) throw new Error(res.msg || '商品加载失败')\r\n    \r\n    product.value = {\r\n      id: res.result.id,\r\n      name: res.result.name,\r\n      price: parseFloat(res.result.price),\r\n      inventory: res.result.inventory,\r\n      mainPictures: res.result.mainPictures,\r\n      details: res.result.details\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(error.message)\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  const productId = route.params.id\r\n  if (productId) fetchProductDetail(productId)\r\n})\r\n\r\nconst addToCart = () => {\r\n  cartStore.addItem({\r\n    id: product.value.id,\r\n    name: product.value.name,\r\n    price: product.value.price,\r\n    quantity: quantity.value,\r\n    image: product.value.mainPictures[0]\r\n  })\r\n  ElMessage.success('已加入购物车')\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.detail-content {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 40px;\r\n}\r\n\r\n.action-group {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.description {\r\n  margin-top: 30px;\r\n}\r\n</style>"],"mappings":"AA0CA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,YAAY,QAAQ,eAAe;;;;;;;IAE5C,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,SAAS,GAAGF,YAAY,CAAC,CAAC;IAEhC,MAAMG,OAAO,GAAGP,GAAG,CAAC;MAClBQ,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE,CAAC;MACZC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE;QAAEC,UAAU,EAAE;MAAG;IAC5B,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAGf,GAAG,CAAC,CAAC,CAAC;IAEvB,MAAMgB,kBAAkB,GAAG,MAAOR,EAAE,IAAK;MACvC,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8DAA8DV,EAAE,EAClE,CAAC;QACD,MAAMW,GAAG,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACjC,IAAID,GAAG,CAACE,IAAI,KAAK,CAAC,EAAE,MAAM,IAAIC,KAAK,CAACH,GAAG,CAACI,GAAG,IAAI,QAAQ,CAAC;QAExDhB,OAAO,CAACiB,KAAK,GAAG;UACdhB,EAAE,EAAEW,GAAG,CAACM,MAAM,CAACjB,EAAE;UACjBC,IAAI,EAAEU,GAAG,CAACM,MAAM,CAAChB,IAAI;UACrBC,KAAK,EAAEgB,UAAU,CAACP,GAAG,CAACM,MAAM,CAACf,KAAK,CAAC;UACnCC,SAAS,EAAEQ,GAAG,CAACM,MAAM,CAACd,SAAS;UAC/BC,YAAY,EAAEO,GAAG,CAACM,MAAM,CAACb,YAAY;UACrCC,OAAO,EAAEM,GAAG,CAACM,MAAM,CAACZ;QACtB,CAAC;MACH,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdxB,SAAS,CAACwB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;MAChC;IACF,CAAC;IAED3B,SAAS,CAAC,MAAM;MACd,MAAM4B,SAAS,GAAGxB,KAAK,CAACyB,MAAM,CAACtB,EAAE;MACjC,IAAIqB,SAAS,EAAEb,kBAAkB,CAACa,SAAS,CAAC;IAC9C,CAAC,CAAC;IAEF,MAAME,SAAS,GAAGA,CAAA,KAAM;MACtBzB,SAAS,CAAC0B,OAAO,CAAC;QAChBxB,EAAE,EAAED,OAAO,CAACiB,KAAK,CAAChB,EAAE;QACpBC,IAAI,EAAEF,OAAO,CAACiB,KAAK,CAACf,IAAI;QACxBC,KAAK,EAAEH,OAAO,CAACiB,KAAK,CAACd,KAAK;QAC1BK,QAAQ,EAAEA,QAAQ,CAACS,KAAK;QACxBS,KAAK,EAAE1B,OAAO,CAACiB,KAAK,CAACZ,YAAY,CAAC,CAAC;MACrC,CAAC,CAAC;MACFT,SAAS,CAAC+B,OAAO,CAAC,QAAQ,CAAC;IAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}