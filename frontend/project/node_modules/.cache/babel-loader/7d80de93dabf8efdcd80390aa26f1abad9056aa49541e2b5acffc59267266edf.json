{"ast":null,"code":"export default {\n  data() {\n    return {\n      userData: {\n        username: '',\n        address: ''\n      },\n      showDialog: false,\n      editForm: {\n        username: '',\n        address: ''\n      },\n      formRules: {\n        username: [{\n          required: true,\n          message: '用户名不能为空',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 20,\n          message: '长度需在2-20个字符之间',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '收货地址不能为空',\n          trigger: 'blur'\n        }, {\n          max: 100,\n          message: '最多可输入100个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    console.log('组件加载完成');\n    this.loadLocalData();\n  },\n  methods: {\n    loadLocalData() {\n      try {\n        const savedData = localStorage.getItem('userProfile');\n        console.log('从本地存储加载数据:', savedData);\n        if (savedData) {\n          this.userData = JSON.parse(savedData);\n          console.log('解析后的用户数据:', this.userData);\n        }\n      } catch (error) {\n        console.error('数据加载失败:', error);\n      }\n    },\n    handleEditClick() {\n      console.log('[1] 编辑按钮被点击');\n      this.showDialog = true;\n      console.log('[2] 对话框状态设置为:', this.showDialog);\n      this.editForm = {\n        username: this.userData.username,\n        address: this.userData.address\n      };\n    },\n    handleDialogOpen() {\n      console.log('[3] 对话框打开回调触发');\n      this.$nextTick(() => {\n        console.log('[4] DOM更新完成');\n        if (this.$refs.formRef) {\n          console.log('[5] 找到表单实例');\n          try {\n            this.$refs.formRef.clearValidate();\n            console.log('[6] 成功清除验证状态');\n          } catch (e) {\n            console.error('[错误] 清除验证失败:', e);\n          }\n        } else {\n          console.error('[错误] 未找到表单实例');\n        }\n      });\n    },\n    submitForm() {\n      console.log('[7] 提交表单');\n      this.$refs.formRef.validate(valid => {\n        console.log('[8] 验证结果:', valid);\n        if (valid) {\n          console.log('[9] 验证通过，准备保存数据');\n          this.userData.username = this.editForm.username;\n          this.userData.address = this.editForm.address;\n          try {\n            localStorage.setItem('userProfile', JSON.stringify(this.userData));\n            console.log('[10] 数据保存成功');\n            this.showDialog = false;\n            this.$message.success('修改成功');\n          } catch (error) {\n            console.error('[错误] 保存失败:', error);\n            this.$message.error('保存失败，请检查存储空间');\n          }\n        } else {\n          console.log('[11] 验证未通过');\n          this.$message.warning('请正确填写表单');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","userData","username","address","showDialog","editForm","formRules","required","message","trigger","min","max","mounted","console","log","loadLocalData","methods","savedData","localStorage","getItem","JSON","parse","error","handleEditClick","handleDialogOpen","$nextTick","$refs","formRef","clearValidate","e","submitForm","validate","valid","setItem","stringify","$message","success","warning"],"sources":["E:\\实验例子\\project\\src\\components\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <h2>我的信息</h2>\r\n    \r\n    <div class=\"info-card\">\r\n      <div class=\"info-item\">\r\n        <label>用户名：</label>\r\n        <span class=\"info-content\">{{ userData.username || '未设置' }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>收货地址：</label>\r\n        <span class=\"info-content\">{{ userData.address || '暂无收货地址' }}</span>\r\n      </div>\r\n      <el-button \r\n        type=\"primary\" \r\n        @click.native=\"handleEditClick\"\r\n        class=\"edit-button\"\r\n        id=\"editButton\"\r\n      >\r\n        编辑信息\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-dialog\r\n      :visible.sync=\"showDialog\"\r\n      title=\"修改个人信息\"\r\n      width=\"500px\"\r\n      @open=\"handleDialogOpen\"\r\n    >\r\n      <el-form \r\n        ref=\"formRef\" \r\n        :model=\"editForm\" \r\n        :rules=\"formRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"用户名：\" prop=\"username\">\r\n          <el-input\r\n            v-model=\"editForm.username\"\r\n            placeholder=\"请输入2-20位用户名\"\r\n            clearable\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收货地址：\" prop=\"address\">\r\n          <el-input\r\n            v-model=\"editForm.address\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入详细收货地址\"\r\n            maxlength=\"100\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template #footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button @click=\"showDialog = false\">取消</el-button>\r\n          <el-button \r\n            type=\"primary\"\r\n            @click.native=\"submitForm\"\r\n          >\r\n            确认修改\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      userData: {\r\n        username: '',\r\n        address: ''\r\n      },\r\n      showDialog: false,\r\n      editForm: {\r\n        username: '',\r\n        address: ''\r\n      },\r\n      formRules: {\r\n        username: [\r\n          { required: true, message: '用户名不能为空', trigger: 'blur' },\r\n          { min: 2, max: 20, message: '长度需在2-20个字符之间', trigger: 'blur' }\r\n        ],\r\n        address: [\r\n          { required: true, message: '收货地址不能为空', trigger: 'blur' },\r\n          { max: 100, message: '最多可输入100个字符', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log('组件加载完成')\r\n    this.loadLocalData()\r\n  },\r\n  methods: {\r\n    loadLocalData() {\r\n      try {\r\n        const savedData = localStorage.getItem('userProfile')\r\n        console.log('从本地存储加载数据:', savedData)\r\n        if (savedData) {\r\n          this.userData = JSON.parse(savedData)\r\n          console.log('解析后的用户数据:', this.userData)\r\n        }\r\n      } catch (error) {\r\n        console.error('数据加载失败:', error)\r\n      }\r\n    },\r\n\r\n    handleEditClick() {\r\n      console.log('[1] 编辑按钮被点击')\r\n      this.showDialog = true\r\n      console.log('[2] 对话框状态设置为:', this.showDialog)\r\n      this.editForm = {\r\n        username: this.userData.username,\r\n        address: this.userData.address\r\n      }\r\n    },\r\n\r\n    handleDialogOpen() {\r\n      console.log('[3] 对话框打开回调触发')\r\n      this.$nextTick(() => {\r\n        console.log('[4] DOM更新完成')\r\n        if (this.$refs.formRef) {\r\n          console.log('[5] 找到表单实例')\r\n          try {\r\n            this.$refs.formRef.clearValidate()\r\n            console.log('[6] 成功清除验证状态')\r\n          } catch (e) {\r\n            console.error('[错误] 清除验证失败:', e)\r\n          }\r\n        } else {\r\n          console.error('[错误] 未找到表单实例')\r\n        }\r\n      })\r\n    },\r\n\r\n    submitForm() {\r\n      console.log('[7] 提交表单')\r\n      this.$refs.formRef.validate(valid => {\r\n        console.log('[8] 验证结果:', valid)\r\n        if (valid) {\r\n          console.log('[9] 验证通过，准备保存数据')\r\n          this.userData.username = this.editForm.username\r\n          this.userData.address = this.editForm.address\r\n          \r\n          try {\r\n            localStorage.setItem('userProfile', JSON.stringify(this.userData))\r\n            console.log('[10] 数据保存成功')\r\n            this.showDialog = false\r\n            this.$message.success('修改成功')\r\n          } catch (error) {\r\n            console.error('[错误] 保存失败:', error)\r\n            this.$message.error('保存失败，请检查存储空间')\r\n          }\r\n        } else {\r\n          console.log('[11] 验证未通过')\r\n          this.$message.warning('请正确填写表单')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.info-card {\r\n  background: #fff;\r\n  padding: 24px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  align-items: baseline;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-item label {\r\n  font-weight: 500;\r\n  color: #606266;\r\n  width: 100px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.info-content {\r\n  flex: 1;\r\n  word-break: break-word;\r\n  color: #303133;\r\n}\r\n\r\n.edit-button {\r\n  margin-top: 20px;\r\n  width: 200px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n}\r\n\r\n/* 强制对话框显示在最顶层 */\r\n.el-dialog__wrapper {\r\n  z-index: 9999 !important;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .info-item {\r\n    flex-direction: column;\r\n    gap: 8px;\r\n  }\r\n  \r\n  .edit-button {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}