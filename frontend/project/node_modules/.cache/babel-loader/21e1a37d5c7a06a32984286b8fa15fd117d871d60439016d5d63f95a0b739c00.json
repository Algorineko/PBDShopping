{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"shopping-cart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"cart-actions\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"product-info\"\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"checkout\"\n};\nconst _hoisted_7 = {\n  class: \"selected-info\"\n};\nconst _hoisted_8 = {\n  class: \"highlight\"\n};\nconst _hoisted_9 = {\n  class: \"total\"\n};\nconst _hoisted_10 = {\n  class: \"highlight\"\n};\nimport { ElMessage } from 'element-plus';\nimport { useCartStore } from '@/stores/cart';\nimport { storeToRefs } from 'pinia';\nimport { computed, onMounted, ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  __name: 'ShoppingCart',\n  setup(__props) {\n    const cartStore = useCartStore();\n    const {\n      items: cartItems,\n      selectedItems,\n      selectedTotalPrice,\n      selectedItemsList,\n      loading,\n      error\n    } = storeToRefs(cartStore);\n\n    // 添加结算加载状态\n    const checkoutLoading = ref(false);\n    // 从token获取用户名\n    const token = localStorage.getItem('token');\n    const username = computed(() => {\n      if (token) {\n        const payload = parseJwt(token);\n        return payload.sub || 'guest';\n      }\n      return 'guest';\n    });\n\n    // 计算是否全选\n    const allSelected = computed(() => {\n      return selectedItems.value.size === cartItems.value.length && cartItems.value.length > 0;\n    });\n\n    // 初始化获取购物车数据\n    onMounted(async () => {\n      if (!cartItems.value.length) {\n        await cartStore.fetchCart();\n      }\n    });\n\n    // 重试获取购物车\n    const retryFetch = async () => {\n      await cartStore.fetchCart();\n    };\n\n    // 处理全选/取消全选\n    const handleToggleSelectAll = () => {\n      cartStore.toggleSelectAll();\n    };\n\n    // 处理单个选择项切换\n    const handleToggleSelection = id => {\n      cartStore.toggleSelection(id);\n    };\n    const updateQuantity = async item => {\n      if (!item?.cartItemId) {\n        ElMessage.error('无效的商品数据');\n        return;\n      }\n      try {\n        await cartStore.updateQuantity(item.cartItemId, item.quantity);\n        ElMessage.success('数量更新成功');\n      } catch (err) {\n        ElMessage.error(`数量更新失败: ${err.message || '未知错误'}`);\n      }\n    };\n    const removeItem = async item => {\n      if (!item?.cartItemId) {\n        ElMessage.error('无效操作');\n        return;\n      }\n      try {\n        await cartStore.removeItem(item.cartItemId);\n        ElMessage.success('已移除商品');\n      } catch (err) {\n        ElMessage.error(`移除商品失败: ${err.message || '未知错误'}`);\n      }\n    };\n\n    // 删除选中的商品\n    const removeSelectedItems = async () => {\n      if (selectedItems.value.size === 0) return;\n      const selectedIds = [...selectedItems.value];\n      try {\n        await cartStore.removeItems(selectedIds);\n        ElMessage.success(`已删除 ${selectedIds.length} 件商品`);\n      } catch (err) {\n        ElMessage.error(`删除商品失败: ${err.message || '未知错误'}`);\n      }\n    };\n\n    // 获取商品商家信息\n    const fetchProductMerchant = async productId => {\n      try {\n        const response = await axios.get(`http://algorineko.top:8080/api/merchant/product/detail/${productId}`);\n        if (response.data && response.data.merchantId) {\n          return response.data.merchantId;\n        }\n        throw new Error('未获取到商家信息');\n      } catch (error) {\n        console.error(`获取商品 ${productId} 的商家信息失败:`, error);\n        throw new Error(`获取商品商家信息失败: ${error.message || '未知错误'}`);\n      }\n    };\n\n    // JWT 解析函数\n    const parseJwt = token => {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n        return JSON.parse(jsonPayload);\n      } catch (e) {\n        console.error('Token解析失败:', e);\n        return null;\n      }\n    };\n\n    // 结算功能\n    const checkout = async () => {\n      if (selectedItems.value.size === 0) {\n        ElMessage.warning('请选择要结算的商品');\n        return;\n      }\n      checkoutLoading.value = true;\n      try {\n        // 1. 获取所有商品的商家ID\n        const merchantPromises = selectedItemsList.value.map(item => fetchProductMerchant(item.id));\n        const merchantIds = await Promise.all(merchantPromises);\n\n        // 2. 检查所有商品是否属于同一商家\n        const uniqueMerchantIds = [...new Set(merchantIds)];\n        if (uniqueMerchantIds.length === 0) {\n          throw new Error('无法确定商家信息');\n        }\n        if (uniqueMerchantIds.length > 1) {\n          throw new Error('您选择的商品来自不同商家，请分开结算');\n        }\n        const merchantId = uniqueMerchantIds[0];\n\n        // 3. 调用后端API创建订单\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('请先登录后再结算');\n        }\n\n        // 解析token获取用户ID\n        const payload = parseJwt(token);\n        if (!payload || !payload.customerId) {\n          throw new Error('用户信息不完整，请重新登录');\n        }\n        console.log('payload', payload);\n        // 构造请求数据\n        const orderItems = selectedItemsList.value.map(item => ({\n          productId: item.id,\n          quantity: item.quantity\n        }));\n        const requestData = {\n          customerId: Number(payload.customerId),\n          merchantId: merchantId,\n          items: orderItems\n        };\n        console.log('requestData', requestData);\n        // 调用创建订单API\n        const response = await axios.post('http://algorineko.top:8080/api/order/create', requestData, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.data) {\n          throw new Error('订单创建失败');\n        }\n\n        // 4. 从购物车中移除已结算商品\n        const selectedIds = [...selectedItems.value];\n        await cartStore.removeItems(selectedIds);\n        ElMessage.success('订单创建成功！');\n\n        // 跳转到订单页面\n        // router.push(`/buyer/user/orders`)\n      } catch (error) {\n        let errorMsg = '订单创建失败';\n\n        // 处理特定错误类型\n        if (error.message.includes('不同商家')) {\n          errorMsg = error.message;\n        } else if (error.message.includes('商家信息')) {\n          errorMsg = error.message;\n        } else if (error.response) {\n          if (error.response.status === 400) {\n            errorMsg = error.response.data?.message || '请求参数错误';\n          } else if (error.response.status === 401) {\n            errorMsg = '身份验证失败，请重新登录';\n          } else if (error.response.status === 500) {\n            errorMsg = error.response.data?.message || '服务器内部错误';\n          } else {\n            errorMsg = error.response.data?.message || '未知错误';\n          }\n        } else {\n          errorMsg = error.message || '网络错误，请检查连接';\n        }\n        ElMessage.error(errorMsg);\n        console.error('结算失败:', error);\n      } finally {\n        checkoutLoading.value = false;\n      }\n    };\n    return (_ctx, _cache) => {\n      const _component_el_progress = _resolveComponent(\"el-progress\");\n      const _component_el_alert = _resolveComponent(\"el-alert\");\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n      const _component_el_table_column = _resolveComponent(\"el-table-column\");\n      const _component_el_image = _resolveComponent(\"el-image\");\n      const _component_router_link = _resolveComponent(\"router-link\");\n      const _component_el_input_number = _resolveComponent(\"el-input-number\");\n      const _component_el_table = _resolveComponent(\"el-table\");\n      const _component_el_empty = _resolveComponent(\"el-empty\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"购物车 (\" + _toDisplayString(_unref(cartItems)?.length || 0) + \")\", 1), _unref(loading) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_progress, {\n        percentage: 50,\n        indeterminate: true\n      }), _cache[0] || (_cache[0] = _createElementVNode(\"p\", null, \"加载购物车中...\", -1))])) : _createCommentVNode(\"\", true), _unref(error) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_alert, {\n        title: _unref(error),\n        type: \"error\",\n        \"show-icon\": \"\"\n      }, null, 8, [\"title\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: retryFetch\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"重试\")])),\n        _: 1,\n        __: [1]\n      })])) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 2\n      }, [_unref(cartItems)?.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_checkbox, {\n        \"model-value\": allSelected.value,\n        onChange: handleToggleSelectAll\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 全选 \")])),\n        _: 1,\n        __: [2]\n      }, 8, [\"model-value\"]), _createVNode(_component_el_button, {\n        type: \"danger\",\n        size: \"small\",\n        disabled: _unref(selectedItems).size === 0 || _unref(cartStore).loading,\n        loading: _unref(cartStore).loading,\n        onClick: removeSelectedItems\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 删除选中 \")])),\n        _: 1,\n        __: [3]\n      }, 8, [\"disabled\", \"loading\"])])) : _createCommentVNode(\"\", true), _unref(cartItems)?.length > 0 ? (_openBlock(), _createBlock(_component_el_table, {\n        key: 1,\n        data: _unref(cartItems),\n        border: \"\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_table_column, {\n          width: \"50\",\n          align: \"center\"\n        }, {\n          header: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            \"model-value\": allSelected.value,\n            onChange: handleToggleSelectAll\n          }, null, 8, [\"model-value\"])]),\n          default: _withCtx(({\n            row\n          }) => [_createVNode(_component_el_checkbox, {\n            \"model-value\": _unref(selectedItems).has(row.cartItemId),\n            onChange: $event => handleToggleSelection(row.cartItemId)\n          }, null, 8, [\"model-value\", \"onChange\"])]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          label: \"商品\",\n          width: \"300\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [row ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_router_link, {\n            to: `/buyer/${username.value}/product/${row.id}`\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_image, {\n              src: row.image || '/placeholder-product.jpg',\n              width: \"80\",\n              style: {\n                \"cursor\": \"pointer\"\n              }\n            }, null, 8, [\"src\"])]),\n            _: 2\n          }, 1032, [\"to\"]), _createVNode(_component_router_link, {\n            to: `/buyer/${username.value}/product/${row.id}`,\n            class: \"product-link\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(row.name || '未知商品'), 1)]),\n            _: 2\n          }, 1032, [\"to\"])])) : _createCommentVNode(\"\", true)]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          label: \"单价\",\n          width: \"120\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [_createTextVNode(\" ¥\" + _toDisplayString((row.price || 0).toFixed(2)), 1)]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          label: \"数量\",\n          width: \"150\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [_createVNode(_component_el_input_number, {\n            modelValue: row.quantity,\n            \"onUpdate:modelValue\": $event => row.quantity = $event,\n            min: 1,\n            max: 99,\n            disabled: _unref(cartStore).loading,\n            onChange: $event => updateQuantity(row)\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onChange\"])]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          label: \"小计\",\n          width: \"120\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [_createTextVNode(\" ¥\" + _toDisplayString(((row.price || 0) * (row.quantity || 1)).toFixed(2)), 1)]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          label: \"操作\",\n          width: \"120\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [_createVNode(_component_el_button, {\n            type: \"danger\",\n            disabled: _unref(cartStore).loading,\n            loading: _unref(cartStore).loading,\n            onClick: $event => removeItem(row)\n          }, {\n            default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" 删除 \")])),\n            _: 2,\n            __: [4]\n          }, 1032, [\"disabled\", \"loading\", \"onClick\"])]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"data\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n        key: 2,\n        description: \"您的购物车还是空的，快去选购商品吧！\",\n        class: \"empty-tip\"\n      })), _unref(cartItems)?.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[5] || (_cache[5] = _createTextVNode(\" 已选 \")), _createElementVNode(\"span\", _hoisted_8, _toDisplayString(_unref(selectedItems).size), 1), _cache[6] || (_cache[6] = _createTextVNode(\" 件商品 \"))]), _createElementVNode(\"div\", _hoisted_9, [_cache[7] || (_cache[7] = _createTextVNode(\" 合计：\")), _createElementVNode(\"span\", _hoisted_10, \"¥\" + _toDisplayString((_unref(selectedTotalPrice) || 0).toFixed(2)), 1)]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"large\",\n        disabled: _unref(selectedItems).size === 0 || _unref(cartStore).loading || checkoutLoading.value,\n        loading: checkoutLoading.value,\n        onClick: checkout\n      }, {\n        default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\" 去结算 \")])),\n        _: 1,\n        __: [8]\n      }, 8, [\"disabled\", \"loading\"])])) : _createCommentVNode(\"\", true)], 64))]);\n    };\n  }\n};","map":{"version":3,"names":["ElMessage","useCartStore","storeToRefs","computed","onMounted","ref","axios","cartStore","items","cartItems","selectedItems","selectedTotalPrice","selectedItemsList","loading","error","checkoutLoading","token","localStorage","getItem","username","payload","parseJwt","sub","allSelected","value","size","length","fetchCart","retryFetch","handleToggleSelectAll","toggleSelectAll","handleToggleSelection","id","toggleSelection","updateQuantity","item","cartItemId","quantity","success","err","message","removeItem","removeSelectedItems","selectedIds","removeItems","fetchProductMerchant","productId","response","get","data","merchantId","Error","console","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","e","checkout","warning","merchantPromises","merchantIds","Promise","all","uniqueMerchantIds","Set","customerId","log","orderItems","requestData","Number","post","headers","errorMsg","includes","status"],"sources":["E:/实验例子/project/src/components/ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shopping-cart\">\r\n    <h2>购物车 ({{ cartItems?.length || 0 }})</h2>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-overlay\">\r\n      <el-progress :percentage=\"50\" :indeterminate=\"true\" />\r\n      <p>加载购物车中...</p>\r\n    </div>\r\n    \r\n    <div v-if=\"error\" class=\"error-message\">\r\n      <el-alert :title=\"error\" type=\"error\" show-icon />\r\n      <el-button type=\"primary\" @click=\"retryFetch\">重试</el-button>\r\n    </div>\r\n    \r\n    <template v-else>\r\n      <div class=\"cart-actions\" v-if=\"cartItems?.length > 0\">\r\n        <el-checkbox \r\n          :model-value=\"allSelected\"\r\n          @change=\"handleToggleSelectAll\"\r\n        >\r\n          全选\r\n        </el-checkbox>\r\n        <el-button \r\n          type=\"danger\" \r\n          size=\"small\"\r\n          :disabled=\"selectedItems.size === 0 || cartStore.loading\"\r\n          :loading=\"cartStore.loading\"\r\n          @click=\"removeSelectedItems\"\r\n        >\r\n          删除选中\r\n        </el-button>\r\n      </div>\r\n      \r\n      <el-table \r\n        :data=\"cartItems\"\r\n        v-if=\"cartItems?.length > 0\"\r\n        border\r\n        style=\"width: 100%\"\r\n      >\r\n        <!-- 选择列 -->\r\n        <el-table-column width=\"50\" align=\"center\">\r\n          <template #header>\r\n            <el-checkbox \r\n              :model-value=\"allSelected\"\r\n              @change=\"handleToggleSelectAll\" \r\n            />\r\n          </template>\r\n          <template #default=\"{ row }\">\r\n            <el-checkbox \r\n              :model-value=\"selectedItems.has(row.cartItemId)\" \r\n              @change=\"handleToggleSelection(row.cartItemId)\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <!-- 商品列 -->\r\n        <el-table-column label=\"商品\" width=\"300\">\r\n          <template #default=\"{ row }\">\r\n            <div class=\"product-info\" v-if=\"row\">\r\n              <router-link :to=\"`/buyer/${username}/product/${row.id}`\">\r\n                <el-image \r\n                  :src=\"row.image || '/placeholder-product.jpg'\"\r\n                  width=\"80\"\r\n                  style=\"cursor: pointer\"\r\n                />\r\n              </router-link>\r\n              <router-link \r\n                :to=\"`/buyer/${username}/product/${row.id}`\"\r\n                class=\"product-link\"\r\n              >\r\n                {{ row.name || '未知商品' }}\r\n              </router-link>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 单价列 -->\r\n        <el-table-column label=\"单价\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            ¥{{ (row.price || 0).toFixed(2) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 数量列 -->\r\n        <el-table-column label=\"数量\" width=\"150\">\r\n          <template #default=\"{ row }\">\r\n            <el-input-number \r\n              v-model=\"row.quantity\"\r\n              :min=\"1\"\r\n              :max=\"99\"\r\n              :disabled=\"cartStore.loading\"\r\n              @change=\"updateQuantity(row)\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 小计列 -->\r\n        <el-table-column label=\"小计\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            ¥{{ ((row.price || 0) * (row.quantity || 1)).toFixed(2) }}\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <!-- 操作列 -->\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            <el-button \r\n              type=\"danger\" \r\n              :disabled=\"cartStore.loading\"\r\n              :loading=\"cartStore.loading\"\r\n              @click=\"removeItem(row)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 空购物车提示 -->\r\n      <el-empty\r\n        v-else\r\n        description=\"您的购物车还是空的，快去选购商品吧！\"\r\n        class=\"empty-tip\"\r\n      />\r\n\r\n      <!-- 结算区域 -->\r\n      <div class=\"checkout\" v-if=\"cartItems?.length > 0\">\r\n        <div class=\"selected-info\">\r\n          已选 <span class=\"highlight\">{{ selectedItems.size }}</span> 件商品\r\n        </div>\r\n        <div class=\"total\">\r\n          合计：<span class=\"highlight\">¥{{ (selectedTotalPrice || 0).toFixed(2) }}</span>\r\n        </div>\r\n        <el-button \r\n          type=\"primary\" \r\n          size=\"large\"\r\n          :disabled=\"selectedItems.size === 0 || cartStore.loading || checkoutLoading\"\r\n          :loading=\"checkoutLoading\"\r\n          @click=\"checkout\"\r\n        >\r\n          去结算\r\n        </el-button>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\nimport { storeToRefs } from 'pinia'\r\nimport { computed, onMounted, ref } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst cartStore = useCartStore()\r\nconst { \r\n  items: cartItems, \r\n  selectedItems,\r\n  selectedTotalPrice,\r\n  selectedItemsList,\r\n  loading,\r\n  error\r\n} = storeToRefs(cartStore)\r\n\r\n// 添加结算加载状态\r\nconst checkoutLoading = ref(false)\r\n// 从token获取用户名\r\nconst token = localStorage.getItem('token')\r\nconst username = computed(() => {\r\n  if (token) {\r\n    const payload = parseJwt(token)\r\n    return payload.sub || 'guest'\r\n  }\r\n  return 'guest'\r\n})\r\n\r\n// 计算是否全选\r\nconst allSelected = computed(() => {\r\n  return selectedItems.value.size === cartItems.value.length && cartItems.value.length > 0\r\n})\r\n\r\n// 初始化获取购物车数据\r\nonMounted(async () => {\r\n  if (!cartItems.value.length) {\r\n    await cartStore.fetchCart()\r\n  }\r\n})\r\n\r\n// 重试获取购物车\r\nconst retryFetch = async () => {\r\n  await cartStore.fetchCart()\r\n}\r\n\r\n// 处理全选/取消全选\r\nconst handleToggleSelectAll = () => {\r\n  cartStore.toggleSelectAll()\r\n}\r\n\r\n// 处理单个选择项切换\r\nconst handleToggleSelection = (id) => {\r\n  cartStore.toggleSelection(id)\r\n}\r\n\r\nconst updateQuantity = async (item) => {\r\n  if (!item?.cartItemId) {\r\n    ElMessage.error('无效的商品数据')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    await cartStore.updateQuantity(item.cartItemId, item.quantity)\r\n    ElMessage.success('数量更新成功')\r\n  } catch (err) {\r\n    ElMessage.error(`数量更新失败: ${err.message || '未知错误'}`)\r\n  }\r\n}\r\n\r\nconst removeItem = async (item) => {\r\n  if (!item?.cartItemId) {\r\n    ElMessage.error('无效操作')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    await cartStore.removeItem(item.cartItemId)\r\n    ElMessage.success('已移除商品')\r\n  } catch (err) {\r\n    ElMessage.error(`移除商品失败: ${err.message || '未知错误'}`)\r\n  }\r\n}\r\n\r\n// 删除选中的商品\r\nconst removeSelectedItems = async () => {\r\n  if (selectedItems.value.size === 0) return\r\n  \r\n  const selectedIds = [...selectedItems.value]\r\n  try {\r\n    await cartStore.removeItems(selectedIds)\r\n    ElMessage.success(`已删除 ${selectedIds.length} 件商品`)\r\n  } catch (err) {\r\n    ElMessage.error(`删除商品失败: ${err.message || '未知错误'}`)\r\n  }\r\n}\r\n\r\n// 获取商品商家信息\r\nconst fetchProductMerchant = async (productId) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://algorineko.top:8080/api/merchant/product/detail/${productId}`\r\n    )\r\n    \r\n    if (response.data && response.data.merchantId) {\r\n      return response.data.merchantId\r\n    }\r\n    \r\n    throw new Error('未获取到商家信息')\r\n  } catch (error) {\r\n    console.error(`获取商品 ${productId} 的商家信息失败:`, error)\r\n    throw new Error(`获取商品商家信息失败: ${error.message || '未知错误'}`)\r\n  }\r\n}\r\n\r\n// JWT 解析函数\r\nconst parseJwt = (token) => {\r\n  try {\r\n    const base64Url = token.split('.')[1]\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/')\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n        .join('')\r\n    )\r\n    return JSON.parse(jsonPayload)\r\n  } catch (e) {\r\n    console.error('Token解析失败:', e)\r\n    return null\r\n  }\r\n}\r\n\r\n// 结算功能\r\nconst checkout = async () => {\r\n  if (selectedItems.value.size === 0) {\r\n    ElMessage.warning('请选择要结算的商品')\r\n    return\r\n  }\r\n  \r\n  checkoutLoading.value = true\r\n  \r\n  try {\r\n    // 1. 获取所有商品的商家ID\r\n    const merchantPromises = selectedItemsList.value.map(item => \r\n      fetchProductMerchant(item.id)\r\n    )\r\n    \r\n    const merchantIds = await Promise.all(merchantPromises)\r\n    \r\n    // 2. 检查所有商品是否属于同一商家\r\n    const uniqueMerchantIds = [...new Set(merchantIds)]\r\n    \r\n    if (uniqueMerchantIds.length === 0) {\r\n      throw new Error('无法确定商家信息')\r\n    }\r\n    \r\n    if (uniqueMerchantIds.length > 1) {\r\n      throw new Error('您选择的商品来自不同商家，请分开结算')\r\n    }\r\n    \r\n    const merchantId = uniqueMerchantIds[0]\r\n    \r\n    // 3. 调用后端API创建订单\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      throw new Error('请先登录后再结算')\r\n    }\r\n    \r\n    // 解析token获取用户ID\r\n    const payload = parseJwt(token)\r\n    if (!payload || !payload.customerId) {\r\n      throw new Error('用户信息不完整，请重新登录')\r\n    }\r\n    console.log('payload',payload)\r\n    // 构造请求数据\r\n    const orderItems = selectedItemsList.value.map(item => ({\r\n      productId: item.id,\r\n      quantity: item.quantity\r\n    }))\r\n    \r\n    const requestData = {\r\n      customerId: Number(payload.customerId),\r\n      merchantId: merchantId,\r\n      items: orderItems\r\n    }\r\n    console.log('requestData',requestData)  \r\n    // 调用创建订单API\r\n    const response = await axios.post(\r\n      'http://algorineko.top:8080/api/order/create',\r\n      requestData,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    )\r\n    \r\n    if (!response.data) {\r\n      throw new Error('订单创建失败')\r\n    }\r\n    \r\n    // 4. 从购物车中移除已结算商品\r\n    const selectedIds = [...selectedItems.value]\r\n    await cartStore.removeItems(selectedIds)\r\n    \r\n    ElMessage.success('订单创建成功！')\r\n    \r\n    // 跳转到订单页面\r\n    // router.push(`/buyer/user/orders`)\r\n  } catch (error) {\r\n    let errorMsg = '订单创建失败'\r\n    \r\n    // 处理特定错误类型\r\n    if (error.message.includes('不同商家')) {\r\n      errorMsg = error.message\r\n    } else if (error.message.includes('商家信息')) {\r\n      errorMsg = error.message\r\n    } else if (error.response) {\r\n      if (error.response.status === 400) {\r\n        errorMsg = error.response.data?.message || '请求参数错误'\r\n      } else if (error.response.status === 401) {\r\n        errorMsg = '身份验证失败，请重新登录'\r\n      } else if (error.response.status === 500) {\r\n        errorMsg = error.response.data?.message || '服务器内部错误'\r\n      } else {\r\n        errorMsg = error.response.data?.message || '未知错误'\r\n      }\r\n    } else {\r\n      errorMsg = error.message || '网络错误，请检查连接'\r\n    }\r\n    \r\n    ElMessage.error(errorMsg)\r\n    console.error('结算失败:', error)\r\n  } finally {\r\n    checkoutLoading.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.product-link {\r\n  color: #606266;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #409eff;\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.checkout {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 30px;\r\n}\r\n\r\n.total {\r\n  font-size: 20px;\r\n  color: #f56c6c;\r\n}\r\n\r\n.empty-tip {\r\n  margin-top: 50px;\r\n  padding: 40px 0;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.selected-info {\r\n  font-size: 14px;\r\n  color: #606266;\r\n}\r\n\r\n.highlight {\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n\r\n.loading-overlay {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 40px;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.error-message {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}