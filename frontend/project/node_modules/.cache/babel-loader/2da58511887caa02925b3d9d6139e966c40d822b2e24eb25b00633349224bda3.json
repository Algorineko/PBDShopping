{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport authService from '../services/auth';\nexport default {\n  data() {\n    return {\n      loginForm: {\n        userId: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const response = await authService.login(this.loginForm);\n\n        // 存储用户信息和令牌\n        localStorage.setItem('token', 'simulated-token');\n        localStorage.setItem('userId', response.data.userId);\n        localStorage.setItem('userName', response.data.userName);\n        localStorage.setItem('role', response.data.role);\n\n        // 调试信息：打印登录成功的用户信息\n        console.log('登录成功！用户信息:', response.data);\n\n        // 根据角色跳转到不同页面\n        switch (response.data.role) {\n          case 'business':\n            this.$router.push('/business');\n            break;\n          case 'buyer':\n            this.$router.push('/buyer');\n            break;\n          case 'admin':\n            this.$router.push('/admin');\n            break;\n          default:\n            alert('未知用户角色');\n        }\n      } catch (error) {\n        // 更详细的错误提示\n        console.error('登录失败:', error);\n\n        // 检查localStorage中是否有用户数据\n        const roles = ['business', 'buyer', 'admin'];\n        let totalUsers = 0;\n        roles.forEach(role => {\n          const key = `${role}Users`;\n          const users = JSON.parse(localStorage.getItem(key) || '[]');\n          console.log(`键名 ${key} 中的用户数:`, users.length);\n          totalUsers += users.length;\n        });\n        console.log('所有用户总数:', totalUsers);\n        if (totalUsers === 0) {\n          alert('系统中没有注册用户，请先注册');\n        } else {\n          alert(error.message || '登录失败，请检查用户ID和密码');\n        }\n      }\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["authService","data","loginForm","userId","password","methods","handleLogin","response","login","localStorage","setItem","userName","role","console","log","$router","push","alert","error","roles","totalUsers","forEach","key","users","JSON","parse","getItem","length","message","goToRegister"],"sources":["E:\\实验例子\\project\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>用户登录</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div class=\"form-group\">\r\n        <label>用户ID:</label>\r\n        <input type=\"text\" v-model=\"loginForm.userId\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>密码:</label>\r\n        <input type=\"password\" v-model=\"loginForm.password\" required>\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button type=\"submit\">登录</button>\r\n        <button type=\"button\" @click=\"goToRegister\">注册</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/auth'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        userId: '',\r\n        password: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        const response = await authService.login(this.loginForm)\r\n\r\n        // 存储用户信息和令牌\r\n        localStorage.setItem('token', 'simulated-token')\r\n        localStorage.setItem('userId', response.data.userId)\r\n        localStorage.setItem('userName', response.data.userName)\r\n        localStorage.setItem('role', response.data.role)\r\n        \r\n        // 调试信息：打印登录成功的用户信息\r\n        console.log('登录成功！用户信息:', response.data)\r\n\r\n        // 根据角色跳转到不同页面\r\n        switch (response.data.role) {\r\n          case 'business':\r\n            this.$router.push('/business')\r\n            break\r\n          case 'buyer':\r\n            this.$router.push('/buyer')\r\n            break\r\n          case 'admin':\r\n            this.$router.push('/admin')\r\n            break\r\n          default:\r\n            alert('未知用户角色')\r\n        }\r\n      } catch (error) {\r\n        // 更详细的错误提示\r\n        console.error('登录失败:', error)\r\n        \r\n        // 检查localStorage中是否有用户数据\r\n        const roles = ['business', 'buyer', 'admin'];\r\n        let totalUsers = 0;\r\n        \r\n        roles.forEach(role => {\r\n          const key = `${role}Users`;\r\n          const users = JSON.parse(localStorage.getItem(key) || '[]');\r\n          console.log(`键名 ${key} 中的用户数:`, users.length);\r\n          totalUsers += users.length;\r\n        });\r\n        \r\n        console.log('所有用户总数:', totalUsers);\r\n        \r\n        if (totalUsers === 0) {\r\n          alert('系统中没有注册用户，请先注册');\r\n        } else {\r\n          alert(error.message || '登录失败，请检查用户ID和密码');\r\n        }\r\n      }\r\n    },\r\n    goToRegister() {\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  background-color: #f8f9fa;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #495057;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  transition: border-color 0.15s;\r\n}\r\n\r\n.form-group input:focus {\r\n  border-color: #80bdff;\r\n  outline: 0;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.button-group {\r\n  margin-top: 1.5rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\nbutton {\r\n  flex: 1;\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.15s;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n  background-color: #0069d9;\r\n}\r\n\r\nbutton[type=\"button\"] {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\nbutton[type=\"button\"]:hover {\r\n  background-color: #5a6268;\r\n}\r\n</style>"],"mappings":";AAqBA,OAAOA,WAAU,MAAO,kBAAiB;AAEzC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACN,SAAS;;QAEvD;QACAO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,iBAAiB;QAC/CD,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEH,QAAQ,CAACN,IAAI,CAACE,MAAM;QACnDM,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAACN,IAAI,CAACU,QAAQ;QACvDF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,QAAQ,CAACN,IAAI,CAACW,IAAI;;QAE/C;QACAC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEP,QAAQ,CAACN,IAAI;;QAEvC;QACA,QAAQM,QAAQ,CAACN,IAAI,CAACW,IAAI;UACxB,KAAK,UAAU;YACb,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,WAAW;YAC7B;UACF,KAAK,OAAO;YACV,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,QAAQ;YAC1B;UACF,KAAK,OAAO;YACV,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,QAAQ;YAC1B;UACF;YACEC,KAAK,CAAC,QAAQ;QAClB;MACF,EAAE,OAAOC,KAAK,EAAE;QACd;QACAL,OAAO,CAACK,KAAK,CAAC,OAAO,EAAEA,KAAK;;QAE5B;QACA,MAAMC,KAAI,GAAI,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;QAC5C,IAAIC,UAAS,GAAI,CAAC;QAElBD,KAAK,CAACE,OAAO,CAACT,IAAG,IAAK;UACpB,MAAMU,GAAE,GAAI,GAAGV,IAAI,OAAO;UAC1B,MAAMW,KAAI,GAAIC,IAAI,CAACC,KAAK,CAAChB,YAAY,CAACiB,OAAO,CAACJ,GAAG,KAAK,IAAI,CAAC;UAC3DT,OAAO,CAACC,GAAG,CAAC,MAAMQ,GAAG,SAAS,EAAEC,KAAK,CAACI,MAAM,CAAC;UAC7CP,UAAS,IAAKG,KAAK,CAACI,MAAM;QAC5B,CAAC,CAAC;QAEFd,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEM,UAAU,CAAC;QAElC,IAAIA,UAAS,KAAM,CAAC,EAAE;UACpBH,KAAK,CAAC,gBAAgB,CAAC;QACzB,OAAO;UACLA,KAAK,CAACC,KAAK,CAACU,OAAM,IAAK,iBAAiB,CAAC;QAC3C;MACF;IACF,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACd,OAAO,CAACC,IAAI,CAAC,WAAW;IAC/B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}