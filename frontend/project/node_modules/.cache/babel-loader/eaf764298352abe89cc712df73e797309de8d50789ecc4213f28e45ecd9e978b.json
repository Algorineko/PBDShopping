{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'BusinessView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n\n    // 功能列表\n    const functions = ref([{\n      key: 'info',\n      label: '商家信息'\n    }, {\n      key: 'products',\n      label: '商品管理'\n    }, {\n      key: 'orders',\n      label: '订单管理'\n    }, {\n      key: 'reviews',\n      label: '评价管理'\n    }]);\n\n    // 当前视图\n    const currentView = ref('info');\n\n    // 商家信息\n    const shopInfo = ref({\n      id: 'BUS123456',\n      name: '我的店铺',\n      contact: '13800138000',\n      license: 'https://example.com/license.jpg',\n      credit: 'AAA级',\n      balance: 844.45\n    });\n\n    // 商品相关数据\n    const products = ref([{\n      id: 1,\n      name: '美白面膜',\n      price: 99.00,\n      stock: 100,\n      status: 'published',\n      description: '深层保湿面膜'\n    }, {\n      id: 2,\n      name: '保湿精华',\n      price: 199.00,\n      stock: 50,\n      status: 'draft',\n      description: '高效保湿精华液'\n    }]);\n    const productFilter = ref({\n      keyword: ''\n    });\n    const productDialogVisible = ref(false);\n    const currentProduct = ref({});\n    const isEditing = ref(false);\n\n    // 订单相关数据\n    const orders = ref([{\n      orderId: '20231001001',\n      createTime: '2023-10-01 14:30:00',\n      amount: 299.00,\n      status: 'pending'\n    }, {\n      orderId: '20231001002',\n      createTime: '2023-10-01 15:00:00',\n      amount: 599.00,\n      status: 'shipped'\n    }]);\n    const orderFilter = ref({\n      status: 'all',\n      dateRange: []\n    });\n    const statusMap = {\n      pending: {\n        text: '待付款',\n        type: 'warning'\n      },\n      shipped: {\n        text: '已发货',\n        type: 'primary'\n      },\n      completed: {\n        text: '已完成',\n        type: 'success'\n      }\n    };\n\n    // 评价相关数据\n    const reviews = ref([{\n      productName: '美白面膜',\n      rating: 4.5,\n      content: '保湿效果不错，会继续回购',\n      createTime: '2023-10-01 10:00:00',\n      replied: false\n    }, {\n      productName: '保湿精华',\n      rating: 5,\n      content: '吸收很快，非常满意',\n      createTime: '2023-10-01 11:00:00',\n      replied: true\n    }]);\n    const reviewFilter = ref({\n      keyword: '',\n      rating: '0'\n    });\n    const replyDialogVisible = ref(false);\n    const replyContent = ref('');\n    let currentReview = null;\n\n    // 计算属性\n    const filteredProducts = computed(() => {\n      return products.value.filter(p => p.name.includes(productFilter.value.keyword));\n    });\n    const filteredOrders = computed(() => {\n      return orders.value.filter(order => (orderFilter.value.status === 'all' || order.status === orderFilter.value.status) && (!orderFilter.value.dateRange.length || new Date(order.createTime) >= orderFilter.value.dateRange[0] && new Date(order.createTime) <= orderFilter.value.dateRange[1]));\n    });\n    const filteredReviews = computed(() => {\n      return reviews.value.filter(review => review.productName.includes(reviewFilter.value.keyword) && (reviewFilter.value.rating === '0' || reviewFilter.value.rating === '5' && review.rating === 5 || reviewFilter.value.rating === '4' && review.rating >= 4 && review.rating < 5 || reviewFilter.value.rating === '3' && review.rating <= 3));\n    });\n    const dialogTitle = computed(() => {\n      return isEditing.value ? '编辑商品' : '新增商品';\n    });\n\n    // 方法\n    const switchView = view => {\n      currentView.value = view;\n    };\n    const logout = () => {\n      localStorage.clear();\n      router.push('/login');\n    };\n    const saveShopInfo = () => {\n      ElMessage.success('商家信息已保存');\n    };\n    const showAddDialog = () => {\n      currentProduct.value = {\n        name: '',\n        price: 0,\n        stock: 0,\n        status: 'draft',\n        description: ''\n      };\n      isEditing.value = false;\n      productDialogVisible.value = true;\n    };\n    const editProduct = product => {\n      currentProduct.value = {\n        ...product\n      };\n      isEditing.value = true;\n      productDialogVisible.value = true;\n    };\n    const saveProduct = () => {\n      if (isEditing.value) {\n        const index = products.value.findIndex(p => p.id === currentProduct.value.id);\n        products.value.splice(index, 1, currentProduct.value);\n      } else {\n        products.value.push({\n          ...currentProduct.value,\n          id: Date.now()\n        });\n      }\n      productDialogVisible.value = false;\n      ElMessage.success('商品保存成功');\n    };\n    const deleteProduct = id => {\n      const index = products.value.findIndex(p => p.id === id);\n      products.value.splice(index, 1);\n      ElMessage.success('商品已删除');\n    };\n    const viewOrderDetail = order => {\n      console.log('查看订单详情:', order);\n    };\n    const handleShip = order => {\n      order.status = 'shipped';\n      ElMessage.success('订单已标记为已发货');\n    };\n    const showReplyDialog = review => {\n      currentReview = review;\n      replyDialogVisible.value = true;\n    };\n    const submitReply = () => {\n      if (currentReview) {\n        currentReview.replied = true;\n        ElMessage.success('回复成功');\n        replyDialogVisible.value = false;\n        replyContent.value = '';\n      }\n    };\n    onMounted(() => {\n      // 初始化数据\n    });\n    const __returned__ = {\n      router,\n      functions,\n      currentView,\n      shopInfo,\n      products,\n      productFilter,\n      productDialogVisible,\n      currentProduct,\n      isEditing,\n      orders,\n      orderFilter,\n      statusMap,\n      reviews,\n      reviewFilter,\n      replyDialogVisible,\n      replyContent,\n      get currentReview() {\n        return currentReview;\n      },\n      set currentReview(v) {\n        currentReview = v;\n      },\n      filteredProducts,\n      filteredOrders,\n      filteredReviews,\n      dialogTitle,\n      switchView,\n      logout,\n      saveShopInfo,\n      showAddDialog,\n      editProduct,\n      saveProduct,\n      deleteProduct,\n      viewOrderDetail,\n      handleShip,\n      showReplyDialog,\n      submitReply,\n      ref,\n      computed,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","ElMessage","router","functions","key","label","currentView","shopInfo","id","name","contact","license","credit","balance","products","price","stock","status","description","productFilter","keyword","productDialogVisible","currentProduct","isEditing","orders","orderId","createTime","amount","orderFilter","dateRange","statusMap","pending","text","type","shipped","completed","reviews","productName","rating","content","replied","reviewFilter","replyDialogVisible","replyContent","currentReview","filteredProducts","value","filter","p","includes","filteredOrders","order","length","Date","filteredReviews","review","dialogTitle","switchView","view","logout","localStorage","clear","push","saveShopInfo","success","showAddDialog","editProduct","product","saveProduct","index","findIndex","splice","now","deleteProduct","viewOrderDetail","console","log","handleShip","showReplyDialog","submitReply"],"sources":["E:/实验例子/project/src/views/BusinessView.vue"],"sourcesContent":["<template>\r\n  <div class=\"business-container\">\r\n    <!-- 顶部操作栏 -->\r\n    <div class=\"action-bar\">\r\n      <el-button class=\"logout-btn\" type=\"text\" @click=\"logout\">退出登录</el-button>\r\n    </div>\r\n\r\n    <!-- 左侧功能面板 -->\r\n    <div class=\"function-panel\">\r\n      <div \r\n        v-for=\"item in functions\" \r\n        :key=\"item.key\"\r\n        class=\"function-card\"\r\n        :class=\"{ active: currentView === item.key }\"\r\n        @click=\"switchView(item.key)\"\r\n      >\r\n        {{ item.label }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 右侧内容区 -->\r\n    <div class=\"content-area\">\r\n      <!-- 商家信息 -->\r\n      <div v-if=\"currentView === 'info'\" class=\"info-section\">\r\n        <h2>商家信息</h2>\r\n        <el-card>\r\n          <el-form label-width=\"100px\">\r\n            <el-form-item label=\"商家ID\">\r\n              <el-input v-model=\"shopInfo.id\" disabled />\r\n            </el-form-item>\r\n            <el-form-item label=\"商家名称\">\r\n              <el-input v-model=\"shopInfo.name\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"联系方式\">\r\n              <el-input v-model=\"shopInfo.contact\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"营业执照\">\r\n              <el-image \r\n                style=\"width: 300px\"\r\n                :src=\"shopInfo.license\"\r\n                :preview-src-list=\"[shopInfo.license]\"\r\n              />\r\n            </el-form-item>\r\n            <el-button type=\"primary\" @click=\"saveShopInfo\">保存修改</el-button>\r\n          </el-form>\r\n        </el-card>\r\n      </div>\r\n\r\n      <!-- 商品管理 -->\r\n      <div v-if=\"currentView === 'products'\" class=\"product-section\">\r\n        <div class=\"table-header\">\r\n          <el-input \r\n            v-model=\"productFilter.keyword\" \r\n            placeholder=\"输入商品名称\" \r\n            style=\"width: 200px\"\r\n            clearable\r\n          />\r\n          <el-button type=\"primary\" icon=\"Plus\" @click=\"showAddDialog\">新增商品</el-button>\r\n        </div>\r\n        \r\n        <el-table :data=\"filteredProducts\" border style=\"width: 100%\">\r\n          <el-table-column prop=\"name\" label=\"商品名称\" width=\"180\" />\r\n          <el-table-column prop=\"price\" label=\"价格\" width=\"120\" align=\"right\">\r\n            <template #default=\"{row}\">¥{{ row.price.toFixed(2) }}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"stock\" label=\"库存\" width=\"120\" />\r\n          <el-table-column label=\"状态\" width=\"120\">\r\n            <template #default=\"{row}\">\r\n              <el-tag :type=\"row.status === 'published' ? 'success' : 'info'\">\r\n                {{ row.status === 'published' ? '已上架' : '未上架' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"200\">\r\n            <template #default=\"{row}\">\r\n              <el-button size=\"small\" @click=\"editProduct(row)\">编辑</el-button>\r\n              <el-button size=\"small\" type=\"danger\" @click=\"deleteProduct(row.id)\">\r\n                删除\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <!-- 订单管理 -->\r\n      <div v-if=\"currentView === 'orders'\" class=\"order-section\">\r\n        <div class=\"filter-bar\">\r\n          <div class=\"filter-group\">\r\n            <el-select \r\n              v-model=\"orderFilter.status\" \r\n              placeholder=\"订单状态\" \r\n              style=\"width: 120px\"\r\n            >\r\n              <el-option label=\"全部\" value=\"all\" />\r\n              <el-option label=\"待付款\" value=\"pending\" />\r\n              <el-option label=\"已发货\" value=\"shipped\" />\r\n              <el-option label=\"已完成\" value=\"completed\" />\r\n            </el-select>\r\n            <el-date-picker\r\n              v-model=\"orderFilter.dateRange\"\r\n              type=\"daterange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n            />\r\n          </div>\r\n          <el-button type=\"primary\" icon=\"Search\">搜索</el-button>\r\n        </div>\r\n\r\n        <el-table :data=\"filteredOrders\" border style=\"width: 100%\">\r\n          <el-table-column prop=\"orderId\" label=\"订单号\" width=\"180\" />\r\n          <el-table-column prop=\"createTime\" label=\"下单时间\" width=\"180\" />\r\n          <el-table-column label=\"金额\" width=\"120\" align=\"right\">\r\n            <template #default=\"{row}\">¥{{ row.amount.toFixed(2) }}</template>\r\n          </el-table-column>\r\n          <el-table-column label=\"状态\" width=\"120\">\r\n            <template #default=\"{row}\">\r\n              <el-tag :type=\"statusMap[row.status].type\" size=\"small\">\r\n                {{ statusMap[row.status].text }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"150\">\r\n            <template #default=\"{row}\">\r\n              <el-button size=\"small\" @click=\"viewOrderDetail(row)\">详情</el-button>\r\n              <el-button \r\n                v-if=\"row.status === 'pending'\" \r\n                size=\"small\" \r\n                type=\"success\"\r\n                @click=\"handleShip(row)\"\r\n              >发货</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <!-- 评价管理 -->\r\n      <div v-if=\"currentView === 'reviews'\" class=\"review-section\">\r\n        <div class=\"filter-bar\">\r\n          <el-input \r\n            v-model=\"reviewFilter.keyword\" \r\n            placeholder=\"搜索商品名称\" \r\n            style=\"width: 200px\"\r\n          />\r\n          <el-select \r\n            v-model=\"reviewFilter.rating\" \r\n            placeholder=\"评分筛选\" \r\n            style=\"width: 120px\"\r\n          >\r\n            <el-option label=\"全部\" value=\"0\" />\r\n            <el-option label=\"5星\" value=\"5\" />\r\n            <el-option label=\"4星\" value=\"4\" />\r\n            <el-option label=\"3星及以下\" value=\"3\" />\r\n          </el-select>\r\n        </div>\r\n\r\n        <el-table :data=\"filteredReviews\" border style=\"width: 100%\">\r\n          <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\" />\r\n          <el-table-column label=\"评分\" width=\"120\">\r\n            <template #default=\"{row}\">\r\n              <el-rate \r\n                v-model=\"row.rating\" \r\n                disabled \r\n                :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\" \r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"content\" label=\"评价内容\" />\r\n          <el-table-column prop=\"createTime\" label=\"评价时间\" width=\"180\" />\r\n          <el-table-column label=\"操作\" width=\"120\">\r\n            <template #default=\"{row}\">\r\n              <el-button \r\n                v-if=\"!row.replied\"\r\n                type=\"primary\" \r\n                size=\"small\"\r\n                @click=\"showReplyDialog(row)\"\r\n              >回复</el-button>\r\n              <span v-else class=\"replied-text\">已回复</span>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 右下角店铺信息 -->\r\n    <div class=\"shop-info\">\r\n      <h3>{{ shopInfo.name }}</h3>\r\n      <p>商家ID: {{ shopInfo.id }}</p>\r\n      <p>信用等级: {{ shopInfo.credit }}</p>\r\n      <p>余额: ¥{{ shopInfo.balance.toFixed(2) }}</p>\r\n    </div>\r\n\r\n    <!-- 添加商品对话框 -->\r\n    <el-dialog v-model=\"productDialogVisible\" :title=\"dialogTitle\">\r\n      <el-form :model=\"currentProduct\" label-width=\"80px\">\r\n        <el-form-item label=\"商品名称\">\r\n          <el-input v-model=\"currentProduct.name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <el-input-number v-model=\"currentProduct.price\" :min=\"0\" :precision=\"2\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"库存\">\r\n          <el-input-number v-model=\"currentProduct.stock\" :min=\"0\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"currentProduct.status\">\r\n            <el-option label=\"已上架\" value=\"published\" />\r\n            <el-option label=\"未上架\" value=\"draft\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"currentProduct.description\" type=\"textarea\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"productDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveProduct\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 回复评价对话框 -->\r\n    <el-dialog v-model=\"replyDialogVisible\" title=\"回复评价\" width=\"500px\">\r\n      <el-input\r\n        v-model=\"replyContent\"\r\n        type=\"textarea\"\r\n        :rows=\"4\"\r\n        placeholder=\"请输入回复内容\"\r\n      />\r\n      <template #footer>\r\n        <el-button @click=\"replyDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitReply\">提交回复</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst router = useRouter()\r\n\r\n// 功能列表\r\nconst functions = ref([\r\n  { key: 'info', label: '商家信息' },\r\n  { key: 'products', label: '商品管理' },\r\n  { key: 'orders', label: '订单管理' },\r\n  { key: 'reviews', label: '评价管理' }\r\n])\r\n\r\n// 当前视图\r\nconst currentView = ref('info')\r\n\r\n// 商家信息\r\nconst shopInfo = ref({\r\n  id: 'BUS123456',\r\n  name: '我的店铺',\r\n  contact: '13800138000',\r\n  license: 'https://example.com/license.jpg',\r\n  credit: 'AAA级',\r\n  balance: 844.45\r\n})\r\n\r\n// 商品相关数据\r\nconst products = ref([\r\n  { \r\n    id: 1,\r\n    name: '美白面膜',\r\n    price: 99.00,\r\n    stock: 100,\r\n    status: 'published',\r\n    description: '深层保湿面膜'\r\n  },\r\n  { \r\n    id: 2,\r\n    name: '保湿精华',\r\n    price: 199.00,\r\n    stock: 50,\r\n    status: 'draft',\r\n    description: '高效保湿精华液'\r\n  }\r\n])\r\n\r\nconst productFilter = ref({\r\n  keyword: ''\r\n})\r\n\r\nconst productDialogVisible = ref(false)\r\nconst currentProduct = ref({})\r\nconst isEditing = ref(false)\r\n\r\n// 订单相关数据\r\nconst orders = ref([\r\n  {\r\n    orderId: '20231001001',\r\n    createTime: '2023-10-01 14:30:00',\r\n    amount: 299.00,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    orderId: '20231001002',\r\n    createTime: '2023-10-01 15:00:00',\r\n    amount: 599.00,\r\n    status: 'shipped'\r\n  }\r\n])\r\n\r\nconst orderFilter = ref({\r\n  status: 'all',\r\n  dateRange: []\r\n})\r\n\r\nconst statusMap = {\r\n  pending: { text: '待付款', type: 'warning' },\r\n  shipped: { text: '已发货', type: 'primary' },\r\n  completed: { text: '已完成', type: 'success' }\r\n}\r\n\r\n// 评价相关数据\r\nconst reviews = ref([\r\n  {\r\n    productName: '美白面膜',\r\n    rating: 4.5,\r\n    content: '保湿效果不错，会继续回购',\r\n    createTime: '2023-10-01 10:00:00',\r\n    replied: false\r\n  },\r\n  {\r\n    productName: '保湿精华',\r\n    rating: 5,\r\n    content: '吸收很快，非常满意',\r\n    createTime: '2023-10-01 11:00:00',\r\n    replied: true\r\n  }\r\n])\r\n\r\nconst reviewFilter = ref({\r\n  keyword: '',\r\n  rating: '0'\r\n})\r\n\r\nconst replyDialogVisible = ref(false)\r\nconst replyContent = ref('')\r\nlet currentReview = null\r\n\r\n// 计算属性\r\nconst filteredProducts = computed(() => {\r\n  return products.value.filter(p => \r\n    p.name.includes(productFilter.value.keyword)\r\n  )\r\n})\r\n\r\nconst filteredOrders = computed(() => {\r\n  return orders.value.filter(order => \r\n    (orderFilter.value.status === 'all' || order.status === orderFilter.value.status) &&\r\n    (!orderFilter.value.dateRange.length || \r\n     new Date(order.createTime) >= orderFilter.value.dateRange[0] &&\r\n     new Date(order.createTime) <= orderFilter.value.dateRange[1])\r\n  )\r\n})\r\n\r\nconst filteredReviews = computed(() => {\r\n  return reviews.value.filter(review => \r\n    review.productName.includes(reviewFilter.value.keyword) &&\r\n    (reviewFilter.value.rating === '0' || \r\n     (reviewFilter.value.rating === '5' && review.rating === 5) ||\r\n     (reviewFilter.value.rating === '4' && review.rating >= 4 && review.rating < 5) ||\r\n     (reviewFilter.value.rating === '3' && review.rating <= 3))\r\n  )\r\n})\r\n\r\nconst dialogTitle = computed(() => {\r\n  return isEditing.value ? '编辑商品' : '新增商品'\r\n})\r\n\r\n// 方法\r\nconst switchView = (view) => {\r\n  currentView.value = view\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.clear()\r\n  router.push('/login')\r\n}\r\n\r\nconst saveShopInfo = () => {\r\n  ElMessage.success('商家信息已保存')\r\n}\r\n\r\nconst showAddDialog = () => {\r\n  currentProduct.value = {\r\n    name: '',\r\n    price: 0,\r\n    stock: 0,\r\n    status: 'draft',\r\n    description: ''\r\n  }\r\n  isEditing.value = false\r\n  productDialogVisible.value = true\r\n}\r\n\r\nconst editProduct = (product) => {\r\n  currentProduct.value = { ...product }\r\n  isEditing.value = true\r\n  productDialogVisible.value = true\r\n}\r\n\r\nconst saveProduct = () => {\r\n  if (isEditing.value) {\r\n    const index = products.value.findIndex(p => p.id === currentProduct.value.id)\r\n    products.value.splice(index, 1, currentProduct.value)\r\n  } else {\r\n    products.value.push({\r\n      ...currentProduct.value,\r\n      id: Date.now()\r\n    })\r\n  }\r\n  productDialogVisible.value = false\r\n  ElMessage.success('商品保存成功')\r\n}\r\n\r\nconst deleteProduct = (id) => {\r\n  const index = products.value.findIndex(p => p.id === id)\r\n  products.value.splice(index, 1)\r\n  ElMessage.success('商品已删除')\r\n}\r\n\r\nconst viewOrderDetail = (order) => {\r\n  console.log('查看订单详情:', order)\r\n}\r\n\r\nconst handleShip = (order) => {\r\n  order.status = 'shipped'\r\n  ElMessage.success('订单已标记为已发货')\r\n}\r\n\r\nconst showReplyDialog = (review) => {\r\n  currentReview = review\r\n  replyDialogVisible.value = true\r\n}\r\n\r\nconst submitReply = () => {\r\n  if (currentReview) {\r\n    currentReview.replied = true\r\n    ElMessage.success('回复成功')\r\n    replyDialogVisible.value = false\r\n    replyContent.value = ''\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  // 初始化数据\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.business-container {\r\n  position: relative;\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr;\r\n  grid-template-rows: 60px 1fr;\r\n  background: #f5f7fa;\r\n}\r\n\r\n.action-bar {\r\n  grid-column: 1 / -1;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding: 10px 20px;\r\n  background: #fff;\r\n  border-bottom: 1px solid #ebeef5;\r\n  z-index: 1;\r\n}\r\n\r\n.logout-btn {\r\n  padding: 8px 15px;\r\n}\r\n\r\n.function-panel {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-right: 1px solid #ebeef5;\r\n  overflow-y: auto;\r\n}\r\n\r\n.function-card {\r\n  padding: 20px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  font-size: 14px;\r\n}\r\n\r\n.function-card:hover {\r\n  border-color: #409eff;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.function-card.active {\r\n  border-color: #409eff;\r\n  background-color: #ecf5ff;\r\n}\r\n\r\n.content-area {\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  background: #fff;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.filter-bar {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.shop-info {\r\n  position: fixed;\r\n  right: 20px;\r\n  bottom: 20px;\r\n  padding: 15px;\r\n  background: #fff;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n  z-index: 100;\r\n}\r\n\r\n.shop-info h3 {\r\n  margin: 0 0 10px 0;\r\n  color: #303133;\r\n}\r\n\r\n.shop-info p {\r\n  margin: 5px 0;\r\n  color: #606266;\r\n  font-size: 12px;\r\n}\r\n\r\n.replied-text {\r\n  color: #67C23A;\r\n  font-size: 12px;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n\r\n.el-pagination {\r\n  margin-top: 20px;\r\n  justify-content: flex-end;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}