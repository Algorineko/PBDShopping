{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-detail\"\n};\nconst _hoisted_2 = {\n  class: \"detail-content\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-images\"\n};\nconst _hoisted_4 = {\n  class: \"product-info\"\n};\nconst _hoisted_5 = {\n  class: \"price\"\n};\nconst _hoisted_6 = {\n  class: \"action-group\"\n};\nconst _hoisted_7 = {\n  class: \"description\"\n};\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useCartStore } from '@/stores/cart';\nimport axios from 'axios';\nexport default {\n  __name: 'ProductDetail',\n  setup(__props) {\n    const route = useRoute();\n    const router = useRouter();\n    const cartStore = useCartStore();\n    const product = ref({\n      id: '',\n      name: '',\n      price: 0,\n      images: [],\n      description: ''\n    });\n    const quantity = ref(1);\n    const isAddingToCart = ref(false); // 加载状态\n\n    // 从API获取商品详情\n    const fetchProductDetail = async id => {\n      if (!id) {\n        ElMessage.error('无效的商品ID');\n        return;\n      }\n      try {\n        const response = await axios.get(`http://algorineko.top:8080/api/merchant/product/detail/${id}`);\n        const apiData = response.data;\n\n        // 转换API数据结构以适应前端需求\n        product.value = {\n          id: apiData.productId,\n          name: apiData.productName,\n          price: apiData.price,\n          description: apiData.description,\n          // 确保images是数组，如果为null则转换为空数组\n          images: apiData.images || []\n        };\n      } catch (error) {\n        ElMessage.error('商品加载失败');\n        console.error('商品加载错误:', error);\n      }\n    };\n    onMounted(() => {\n      const productId = route.params.id;\n      if (productId) fetchProductDetail(productId);\n    });\n\n    // 从JWT token解析payload\n    const addToCart = async () => {\n      isAddingToCart.value = true; // 开始加载\n\n      try {\n        await cartStore.addItemToCart({\n          id: product.value.id,\n          productName: product.value.name,\n          price: product.value.price,\n          quantity: quantity.value,\n          image: product.value.images?.[0] || ''\n        });\n        // 新增：添加成功后刷新购物车数据\n        await cartStore.fetchCart();\n        ElMessage.success('已加入购物车');\n      } catch (error) {\n        // 处理错误\n        console.error('加入购物车失败:', error);\n        const errorMsg = error.message || '加入购物车失败';\n        ElMessage.error(errorMsg);\n\n        // 处理未登录情况\n        if (error.response?.status === 401) {\n          router.push('/login');\n        }\n      } finally {\n        isAddingToCart.value = false; // 结束加载\n      }\n    };\n    return (_ctx, _cache) => {\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_image = _resolveComponent(\"el-image\");\n      const _component_el_carousel_item = _resolveComponent(\"el-carousel-item\");\n      const _component_el_carousel = _resolveComponent(\"el-carousel\");\n      const _component_el_empty = _resolveComponent(\"el-empty\");\n      const _component_el_input_number = _resolveComponent(\"el-input-number\");\n      const _component_el_divider = _resolveComponent(\"el-divider\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n        type: \"text\",\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.go(-1))\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"返回\")])),\n        _: 1,\n        __: [2]\n      }), _createElementVNode(\"div\", _hoisted_2, [product.value.images?.length > 0 ? (_openBlock(), _createBlock(_component_el_carousel, {\n        key: 0,\n        interval: 4000,\n        height: \"400px\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(product.value.images, (img, index) => {\n          return _openBlock(), _createBlock(_component_el_carousel_item, {\n            key: index,\n            style: {\n              \"height\": \"400px\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_image, {\n              src: img,\n              fit: \"cover\",\n              style: {\n                \"width\": \"100%\",\n                \"height\": \"100%\"\n              }\n            }, null, 8, [\"src\"])]),\n            _: 2\n          }, 1024);\n        }), 128))]),\n        _: 1\n      })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_empty, {\n        description: \"暂无商品图片\"\n      })])), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h1\", null, _toDisplayString(product.value.name), 1), _createElementVNode(\"p\", _hoisted_5, \"¥\" + _toDisplayString(product.value.price), 1), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_input_number, {\n        modelValue: quantity.value,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => quantity.value = $event),\n        min: 1\n      }, null, 8, [\"modelValue\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: addToCart,\n        loading: isAddingToCart.value\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 加入购物车 \")])),\n        _: 1,\n        __: [3]\n      }, 8, [\"loading\"])]), _createVNode(_component_el_divider), _createElementVNode(\"div\", _hoisted_7, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"商品详情\", -1)), _createElementVNode(\"p\", null, _toDisplayString(product.value.description || '暂无详情描述'), 1)])])])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","ElMessage","useCartStore","axios","route","router","cartStore","product","id","name","price","images","description","quantity","isAddingToCart","fetchProductDetail","error","response","get","apiData","data","value","productId","productName","console","params","addToCart","addItemToCart","image","fetchCart","success","errorMsg","message","status","push"],"sources":["E:/实验例子/project/src/views/Buyer/ProductDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n    <el-button type=\"text\" @click=\"$router.go(-1)\">返回</el-button>\r\n    \r\n    <div class=\"detail-content\">\r\n      <el-carousel :interval=\"4000\" height=\"400px\" v-if=\"product.images?.length > 0\">\r\n        <el-carousel-item \r\n          v-for=\"(img, index) in product.images\" \r\n          :key=\"index\"\r\n          style=\"height: 400px;\"\r\n        >\r\n          <el-image \r\n            :src=\"img\" \r\n            fit=\"cover\" \r\n            style=\"width: 100%; height: 100%;\"\r\n          />\r\n        </el-carousel-item>\r\n      </el-carousel>\r\n      \r\n      <!-- 无图片提示 -->\r\n      <div v-else class=\"no-images\">\r\n        <el-empty description=\"暂无商品图片\" />\r\n      </div>\r\n\r\n      <div class=\"product-info\">\r\n        <h1>{{ product.name }}</h1>\r\n        <p class=\"price\">¥{{ product.price }}</p>\r\n        \r\n        <div class=\"action-group\">\r\n          <el-input-number \r\n            v-model=\"quantity\" \r\n            :min=\"1\"\r\n          />\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"addToCart\"\r\n            :loading=\"isAddingToCart\"\r\n          >\r\n            加入购物车\r\n          </el-button>\r\n        </div>\r\n\r\n        <el-divider />\r\n        <div class=\"description\">\r\n          <h3>商品详情</h3>\r\n          <p>{{ product.description || '暂无详情描述' }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\nimport axios from 'axios'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst cartStore = useCartStore()\r\n\r\nconst product = ref({\r\n  id: '',\r\n  name: '',\r\n  price: 0,\r\n  images: [],\r\n  description: ''\r\n})\r\n\r\nconst quantity = ref(1)\r\nconst isAddingToCart = ref(false) // 加载状态\r\n\r\n// 从API获取商品详情\r\nconst fetchProductDetail = async (id) => {\r\n  if (!id) {\r\n    ElMessage.error('无效的商品ID')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    const response = await axios.get(\r\n      `http://algorineko.top:8080/api/merchant/product/detail/${id}`\r\n    )\r\n    \r\n    const apiData = response.data\r\n    \r\n    // 转换API数据结构以适应前端需求\r\n    product.value = {\r\n      id: apiData.productId,\r\n      name: apiData.productName,\r\n      price: apiData.price,\r\n      description: apiData.description,\r\n      // 确保images是数组，如果为null则转换为空数组\r\n      images: apiData.images || []\r\n    }\r\n    \r\n  } catch (error) {\r\n    ElMessage.error('商品加载失败')\r\n    console.error('商品加载错误:', error)\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  const productId = route.params.id\r\n  if (productId) fetchProductDetail(productId)\r\n})\r\n\r\n// 从JWT token解析payload\r\nconst addToCart = async () => {\r\n  isAddingToCart.value = true // 开始加载\r\n  \r\n  try {\r\n    await cartStore.addItemToCart({\r\n      id: product.value.id,\r\n      productName: product.value.name,\r\n      price: product.value.price,\r\n      quantity: quantity.value,\r\n      image: product.value.images?.[0] || ''\r\n    })\r\n     // 新增：添加成功后刷新购物车数据\r\n    await cartStore.fetchCart()\r\n    \r\n    ElMessage.success('已加入购物车')\r\n  } catch (error) {\r\n    // 处理错误\r\n    console.error('加入购物车失败:', error)\r\n    const errorMsg = error.message || '加入购物车失败'\r\n    ElMessage.error(errorMsg)\r\n    \r\n    // 处理未登录情况\r\n    if (error.response?.status === 401) {\r\n      router.push('/login')\r\n    }\r\n  } finally {\r\n    isAddingToCart.value = false // 结束加载\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-detail {\r\n  padding: 20px;\r\n}\r\n\r\n.detail-content {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 40px;\r\n}\r\n\r\n.action-group {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.description {\r\n  margin-top: 30px;\r\n}\r\n\r\n.price {\r\n  font-size: 24px;\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.no-images {\r\n  height: 400px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .detail-content {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}