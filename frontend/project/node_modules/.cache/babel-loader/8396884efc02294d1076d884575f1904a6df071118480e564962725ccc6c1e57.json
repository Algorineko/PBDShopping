{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'UserOrders',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const statusText = {\n      pending: '待付款',\n      shipped: '已发货',\n      completed: '已完成',\n      canceled: '已取消'\n    };\n    const statusType = {\n      pending: 'warning',\n      shipped: 'primary',\n      completed: 'success',\n      canceled: 'info'\n    };\n    const orders = ref([]);\n    const filterStatus = ref('all');\n    const filterDate = ref([]);\n    const reviewDialogVisible = ref(false);\n    const currentOrder = ref(null);\n    const reviewForm = ref({\n      rating: 5,\n      content: ''\n    });\n    const loadOrders = async () => {\n      try {\n        const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]');\n        orders.value = savedOrders.map(order => ({\n          ...order,\n          items: order.items || []\n        }));\n      } catch (error) {\n        ElMessage.error('订单加载失败');\n      }\n    };\n    const submitReview = () => {\n      if (!reviewForm.value.rating || !reviewForm.value.content) {\n        ElMessage.warning('请填写完整的评价信息');\n        return;\n      }\n      const reviews = JSON.parse(localStorage.getItem('reviews') || '[]');\n      reviews.push({\n        productId: currentOrder.value.items[0].id,\n        productName: currentOrder.value.items[0].name,\n        orderId: currentOrder.value.orderId,\n        ...reviewForm.value,\n        date: new Date().toISOString()\n      });\n      localStorage.setItem('reviews', JSON.stringify(reviews));\n      orders.value = orders.value.map(order => order.orderId === currentOrder.value.orderId ? {\n        ...order,\n        reviewed: true\n      } : order);\n      reviewDialogVisible.value = false;\n      ElMessage.success('评价提交成功');\n    };\n    onMounted(loadOrders);\n    const __returned__ = {\n      statusText,\n      statusType,\n      orders,\n      filterStatus,\n      filterDate,\n      reviewDialogVisible,\n      currentOrder,\n      reviewForm,\n      loadOrders,\n      submitReview,\n      ref,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","statusText","pending","shipped","completed","canceled","statusType","orders","filterStatus","filterDate","reviewDialogVisible","currentOrder","reviewForm","rating","content","loadOrders","savedOrders","JSON","parse","localStorage","getItem","value","map","order","items","error","submitReview","warning","reviews","push","productId","id","productName","name","orderId","date","Date","toISOString","setItem","stringify","reviewed","success"],"sources":["E:/实验例子/project/src/components/UserOrders.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-orders\">\r\n    <h2>我的订单</h2>\r\n    \r\n    <div class=\"filter-section\">\r\n      <el-select v-model=\"filterStatus\" placeholder=\"全部状态\" @change=\"loadOrders\">\r\n        <el-option\r\n          v-for=\"status in statusOptions\"\r\n          :key=\"status.value\"\r\n          :label=\"status.label\"\r\n          :value=\"status.value\"\r\n        />\r\n      </el-select>\r\n      <el-date-picker\r\n        v-model=\"filterDate\"\r\n        type=\"daterange\"\r\n        range-separator=\"至\"\r\n        start-placeholder=\"开始日期\"\r\n        end-placeholder=\"结束日期\"\r\n        @change=\"loadOrders\"\r\n      />\r\n    </div>\r\n\r\n    <el-table :data=\"orders\" border v-if=\"orders.length > 0\">\r\n      <el-table-column label=\"商品信息\" width=\"300\">\r\n        <template #default=\"scope\">\r\n          <div class=\"product-items\">\r\n            <router-link \r\n              v-for=\"item in scope.row.items\" \r\n              :key=\"item.id\"\r\n              :to=\"`/buyer/product/${item.id}`\"\r\n              class=\"product-item\"\r\n            >\r\n              <el-image :src=\"item.image\" style=\"width:50px;height:50px\"/>\r\n              <span class=\"product-name\">{{ item.name }}</span>\r\n            </router-link>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"orderId\" label=\"订单号\" width=\"200\"/>\r\n      <el-table-column prop=\"createTime\" label=\"下单时间\" width=\"180\"/>\r\n      <el-table-column label=\"金额\" width=\"120\" align=\"right\">\r\n        <template #default=\"scope\">\r\n          ¥{{ scope.row.amount?.toFixed(2) || '0.00' }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"statusType[scope.row.status]\">\r\n            {{ statusText[scope.row.status] }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"220\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"viewDetail(scope.row.orderId)\">详情</el-button>\r\n          <el-button \r\n            v-if=\"scope.row.status === 'pending'\"\r\n            type=\"success\" \r\n            size=\"small\"\r\n            @click=\"payOrder(scope.row.orderId)\"\r\n          >\r\n            付款\r\n          </el-button>\r\n          <el-button \r\n            v-if=\"scope.row.status === 'completed' && !scope.row.reviewed\"\r\n            type=\"warning\"\r\n            size=\"small\"\r\n            @click=\"openReviewDialog(scope.row)\"\r\n          >\r\n            评价\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog v-model=\"reviewDialogVisible\" title=\"商品评价\">\r\n      <el-form :model=\"reviewForm\">\r\n        <el-form-item label=\"评分\" required>\r\n          <el-rate v-model=\"reviewForm.rating\" :max=\"5\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"评价内容\" required>\r\n          <el-input \r\n            v-model=\"reviewForm.content\"\r\n            type=\"textarea\"\r\n            rows=\"4\"\r\n            maxlength=\"200\"\r\n            show-word-limit\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"reviewDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitReview\">提交</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <el-empty v-else description=\"暂无订单数据\"/>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst statusText = {\r\n  pending: '待付款',\r\n  shipped: '已发货',\r\n  completed: '已完成',\r\n  canceled: '已取消'\r\n}\r\n\r\nconst statusType = {\r\n  pending: 'warning',\r\n  shipped: 'primary',\r\n  completed: 'success',\r\n  canceled: 'info'\r\n}\r\n\r\nconst orders = ref([])\r\nconst filterStatus = ref('all')\r\nconst filterDate = ref([])\r\nconst reviewDialogVisible = ref(false)\r\nconst currentOrder = ref(null)\r\nconst reviewForm = ref({ rating: 5, content: '' })\r\n\r\nconst loadOrders = async () => {\r\n  try {\r\n    const savedOrders = JSON.parse(localStorage.getItem('orders') || '[]')\r\n    orders.value = savedOrders.map(order => ({\r\n      ...order,\r\n      items: order.items || []\r\n    }))\r\n  } catch (error) {\r\n    ElMessage.error('订单加载失败')\r\n  }\r\n}\r\n\r\nconst submitReview = () => {\r\n  if (!reviewForm.value.rating || !reviewForm.value.content) {\r\n    ElMessage.warning('请填写完整的评价信息')\r\n    return\r\n  }\r\n\r\n  const reviews = JSON.parse(localStorage.getItem('reviews') || '[]')\r\n  reviews.push({\r\n    productId: currentOrder.value.items[0].id,\r\n    productName: currentOrder.value.items[0].name,\r\n    orderId: currentOrder.value.orderId,\r\n    ...reviewForm.value,\r\n    date: new Date().toISOString()\r\n  })\r\n  \r\n  localStorage.setItem('reviews', JSON.stringify(reviews))\r\n  \r\n  orders.value = orders.value.map(order => \r\n    order.orderId === currentOrder.value.orderId \r\n      ? { ...order, reviewed: true } \r\n      : order\r\n  )\r\n  \r\n  reviewDialogVisible.value = false\r\n  ElMessage.success('评价提交成功')\r\n}\r\n\r\nonMounted(loadOrders)\r\n</script>\r\n   \r\n\r\n<style scoped>\r\n.user-orders {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n}\r\n\r\n.filter-section {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n\r\n.empty-placeholder {\r\n  margin-top: 50px;\r\n}\r\n\r\n.el-tag {\r\n  margin: 2px 0;\r\n}\r\n\r\n/* 响应式适配 */\r\n@media (max-width: 768px) {\r\n  .filter-section {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .el-table {\r\n    overflow-x: auto;\r\n  }\r\n  .product-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.product-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.product-item:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.product-name {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n}\r\n</style>"],"mappings":";;;AAuGA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,MAAMC,UAAU,GAAG;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,UAAU,GAAG;MACjBJ,OAAO,EAAE,SAAS;MAClBC,OAAO,EAAE,SAAS;MAClBC,SAAS,EAAE,SAAS;MACpBC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAME,MAAM,GAAGT,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMU,YAAY,GAAGV,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMW,UAAU,GAAGX,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMY,mBAAmB,GAAGZ,GAAG,CAAC,KAAK,CAAC;IACtC,MAAMa,YAAY,GAAGb,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMc,UAAU,GAAGd,GAAG,CAAC;MAAEe,MAAM,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IAElD,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;QACtEb,MAAM,CAACc,KAAK,GAAGL,WAAW,CAACM,GAAG,CAACC,KAAK,KAAK;UACvC,GAAGA,KAAK;UACRC,KAAK,EAAED,KAAK,CAACC,KAAK,IAAI;QACxB,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdzB,SAAS,CAACyB,KAAK,CAAC,QAAQ,CAAC;MAC3B;IACF,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI,CAACd,UAAU,CAACS,KAAK,CAACR,MAAM,IAAI,CAACD,UAAU,CAACS,KAAK,CAACP,OAAO,EAAE;QACzDd,SAAS,CAAC2B,OAAO,CAAC,YAAY,CAAC;QAC/B;MACF;MAEA,MAAMC,OAAO,GAAGX,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC;MACnEQ,OAAO,CAACC,IAAI,CAAC;QACXC,SAAS,EAAEnB,YAAY,CAACU,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAACO,EAAE;QACzCC,WAAW,EAAErB,YAAY,CAACU,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAACS,IAAI;QAC7CC,OAAO,EAAEvB,YAAY,CAACU,KAAK,CAACa,OAAO;QACnC,GAAGtB,UAAU,CAACS,KAAK;QACnBc,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAC/B,CAAC,CAAC;MAEFlB,YAAY,CAACmB,OAAO,CAAC,SAAS,EAAErB,IAAI,CAACsB,SAAS,CAACX,OAAO,CAAC,CAAC;MAExDrB,MAAM,CAACc,KAAK,GAAGd,MAAM,CAACc,KAAK,CAACC,GAAG,CAACC,KAAK,IACnCA,KAAK,CAACW,OAAO,KAAKvB,YAAY,CAACU,KAAK,CAACa,OAAO,GACxC;QAAE,GAAGX,KAAK;QAAEiB,QAAQ,EAAE;MAAK,CAAC,GAC5BjB,KACN,CAAC;MAEDb,mBAAmB,CAACW,KAAK,GAAG,KAAK;MACjCrB,SAAS,CAACyC,OAAO,CAAC,QAAQ,CAAC;IAC7B,CAAC;IAED1C,SAAS,CAACgB,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}