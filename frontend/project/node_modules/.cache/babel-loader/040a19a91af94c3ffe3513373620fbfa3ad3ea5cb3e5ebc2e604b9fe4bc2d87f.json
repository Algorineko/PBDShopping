{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-orders\"\n};\nconst _hoisted_2 = {\n  class: \"filter-section\"\n};\nconst _hoisted_3 = {\n  class: \"pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"我的订单\", -1 /* HOISTED */)), _createCommentVNode(\" 订单筛选 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_select, {\n    modelValue: $setup.filterStatus,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filterStatus = $event),\n    placeholder: \"全部状态\",\n    onChange: $setup.loadOrders\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.statusOptions, status => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: status.value,\n        label: status.label,\n        value: status.value\n      }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_date_picker, {\n    modelValue: $setup.filterDate,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filterDate = $event),\n    type: \"daterange\",\n    \"range-separator\": \"至\",\n    \"start-placeholder\": \"开始日期\",\n    \"end-placeholder\": \"结束日期\",\n    onChange: $setup.loadOrders\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" 订单列表 \"), _createVNode(_component_el_table, {\n    data: $setup.orders,\n    border: \"\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"orderId\",\n      label: \"订单号\",\n      width: \"200\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"createTime\",\n      label: \"下单时间\",\n      width: \"180\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"金额\",\n      width: \"120\",\n      align: \"right\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createTextVNode(\"¥\" + _toDisplayString(row.amount.toFixed(2)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"状态\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, {\n        type: $setup.statusType[row.status]\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.statusText[row.status]), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"150\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.viewDetail(row.orderId)\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 详情 \")])),\n        _: 2 /* DYNAMIC */,\n        __: [2]\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), row.status === 'pending' ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"success\",\n        size: \"small\",\n        onClick: $event => $setup.payOrder(row.orderId)\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 付款 \")])),\n        _: 2 /* DYNAMIC */,\n        __: [3]\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 分页 \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_pagination, {\n    background: \"\",\n    layout: \"prev, pager, next\",\n    total: $setup.total,\n    \"page-size\": $setup.pageSize,\n    onCurrentChange: $setup.handlePageChange\n  }, null, 8 /* PROPS */, [\"total\", \"page-size\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_createVNode","_component_el_select","modelValue","$setup","filterStatus","_cache","$event","placeholder","onChange","loadOrders","default","_withCtx","_Fragment","_renderList","statusOptions","status","_createBlock","_component_el_option","key","value","label","_","_component_el_date_picker","filterDate","type","_component_el_table","data","orders","border","style","_component_el_table_column","prop","width","align","row","_createTextVNode","_toDisplayString","amount","toFixed","_component_el_tag","statusType","statusText","_component_el_button","size","onClick","viewDetail","orderId","__","payOrder","_hoisted_3","_component_el_pagination","background","layout","total","pageSize","onCurrentChange","handlePageChange"],"sources":["E:\\实验例子\\project\\src\\components\\UserOrders.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-orders\">\r\n    <h2>我的订单</h2>\r\n    \r\n    <!-- 订单筛选 -->\r\n    <div class=\"filter-section\">\r\n      <el-select v-model=\"filterStatus\" placeholder=\"全部状态\" @change=\"loadOrders\">\r\n        <el-option\r\n          v-for=\"status in statusOptions\"\r\n          :key=\"status.value\"\r\n          :label=\"status.label\"\r\n          :value=\"status.value\"\r\n        />\r\n      </el-select>\r\n      <el-date-picker\r\n        v-model=\"filterDate\"\r\n        type=\"daterange\"\r\n        range-separator=\"至\"\r\n        start-placeholder=\"开始日期\"\r\n        end-placeholder=\"结束日期\"\r\n        @change=\"loadOrders\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 订单列表 -->\r\n    <el-table :data=\"orders\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"orderId\" label=\"订单号\" width=\"200\" />\r\n      <el-table-column prop=\"createTime\" label=\"下单时间\" width=\"180\" />\r\n      <el-table-column label=\"金额\" width=\"120\" align=\"right\">\r\n        <template #default=\"{row}\">¥{{ row.amount.toFixed(2) }}</template>\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\" width=\"120\">\r\n        <template #default=\"{row}\">\r\n          <el-tag :type=\"statusType[row.status]\">\r\n            {{ statusText[row.status] }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"150\">\r\n        <template #default=\"{row}\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"viewDetail(row.orderId)\">\r\n            详情\r\n          </el-button>\r\n          <el-button \r\n            v-if=\"row.status === 'pending'\"\r\n            type=\"success\" \r\n            size=\"small\"\r\n            @click=\"payOrder(row.orderId)\"\r\n          >\r\n            付款\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        background\r\n        layout=\"prev, pager, next\"\r\n        :total=\"total\"\r\n        :page-size=\"pageSize\"\r\n        @current-change=\"handlePageChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst router = useRouter()\r\n\r\n// 订单状态配置\r\nconst statusText = {\r\n  pending: '待付款',\r\n  shipped: '已发货',\r\n  completed: '已完成',\r\n  canceled: '已取消'\r\n}\r\n\r\nconst statusType = {\r\n  pending: 'warning',\r\n  shipped: 'primary',\r\n  completed: 'success',\r\n  canceled: 'info'\r\n}\r\n\r\n// 筛选选项\r\nconst statusOptions = ref([\r\n  { value: 'all', label: '全部状态' },\r\n  { value: 'pending', label: '待付款' },\r\n  { value: 'shipped', label: '已发货' },\r\n  { value: 'completed', label: '已完成' }\r\n])\r\n\r\n// 订单数据\r\nconst orders = ref([])\r\nconst filterStatus = ref('all')\r\nconst filterDate = ref([])\r\nconst total = ref(0)\r\nconst pageSize = ref(10)\r\nconst currentPage = ref(1)\r\n\r\n// 模拟订单数据\r\nconst mockOrders = (page = 1) => {\r\n  const data = []\r\n  const start = (page - 1) * pageSize.value\r\n  for (let i = 0; i < pageSize.value; i++) {\r\n    data.push({\r\n      orderId: `2023100${start + i + 1}`,\r\n      createTime: `2023-10-${String(start + i + 1).padStart(2, '0')} 14:30:00`,\r\n      amount: Math.random() * 500 + 100,\r\n      status: Object.keys(statusText)[Math.floor(Math.random() * 4)]\r\n    })\r\n  }\r\n  return data\r\n}\r\n\r\n// 加载订单\r\nconst loadOrders = async () => {\r\n  // 实际项目应调用API\r\n  orders.value = mockOrders(currentPage.value)\r\n  total.value = 50 // 模拟总条目数\r\n}\r\n\r\n// 查看订单详情\r\nconst viewDetail = (orderId) => {\r\n  router.push(`/buyer/order/${orderId}`)\r\n}\r\n\r\n// 支付订单\r\nconst payOrder = (orderId) => {\r\n  ElMessage.success(`模拟支付订单 ${orderId} 成功`)\r\n  orders.value = orders.value.map(order => \r\n    order.orderId === orderId ? { ...order, status: 'shipped' } : order\r\n  )\r\n}\r\n\r\n// 分页处理\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page\r\n  loadOrders()\r\n}\r\n\r\n// 初始化加载\r\nonMounted(() => {\r\n  loadOrders()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.user-orders {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n}\r\n\r\n.filter-section {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n\r\n.el-tag {\r\n  margin: 2px 0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}