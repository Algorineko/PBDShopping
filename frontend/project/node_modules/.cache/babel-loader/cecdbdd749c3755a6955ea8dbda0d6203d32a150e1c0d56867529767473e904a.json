{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { useCartStore } from '@/stores/cart';\nimport { storeToRefs } from 'pinia';\nimport { ElMessage } from 'element-plus';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'ShoppingCart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const cartStore = useCartStore();\n    const {\n      items: cartItems,\n      selectedItems\n    } = storeToRefs(cartStore);\n    const selectedCount = computed(() => selectedItems.value.size);\n    const selectedTotal = computed(() => cartItems.value.filter(item => selectedItems.value.has(item.id)).reduce((sum, item) => sum + item.price * item.quantity, 0));\n    const checkout = () => {\n      const order = {\n        orderId: `ORDER_${Date.now()}`,\n        items: cartItems.value.filter(item => selectedItems.value.has(item.id)),\n        total: selectedTotal.value,\n        status: 'pending',\n        createTime: new Date().toISOString()\n      };\n      const orders = JSON.parse(localStorage.getItem('orders') || '[]');\n      orders.unshift(order);\n      localStorage.setItem('orders', JSON.stringify(orders));\n      cartStore.clearSelected();\n      ElMessage.success('订单创建成功');\n      router.push('/buyer/user/orders');\n    };\n    const __returned__ = {\n      router,\n      cartStore,\n      cartItems,\n      selectedItems,\n      selectedCount,\n      selectedTotal,\n      checkout,\n      get useCartStore() {\n        return useCartStore;\n      },\n      get storeToRefs() {\n        return storeToRefs;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useCartStore","storeToRefs","ElMessage","useRouter","router","cartStore","items","cartItems","selectedItems","selectedCount","computed","value","size","selectedTotal","filter","item","has","id","reduce","sum","price","quantity","checkout","order","orderId","Date","now","total","status","createTime","toISOString","orders","JSON","parse","localStorage","getItem","unshift","setItem","stringify","clearSelected","success","push"],"sources":["E:/实验例子/project/src/components/ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shopping-cart\">\r\n    <h2>购物车 ({{ cartItems.length }})</h2>\r\n    \r\n    <el-table :data=\"cartItems\" border v-if=\"cartItems.length > 0\">\r\n      <el-table-column label=\"选择\" width=\"60\">\r\n        <template #default=\"{ row }\">\r\n          <el-checkbox \r\n            :model-value=\"selectedItems.has(row.id)\"\r\n            @change=\"toggleSelection(row.id)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"商品\" width=\"300\">\r\n        <template #default=\"{ row }\">\r\n          <router-link :to=\"`/buyer/product/${row.id}`\">\r\n            <el-image :src=\"row.image\" style=\"width:80px;height:80px\"/>\r\n            <span class=\"product-name\">{{ row.name }}</span>\r\n          </router-link>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"单价\" width=\"120\">\r\n        <template #default=\"{ row }\">¥{{ row.price.toFixed(2) }}</template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"数量\" width=\"150\">\r\n        <template #default=\"{ row }\">\r\n          <el-input-number \r\n            v-model=\"row.quantity\" \r\n            :min=\"1\" \r\n            :max=\"99\"\r\n            @change=\"updateQuantity(row)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <el-button type=\"danger\" @click=\"removeItem(row.id)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <div class=\"checkout\" v-if=\"cartItems.length > 0\">\r\n      <div class=\"total\">\r\n        已选 {{ selectedCount }} 件 总计：¥{{ selectedTotal.toFixed(2) }}\r\n      </div>\r\n      <el-button \r\n        type=\"primary\" \r\n        size=\"large\"\r\n        @click=\"checkout\"\r\n        :disabled=\"selectedCount === 0\"\r\n      >\r\n        去结算\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useCartStore } from '@/stores/cart'\r\nimport { storeToRefs } from 'pinia'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst router = useRouter()\r\nconst cartStore = useCartStore()\r\nconst { items: cartItems, selectedItems } = storeToRefs(cartStore)\r\n\r\nconst selectedCount = computed(() => selectedItems.value.size)\r\nconst selectedTotal = computed(() => \r\n  cartItems.value\r\n    .filter(item => selectedItems.value.has(item.id))\r\n    .reduce((sum, item) => sum + item.price * item.quantity, 0)\r\n)\r\n\r\nconst checkout = () => {\r\n  const order = {\r\n    orderId: `ORDER_${Date.now()}`,\r\n    items: cartItems.value.filter(item => selectedItems.value.has(item.id)),\r\n    total: selectedTotal.value,\r\n    status: 'pending',\r\n    createTime: new Date().toISOString()\r\n  }\r\n\r\n  const orders = JSON.parse(localStorage.getItem('orders') || '[]')\r\n  orders.unshift(order)\r\n  localStorage.setItem('orders', JSON.stringify(orders))\r\n\r\n  cartStore.clearSelected()\r\n  ElMessage.success('订单创建成功')\r\n  router.push('/buyer/user/orders')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.product-link {\r\n  color: #606266;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #409eff;\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.checkout {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 30px;\r\n}\r\n\r\n.total {\r\n  font-size: 20px;\r\n  color: #f56c6c;\r\n}\r\n\r\n.empty-tip {\r\n  margin-top: 50px;\r\n  padding: 40px 0;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n</style>"],"mappings":";;;;AA8DA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,MAAM,GAAGD,SAAS,CAAC,CAAC;IAC1B,MAAME,SAAS,GAAGL,YAAY,CAAC,CAAC;IAChC,MAAM;MAAEM,KAAK,EAAEC,SAAS;MAAEC;IAAc,CAAC,GAAGP,WAAW,CAACI,SAAS,CAAC;IAElE,MAAMI,aAAa,GAAGC,QAAQ,CAAC,MAAMF,aAAa,CAACG,KAAK,CAACC,IAAI,CAAC;IAC9D,MAAMC,aAAa,GAAGH,QAAQ,CAAC,MAC7BH,SAAS,CAACI,KAAK,CACZG,MAAM,CAACC,IAAI,IAAIP,aAAa,CAACG,KAAK,CAACK,GAAG,CAACD,IAAI,CAACE,EAAE,CAAC,CAAC,CAChDC,MAAM,CAAC,CAACC,GAAG,EAAEJ,IAAI,KAAKI,GAAG,GAAGJ,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACM,QAAQ,EAAE,CAAC,CAC9D,CAAC;IAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrB,MAAMC,KAAK,GAAG;QACZC,OAAO,EAAE,SAASC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QAC9BpB,KAAK,EAAEC,SAAS,CAACI,KAAK,CAACG,MAAM,CAACC,IAAI,IAAIP,aAAa,CAACG,KAAK,CAACK,GAAG,CAACD,IAAI,CAACE,EAAE,CAAC,CAAC;QACvEU,KAAK,EAAEd,aAAa,CAACF,KAAK;QAC1BiB,MAAM,EAAE,SAAS;QACjBC,UAAU,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC;MACrC,CAAC;MAED,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;MACjEJ,MAAM,CAACK,OAAO,CAACb,KAAK,CAAC;MACrBW,YAAY,CAACG,OAAO,CAAC,QAAQ,EAAEL,IAAI,CAACM,SAAS,CAACP,MAAM,CAAC,CAAC;MAEtD1B,SAAS,CAACkC,aAAa,CAAC,CAAC;MACzBrC,SAAS,CAACsC,OAAO,CAAC,QAAQ,CAAC;MAC3BpC,MAAM,CAACqC,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}