{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { ElMessage, ElLoading } from 'element-plus';\nexport default {\n  __name: 'ProductManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const productFilter = ref({\n      keyword: ''\n    });\n    const products = ref([]);\n    const productDialogVisible = ref(false);\n    const currentProduct = ref({\n      productName: '',\n      categoryId: '',\n      price: 0,\n      description: '',\n      images: []\n    });\n    const isEditing = ref(false);\n    const merchantId = ref(Number(localStorage.getItem('userId')) || 0);\n    const filteredProducts = computed(() => {\n      return (products.value || []).filter(p => (p?.productName?.toLowerCase() || '').includes(productFilter.value.keyword?.toLowerCase() || '')).map(p => ({\n        ...p,\n        price: Number(p.price) || 0\n      }));\n    });\n    const dialogTitle = computed(() => isEditing.value ? '编辑商品' : '新增商品');\n    const showAddDialog = () => {\n      currentProduct.value = {\n        productName: '',\n        categoryId: '',\n        price: 0,\n        description: '',\n        images: []\n      };\n      isEditing.value = false;\n      productDialogVisible.value = true;\n    };\n    const editProduct = product => {\n      if (!product?.productId) {\n        ElMessage.warning('无效的商品数据');\n        return;\n      }\n      currentProduct.value = {\n        ...product,\n        productId: product.productId\n      };\n      isEditing.value = true;\n      productDialogVisible.value = true;\n    };\n    const handleImageChange = file => {\n      if (!file) return;\n      const rawFile = file.raw;\n      if (rawFile) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          currentProduct.value.images.push(e.target.result);\n        };\n        reader.readAsDataURL(rawFile);\n      }\n    };\n    const removeImage = index => {\n      currentProduct.value.images.splice(index, 1);\n    };\n    const saveProduct = async () => {\n      if (!currentProduct.value.productName?.trim()) {\n        ElMessage.error('商品名称不能为空');\n        return;\n      }\n      if (!currentProduct.value.categoryId) {\n        ElMessage.error('分类ID不能为空');\n        return;\n      }\n      if (currentProduct.value.price < 0) {\n        ElMessage.error('价格不能为负数');\n        return;\n      }\n      let loadingInstance = null;\n      try {\n        loadingInstance = ElLoading.service({\n          lock: true,\n          text: '保存中...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n        if (isEditing.value) {\n          // 编辑商品\n          const response = await fetch('http://algorineko.top:8080/api/merchant/product/update', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              productId: currentProduct.value.productId,\n              merchantId: merchantId.value,\n              productName: currentProduct.value.productName,\n              description: currentProduct.value.description || '',\n              price: currentProduct.value.price,\n              categoryId: currentProduct.value.categoryId\n            })\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.text();\n          if (data.includes('成功')) {\n            // 更新本地数据\n            const index = products.value.findIndex(p => p.productId === currentProduct.value.productId);\n            if (index !== -1) {\n              products.value.splice(index, 1, currentProduct.value);\n            }\n            ElMessage.success('商品更新成功');\n            productDialogVisible.value = false;\n          } else {\n            throw new Error(data);\n          }\n        } else {\n          // 新增商品\n          const response = await fetch('http://algorineko.top:8080/api/merchant/product/add', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              merchantId: merchantId.value,\n              productName: currentProduct.value.productName,\n              description: currentProduct.value.description || '',\n              price: currentProduct.value.price,\n              categoryId: currentProduct.value.categoryId,\n              images: currentProduct.value.images\n            })\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          if (data.success) {\n            // 从响应中获取后端生成的商品ID\n            const newProduct = {\n              ...currentProduct.value,\n              productId: data.productId // 使用后端返回的商品ID\n            };\n            products.value.push(newProduct);\n            ElMessage.success('商品添加成功');\n            productDialogVisible.value = false;\n          } else {\n            throw new Error(data.message || '商品添加失败');\n          }\n        }\n      } catch (error) {\n        ElMessage.error(`操作失败: ${error.message}`);\n      } finally {\n        if (loadingInstance) {\n          loadingInstance.close();\n        }\n      }\n    };\n    const deleteProduct = async productId => {\n      if (!productId) {\n        ElMessage.warning('无效的商品ID');\n        return;\n      }\n      let loadingInstance = null;\n      try {\n        loadingInstance = ElLoading.service({\n          lock: true,\n          text: '删除中...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n\n        // 调用删除商品API\n        const response = await fetch(`http://algorineko.top:8080/api/merchant/product/delete?productId=${productId}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.success) {\n          const index = products.value.findIndex(p => p.productId === productId);\n          if (index !== -1) {\n            products.value.splice(index, 1);\n          }\n          ElMessage.success('商品删除成功');\n        } else {\n          throw new Error(data.message || '删除失败');\n        }\n      } catch (error) {\n        ElMessage.error(`删除失败: ${error.message}`);\n      } finally {\n        if (loadingInstance) {\n          loadingInstance.close();\n        }\n      }\n    };\n    const loadProducts = async () => {\n      let loadingInstance = null;\n      try {\n        loadingInstance = ElLoading.service({\n          lock: true,\n          text: '加载商品数据...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n\n        // 调用获取商品列表API\n        const response = await fetch(`http://algorineko.top:8080/api/merchant/product/list?merchantId=${merchantId.value}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.success) {\n          products.value = data.products.map(item => ({\n            productId: item.id,\n            productName: item.name,\n            categoryId: item.categoryId,\n            price: item.price,\n            description: item.description,\n            images: item.images || []\n          }));\n        } else {\n          throw new Error(data.message || '加载商品失败');\n        }\n      } catch (error) {\n        ElMessage.error(`加载商品失败: ${error.message}`);\n        // 使用模拟数据作为后备\n        products.value = [{\n          productId: 1,\n          productName: '示例商品1',\n          categoryId: 1005000,\n          price: 19.9,\n          description: '这是一个示例商品',\n          images: []\n        }];\n      } finally {\n        if (loadingInstance) {\n          loadingInstance.close();\n        }\n      }\n    };\n    onMounted(() => {\n      loadProducts();\n    });\n    const __returned__ = {\n      productFilter,\n      products,\n      productDialogVisible,\n      currentProduct,\n      isEditing,\n      merchantId,\n      filteredProducts,\n      dialogTitle,\n      showAddDialog,\n      editProduct,\n      handleImageChange,\n      removeImage,\n      saveProduct,\n      deleteProduct,\n      loadProducts,\n      ref,\n      computed,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElLoading() {\n        return ElLoading;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","ElMessage","ElLoading","productFilter","keyword","products","productDialogVisible","currentProduct","productName","categoryId","price","description","images","isEditing","merchantId","Number","localStorage","getItem","filteredProducts","value","filter","p","toLowerCase","includes","map","dialogTitle","showAddDialog","editProduct","product","productId","warning","handleImageChange","file","rawFile","raw","reader","FileReader","onload","e","push","target","result","readAsDataURL","removeImage","index","splice","saveProduct","trim","error","loadingInstance","service","lock","text","background","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","findIndex","success","json","newProduct","message","close","deleteProduct","loadProducts","item","id","name"],"sources":["E:/实验例子/project/src/views/business/ProductManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-section\">\r\n    <h2><i class=\"el-icon-goods\"></i> 商品管理</h2>\r\n    <div class=\"table-header\">\r\n      <el-input \r\n        v-model=\"productFilter.keyword\" \r\n        placeholder=\"输入商品名称搜索\" \r\n        style=\"width: 300px\"\r\n        clearable\r\n        prefix-icon=\"el-icon-search\"\r\n      />\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddDialog\">新增商品</el-button>\r\n    </div>\r\n    \r\n    <el-table :data=\"filteredProducts\" border style=\"width: 100%\" class=\"data-table\">\r\n      <el-table-column label=\"商品图片\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-image \r\n            v-if=\"scope.row.images && scope.row.images.length > 0\"\r\n            :src=\"scope.row.images[0]\" \r\n            fit=\"cover\" \r\n            style=\"width: 80px; height: 80px; border-radius: 4px;\"\r\n          >\r\n            <template #error>\r\n              <div class=\"image-slot\">\r\n                <i class=\"el-icon-picture-outline\"></i>\r\n              </div>\r\n            </template>\r\n          </el-image>\r\n          <div v-else class=\"no-image\">无图片</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\" />\r\n      <el-table-column prop=\"productId\" label=\"商品ID\" width=\"120\" />\r\n      <el-table-column prop=\"categoryId\" label=\"分类ID\" width=\"120\" />\r\n      <el-table-column label=\"价格\" width=\"120\" align=\"right\">\r\n        <template #default=\"scope\">\r\n          ¥{{ (scope?.row?.price ?? 0).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template #default=\"scope\">\r\n          <div v-if=\"scope?.row\">\r\n            <el-button \r\n              size=\"small\" \r\n              icon=\"el-icon-edit\"\r\n              @click=\"editProduct(scope.row)\"\r\n            >编辑</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              icon=\"el-icon-delete\"\r\n              @click=\"deleteProduct(scope.row.productId)\"\r\n            >删除</el-button>\r\n          </div>\r\n          <span v-else class=\"error-text\">数据异常</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑商品对话框 -->\r\n    <el-dialog v-model=\"productDialogVisible\" :title=\"dialogTitle\" width=\"800px\">\r\n      <el-form :model=\"currentProduct\" label-width=\"100px\">\r\n        <el-form-item label=\"商品名称\" required>\r\n          <el-input v-model=\"currentProduct.productName\" placeholder=\"请输入商品名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类ID\" required>\r\n          <el-input v-model=\"currentProduct.categoryId\" placeholder=\"请输入分类ID\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" required>\r\n          <el-input-number \r\n            v-model=\"currentProduct.price\" \r\n            :min=\"0\" \r\n            :precision=\"2\" \r\n            :controls=\"false\"\r\n            style=\"width: 200px\"\r\n          />\r\n          <span class=\"input-unit\">元</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"currentProduct.description\" type=\"textarea\" :rows=\"4\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"商品图片\">\r\n          <div class=\"image-upload-container\">\r\n            <div class=\"image-preview-list\">\r\n              <div v-for=\"(image, index) in currentProduct.images\" :key=\"index\" class=\"image-preview-item\">\r\n                <el-image \r\n                  :src=\"image\" \r\n                  fit=\"cover\" \r\n                  class=\"preview-image\"\r\n                />\r\n                <div class=\"image-actions\">\r\n                  <el-button \r\n                    type=\"danger\" \r\n                    icon=\"el-icon-delete\" \r\n                    size=\"small\"\r\n                    circle\r\n                    @click=\"removeImage(index)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <el-upload\r\n              action=\"#\"\r\n              :multiple=\"true\"\r\n              :show-file-list=\"false\"\r\n              :auto-upload=\"false\"\r\n              :on-change=\"handleImageChange\"\r\n              class=\"image-upload-btn\"\r\n            >\r\n              <el-button type=\"primary\" icon=\"el-icon-plus\">添加图片</el-button>\r\n              <div class=\"upload-tip\">支持多图上传</div>\r\n            </el-upload>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"productDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveProduct\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { ElMessage, ElLoading } from 'element-plus'\r\n\r\nconst productFilter = ref({ keyword: '' })\r\nconst products = ref([])\r\nconst productDialogVisible = ref(false)\r\nconst currentProduct = ref({\r\n  productName: '',\r\n  categoryId: '',\r\n  price: 0,\r\n  description: '',\r\n  images: []\r\n})\r\nconst isEditing = ref(false)\r\nconst merchantId = ref(Number(localStorage.getItem('userId')) || 0)\r\n\r\nconst filteredProducts = computed(() => {\r\n  return (products.value || [])\r\n    .filter(p => \r\n      (p?.productName?.toLowerCase() || '').includes(\r\n        (productFilter.value.keyword?.toLowerCase() || '')\r\n      )\r\n    )\r\n    .map(p => ({\r\n      ...p,\r\n      price: Number(p.price) || 0\r\n    }))\r\n})\r\n\r\nconst dialogTitle = computed(() => isEditing.value ? '编辑商品' : '新增商品')\r\n\r\nconst showAddDialog = () => {\r\n  currentProduct.value = {\r\n    productName: '',\r\n    categoryId: '',\r\n    price: 0,\r\n    description: '',\r\n    images: []\r\n  }\r\n  isEditing.value = false\r\n  productDialogVisible.value = true\r\n}\r\n\r\nconst editProduct = (product) => {\r\n  if (!product?.productId) {\r\n    ElMessage.warning('无效的商品数据')\r\n    return\r\n  }\r\n  currentProduct.value = { \r\n    ...product,\r\n    productId: product.productId\r\n  }\r\n  isEditing.value = true\r\n  productDialogVisible.value = true\r\n}\r\n\r\nconst handleImageChange = (file) => {\r\n  if (!file) return\r\n  const rawFile = file.raw\r\n  if (rawFile) {\r\n    const reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      currentProduct.value.images.push(e.target.result)\r\n    }\r\n    reader.readAsDataURL(rawFile)\r\n  }\r\n}\r\n\r\nconst removeImage = (index) => {\r\n  currentProduct.value.images.splice(index, 1)\r\n}\r\n\r\nconst saveProduct = async () => {\r\n  if (!currentProduct.value.productName?.trim()) {\r\n    ElMessage.error('商品名称不能为空')\r\n    return\r\n  }\r\n  if (!currentProduct.value.categoryId) {\r\n    ElMessage.error('分类ID不能为空')\r\n    return\r\n  }\r\n  if (currentProduct.value.price < 0) {\r\n    ElMessage.error('价格不能为负数')\r\n    return\r\n  }\r\n\r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '保存中...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    if (isEditing.value) {\r\n      // 编辑商品\r\n      const response = await fetch('http://algorineko.top:8080/api/merchant/product/update', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          productId: currentProduct.value.productId,\r\n          merchantId: merchantId.value,\r\n          productName: currentProduct.value.productName,\r\n          description: currentProduct.value.description || '',\r\n          price: currentProduct.value.price,\r\n          categoryId: currentProduct.value.categoryId\r\n        })\r\n      })\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`)\r\n      }\r\n      \r\n      const data = await response.text()\r\n      if (data.includes('成功')) {\r\n        // 更新本地数据\r\n        const index = products.value.findIndex(p => p.productId === currentProduct.value.productId)\r\n        if (index !== -1) {\r\n          products.value.splice(index, 1, currentProduct.value)\r\n        }\r\n        ElMessage.success('商品更新成功')\r\n        productDialogVisible.value = false\r\n      } else {\r\n        throw new Error(data)\r\n      }\r\n    } else {\r\n      // 新增商品\r\n      const response = await fetch('http://algorineko.top:8080/api/merchant/product/add', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          merchantId: merchantId.value,\r\n          productName: currentProduct.value.productName,\r\n          description: currentProduct.value.description || '',\r\n          price: currentProduct.value.price,\r\n          categoryId: currentProduct.value.categoryId,\r\n          images: currentProduct.value.images\r\n        })\r\n      })\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`)\r\n      }\r\n      \r\n      const data = await response.json()\r\n      if (data.success) {\r\n        // 从响应中获取后端生成的商品ID\r\n        const newProduct = {\r\n          ...currentProduct.value,\r\n          productId: data.productId // 使用后端返回的商品ID\r\n        }\r\n        products.value.push(newProduct)\r\n        ElMessage.success('商品添加成功')\r\n        productDialogVisible.value = false\r\n      } else {\r\n        throw new Error(data.message || '商品添加失败')\r\n      }\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(`操作失败: ${error.message}`)\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\nconst deleteProduct = async (productId) => {\r\n  if (!productId) {\r\n    ElMessage.warning('无效的商品ID')\r\n    return\r\n  }\r\n  \r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '删除中...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    // 调用删除商品API\r\n    const response = await fetch(`http://algorineko.top:8080/api/merchant/product/delete?productId=${productId}`, {\r\n      method: 'DELETE'\r\n    })\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`)\r\n    }\r\n    \r\n    const data = await response.json()\r\n    if (data.success) {\r\n      const index = products.value.findIndex(p => p.productId === productId)\r\n      if (index !== -1) {\r\n        products.value.splice(index, 1)\r\n      }\r\n      ElMessage.success('商品删除成功')\r\n    } else {\r\n      throw new Error(data.message || '删除失败')\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(`删除失败: ${error.message}`)\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\nconst loadProducts = async () => {\r\n  let loadingInstance = null\r\n  try {\r\n    loadingInstance = ElLoading.service({\r\n      lock: true,\r\n      text: '加载商品数据...',\r\n      background: 'rgba(0, 0, 0, 0.7)'\r\n    })\r\n    \r\n    // 调用获取商品列表API\r\n    const response = await fetch(`http://algorineko.top:8080/api/merchant/product/list?merchantId=${merchantId.value}`)\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`)\r\n    }\r\n    \r\n    const data = await response.json()\r\n    if (data.success) {\r\n      products.value = data.products.map(item => ({\r\n        productId: item.id,\r\n        productName: item.name,\r\n        categoryId: item.categoryId,\r\n        price: item.price,\r\n        description: item.description,\r\n        images: item.images || []\r\n      }))\r\n    } else {\r\n      throw new Error(data.message || '加载商品失败')\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(`加载商品失败: ${error.message}`)\r\n    // 使用模拟数据作为后备\r\n    products.value = [\r\n      {\r\n        productId: 1,\r\n        productName: '示例商品1',\r\n        categoryId: 1005000,\r\n        price: 19.9,\r\n        description: '这是一个示例商品',\r\n        images: []\r\n      }\r\n    ]\r\n  } finally {\r\n    if (loadingInstance) {\r\n      loadingInstance.close()\r\n    }\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadProducts()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式保持不变 */\r\n.product-section h2 {\r\n  margin-top: 0;\r\n  margin-bottom: 25px;\r\n  color: #303133;\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n.product-section h2 i {\r\n  margin-right: 12px;\r\n  font-size: 24px;\r\n  color: #409eff;\r\n}\r\n\r\n.table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.data-table {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n}\r\n\r\n.error-text {\r\n  color: #f56c6c;\r\n  font-size: 12px;\r\n  padding: 4px 8px;\r\n}\r\n\r\n.input-unit {\r\n  margin-left: 10px;\r\n  color: #909399;\r\n}\r\n\r\n.image-upload-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.image-preview-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n}\r\n\r\n.image-preview-item {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  border: 1px dashed #dcdfe6;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.image-preview-item:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.image-actions {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n}\r\n\r\n.image-upload-btn {\r\n  width: 120px;\r\n}\r\n\r\n.upload-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.no-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  border: 1px dashed #dcdfe6;\r\n  border-radius: 4px;\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n.image-slot {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #f5f7fa;\r\n  color: #909399;\r\n  font-size: 30px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}