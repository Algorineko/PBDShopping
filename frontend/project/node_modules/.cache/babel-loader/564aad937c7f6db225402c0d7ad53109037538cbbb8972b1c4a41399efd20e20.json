{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list\"\n};\nconst _hoisted_2 = {\n  class: \"search-bar\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading-section\"\n};\nconst _hoisted_4 = {\n  class: \"category-header\"\n};\nconst _hoisted_5 = {\n  class: \"category-title\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"product-grid\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"image-container\"\n};\nconst _hoisted_9 = {\n  class: \"product-info\"\n};\nconst _hoisted_10 = {\n  class: \"name\"\n};\nconst _hoisted_11 = {\n  class: \"desc\"\n};\nconst _hoisted_12 = {\n  class: \"price-section\"\n};\nconst _hoisted_13 = {\n  class: \"price\"\n};\nconst _hoisted_14 = {\n  class: \"empty-products\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n    modelValue: $setup.searchKeyword,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchKeyword = $event),\n    placeholder: \"请输入商品名称或关键词\",\n    clearable: \"\",\n    onInput: $setup.handleSearch,\n    style: {\n      \"max-width\": \"400px\"\n    }\n  }, {\n    prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode($setup[\"Search\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" 加载状态 \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n    rows: 6,\n    animated: \"\"\n  })])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 分类区块 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredCategories, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"category-section\",\n      key: category.id\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h2\", _hoisted_5, _toDisplayString(category.name), 1 /* TEXT */), category.picture ? (_openBlock(), _createBlock(_component_el_image, {\n      key: 0,\n      src: _ctx.formatImageUrl(category.picture),\n      style: {\n        \"width\": \"120px\",\n        \"height\": \"40px\",\n        \"margin-left\": \"15px\"\n      },\n      fit: \"contain\"\n    }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 商品网格 \"), category.products.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.products, product => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: product.id,\n        class: \"product-card\",\n        onClick: $event => $setup.viewDetail(product.id)\n      }, [_createCommentVNode(\" 商品图片 \"), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_image, {\n        src: $setup.getFirstImage(product.images),\n        class: \"product-image\",\n        style: {\n          \"width\": \"100%\",\n          \"height\": \"200px\"\n        },\n        fit: \"cover\"\n      }, null, 8 /* PROPS */, [\"src\"])]), _createCommentVNode(\" 商品信息 \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h3\", _hoisted_10, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_11, _toDisplayString(product.description || '暂无描述'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, \"¥\" + _toDisplayString(product.price), 1 /* TEXT */), _createCommentVNode(\" 已移除库存显示 \")])])], 8 /* PROPS */, _hoisted_7);\n    }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createCommentVNode(\" 无商品提示 \"), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_empty, {\n      description: \"该分类下暂无商品\"\n    })])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_input","modelValue","$setup","searchKeyword","_cache","$event","placeholder","clearable","onInput","handleSearch","style","prefix","_withCtx","_component_el_icon","default","_","_createCommentVNode","loading","_hoisted_3","_component_el_skeleton","rows","animated","_Fragment","_renderList","filteredCategories","category","id","_hoisted_4","_hoisted_5","_toDisplayString","name","picture","_createBlock","_component_el_image","src","_ctx","formatImageUrl","fit","products","length","_hoisted_6","product","onClick","viewDetail","_hoisted_8","getFirstImage","images","_hoisted_9","_hoisted_10","_hoisted_11","description","_hoisted_12","_hoisted_13","price","_hoisted_7","_hoisted_14","_component_el_empty"],"sources":["E:\\实验例子\\project\\src\\views\\Buyer\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-list\">\r\n    <div class=\"search-bar\">\r\n      <el-input\r\n        v-model=\"searchKeyword\"\r\n        placeholder=\"请输入商品名称或关键词\"\r\n        clearable\r\n        @input=\"handleSearch\"\r\n        style=\"max-width: 400px\"\r\n      >\r\n        <template #prefix>\r\n          <el-icon><Search /></el-icon>\r\n        </template>\r\n      </el-input>\r\n    </div>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-section\">\r\n      <el-skeleton :rows=\"6\" animated />\r\n    </div>\r\n\r\n    <!-- 分类区块 -->\r\n    <template v-else>\r\n      <div \r\n        class=\"category-section\" \r\n        v-for=\"category in filteredCategories\" \r\n        :key=\"category.id\"\r\n      >\r\n        <div class=\"category-header\">\r\n          <h2 class=\"category-title\">{{ category.name }}</h2>\r\n          <el-image \r\n            :src=\"formatImageUrl(category.picture)\" \r\n            style=\"width: 120px; height: 40px; margin-left: 15px\"\r\n            fit=\"contain\"\r\n            v-if=\"category.picture\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 商品网格 -->\r\n        <div class=\"product-grid\" v-if=\"category.products.length > 0\">\r\n          <div \r\n            v-for=\"product in category.products\"\r\n            :key=\"product.id\"\r\n            class=\"product-card\"\r\n            @click=\"viewDetail(product.id)\"\r\n          >\r\n            <!-- 商品图片 -->\r\n            <div class=\"image-container\">\r\n              <el-image \r\n                :src=\"getFirstImage(product.images)\" \r\n                class=\"product-image\"\r\n                style=\"width: 100%; height: 200px;\"\r\n                fit=\"cover\"\r\n              />\r\n            </div>\r\n            \r\n            <!-- 商品信息 -->\r\n            <div class=\"product-info\">\r\n              <h3 class=\"name\">{{ product.name }}</h3>\r\n              <p class=\"desc\">{{ product.description || '暂无描述' }}</p>\r\n              <div class=\"price-section\">\r\n                <span class=\"price\">¥{{ product.price }}</span>\r\n                <!-- 已移除库存显示 -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 无商品提示 -->\r\n        <div v-else class=\"empty-products\">\r\n          <el-empty description=\"该分类下暂无商品\" />\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { Search } from '@element-plus/icons-vue'\r\nimport axios from 'axios'\r\n\r\nconst router = useRouter()\r\n\r\nconst categories = ref([])\r\nconst searchKeyword = ref('')\r\nconst loading = ref(true)\r\n\r\n// 加载分类数据\r\nconst loadCategories = () => {\r\n  const savedCategories = localStorage.getItem('productCategories')\r\n  if (savedCategories) {\r\n    return JSON.parse(savedCategories)\r\n  }\r\n  \r\n  // 默认分类数据\r\n  return [\r\n    { id: \"1005000\", name: \"居家\" },\r\n    { id: \"1005002\", name: \"美食\" },\r\n    { id: \"1010000\", name: \"服饰\" },\r\n    { id: \"1011000\", name: \"母婴\" },\r\n    { id: \"1013001\", name: \"个护\" },\r\n    { id: \"1019000\", name: \"严选\" },\r\n    { id: \"1043000\", name: \"数码\" },\r\n    { id: \"109243029\", name: \"运动\" },\r\n    { id: \"19999999\", name: \"杂项\" }\r\n  ]\r\n}\r\n\r\n// 获取第一张图片\r\nconst getFirstImage = (images) => {\r\n  return images?.length > 0 ? images[0] : '/placeholder-product.jpg'\r\n}\r\n\r\n// 从API获取分类商品\r\nconst fetchCategoryProducts = async (categoryId) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://algorineko.top:8080/api/merchant/product/category/${categoryId}`\r\n    )\r\n    \r\n    // 转换API数据结构以适应前端需求\r\n    return response.data.map(product => ({\r\n      id: product.productId,\r\n      name: product.productName,\r\n      description: product.description,\r\n      price: product.price,\r\n      images: product.images,\r\n      categoryId: String(product.categoryId) // 确保类型一致\r\n    }))\r\n  } catch (error) {\r\n    console.error(`获取分类 ${categoryId} 商品失败:`, error)\r\n    return [] // 出错时返回空数组\r\n  }\r\n}\r\n\r\n// 初始化数据\r\nconst initData = async () => {\r\n  try {\r\n    loading.value = true\r\n    \r\n    // 加载分类\r\n    const categoryList = loadCategories()\r\n    \r\n    // 创建分类映射\r\n    const categoryMap = new Map()\r\n    \r\n    // 初始化所有分类\r\n    categoryList.forEach(category => {\r\n      categoryMap.set(category.id, {\r\n        ...category,\r\n        products: []\r\n      })\r\n    })\r\n    \r\n    // 并发请求所有分类的商品\r\n    const requests = categoryList.map(category => \r\n      fetchCategoryProducts(parseInt(category.id))\r\n    )\r\n    \r\n    const results = await Promise.all(requests)\r\n    \r\n    // 将商品分配到对应分类\r\n    results.forEach((products, index) => {\r\n      const categoryId = categoryList[index].id\r\n      if (categoryMap.has(categoryId)) {\r\n        categoryMap.get(categoryId).products = products\r\n      }\r\n    })\r\n    \r\n    // 确保所有分类都显示\r\n    categories.value = Array.from(categoryMap.values())\r\n    \r\n  } catch (error) {\r\n    console.error('初始化数据失败:', error)\r\n    // 可以在这里添加用户提示\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst filteredCategories = computed(() => {\r\n  const keyword = searchKeyword.value.toLowerCase()\r\n  \r\n  // 没有搜索关键词时显示所有分类\r\n  if (!keyword) return categories.value\r\n  \r\n  // 有搜索关键词时，只显示包含匹配商品的分类\r\n  return categories.value\r\n    .map(category => ({\r\n      ...category,\r\n      products: category.products.filter(product => \r\n        (product.name || '').toLowerCase().includes(keyword) ||\r\n        (product.description || '').toLowerCase().includes(keyword)\r\n      )\r\n    }))\r\n    .filter(category => category.products.length > 0)\r\n})\r\n\r\nconst handleSearch = () => {\r\n  // 搜索逻辑保持不变\r\n}\r\n\r\nconst viewDetail = (productId) => {\r\n  router.push(`/buyer/product/${productId}`)\r\n}\r\n\r\nonMounted(initData)\r\n</script>\r\n\r\n<style scoped>\r\n.product-list {\r\n  padding: 20px;\r\n}\r\n\r\n.category-section {\r\n  margin-bottom: 40px;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.product-card {\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.product-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.image-container {\r\n  width: 100%;\r\n  height: 200px;\r\n  background: #f5f7fa;\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n}\r\n\r\n.product-info {\r\n  padding: 15px;\r\n}\r\n\r\n.name {\r\n  font-size: 16px;\r\n  margin-bottom: 8px;\r\n  color: #333;\r\n}\r\n\r\n.desc {\r\n  font-size: 12px;\r\n  color: #999;\r\n  height: 36px;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.price-section {\r\n  margin-top: 12px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.price {\r\n  font-size: 18px;\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.empty-products {\r\n  padding: 40px 0;\r\n  background: #f9fafc;\r\n  border-radius: 8px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.loading-section {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAY;;EAF3BC,GAAA;EAiBwBD,KAAK,EAAC;;;EAWjBA,KAAK,EAAC;AAAiB;;EACtBA,KAAK,EAAC;AAAgB;;EA7BpCC,GAAA;EAuCaD,KAAK,EAAC;;mBAvCnB;;EA+CiBA,KAAK,EAAC;AAAiB;;EAUvBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAM;;EACbA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAe;;EAClBA,KAAK,EAAC;AAAO;;EAQfA,KAAK,EAAC;AAAgB;;;;;;;uBApExCE,mBAAA,CAyEM,OAzENC,UAyEM,GAxEJC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,YAAA,CAUWC,mBAAA;IAbjBC,UAAA,EAIiBC,MAAA,CAAAC,aAAa;IAJ9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIiBH,MAAA,CAAAC,aAAa,GAAAE,MAAA;IACtBC,WAAW,EAAC,aAAa;IACzBC,SAAS,EAAT,EAAS;IACRC,OAAK,EAAEN,MAAA,CAAAO,YAAY;IACpBC,KAAwB,EAAxB;MAAA;IAAA;;IAEWC,MAAM,EAAAC,QAAA,CACf,MAA6B,CAA7Bb,YAAA,CAA6Bc,kBAAA;MAXvCC,OAAA,EAAAF,QAAA,CAWmB,MAAU,CAAVb,YAAA,CAAUG,MAAA,Y;MAX7Ba,CAAA;;IAAAA,CAAA;uCAgBIC,mBAAA,UAAa,EACFd,MAAA,CAAAe,OAAO,I,cAAlBtB,mBAAA,CAEM,OAFNuB,UAEM,GADJnB,YAAA,CAAkCoB,sBAAA;IAApBC,IAAI,EAAE,CAAC;IAAEC,QAAQ,EAAR;yBAIzB1B,mBAAA,CAmDW2B,SAAA;IAzEf5B,GAAA;EAAA,IAqBIsB,mBAAA,UAAa,G,kBAEXrB,mBAAA,CAiDM2B,SAAA,QAxEZC,WAAA,CAyB2BrB,MAAA,CAAAsB,kBAAkB,EAA9BC,QAAQ;yBAFjB9B,mBAAA,CAiDM;MAhDJF,KAAK,EAAC,kBAAkB;MAEvBC,GAAG,EAAE+B,QAAQ,CAACC;QAEf7B,mBAAA,CAQM,OARN8B,UAQM,GAPJ9B,mBAAA,CAAmD,MAAnD+B,UAAmD,EAAAC,gBAAA,CAArBJ,QAAQ,CAACK,IAAI,kBAKnCL,QAAQ,CAACM,OAAO,I,cAJxBC,YAAA,CAKEC,mBAAA;MAnCZvC,GAAA;MA+BawC,GAAG,EAAEC,IAAA,CAAAC,cAAc,CAACX,QAAQ,CAACM,OAAO;MACrCrB,KAAqD,EAArD;QAAA;QAAA;QAAA;MAAA,CAAqD;MACrD2B,GAAG,EAAC;wCAjChBrB,mBAAA,e,GAsCQA,mBAAA,UAAa,EACmBS,QAAQ,CAACa,QAAQ,CAACC,MAAM,Q,cAAxD5C,mBAAA,CA2BM,OA3BN6C,UA2BM,I,kBA1BJ7C,mBAAA,CAyBM2B,SAAA,QAjEhBC,WAAA,CAyC8BE,QAAQ,CAACa,QAAQ,EAA5BG,OAAO;2BADhB9C,mBAAA,CAyBM;QAvBHD,GAAG,EAAE+C,OAAO,CAACf,EAAE;QAChBjC,KAAK,EAAC,cAAc;QACnBiD,OAAK,EAAArC,MAAA,IAAEH,MAAA,CAAAyC,UAAU,CAACF,OAAO,CAACf,EAAE;UAE7BV,mBAAA,UAAa,EACbnB,mBAAA,CAOM,OAPN+C,UAOM,GANJ7C,YAAA,CAKEkC,mBAAA;QAJCC,GAAG,EAAEhC,MAAA,CAAA2C,aAAa,CAACJ,OAAO,CAACK,MAAM;QAClCrD,KAAK,EAAC,eAAe;QACrBiB,KAAmC,EAAnC;UAAA;UAAA;QAAA,CAAmC;QACnC2B,GAAG,EAAC;0CAIRrB,mBAAA,UAAa,EACbnB,mBAAA,CAOM,OAPNkD,UAOM,GANJlD,mBAAA,CAAwC,MAAxCmD,WAAwC,EAAAnB,gBAAA,CAApBY,OAAO,CAACX,IAAI,kBAChCjC,mBAAA,CAAuD,KAAvDoD,WAAuD,EAAApB,gBAAA,CAApCY,OAAO,CAACS,WAAW,4BACtCrD,mBAAA,CAGM,OAHNsD,WAGM,GAFJtD,mBAAA,CAA+C,QAA/CuD,WAA+C,EAA3B,GAAC,GAAAvB,gBAAA,CAAGY,OAAO,CAACY,KAAK,kBACrCrC,mBAAA,aAAgB,C,qBA9DhCsC,UAAA;uDAqEQ3D,mBAAA,CAEM2B,SAAA;MAvEd5B,GAAA;IAAA,IAoEQsB,mBAAA,WAAc,EACdnB,mBAAA,CAEM,OAFN0D,WAEM,GADJxD,YAAA,CAAmCyD,mBAAA;MAAzBN,WAAW,EAAC;IAAU,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}