{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport authService from '../services/auth';\nexport default {\n  data() {\n    return {\n      registerForm: {\n        userId: '',\n        userName: '',\n        password: '',\n        confirmPassword: '',\n        role: ''\n      }\n    };\n  },\n  methods: {\n    async handleRegister() {\n      // 验证密码一致性\n      if (this.registerForm.password !== this.registerForm.confirmPassword) {\n        alert('两次输入的密码不一致');\n        return;\n      }\n      try {\n        // 调用注册服务\n        const response = await authService.register({\n          userId: this.registerForm.userId,\n          userName: this.registerForm.userName,\n          password: this.registerForm.password,\n          role: this.registerForm.role\n        });\n\n        // 注册成功后提示并跳转到登录页\n        alert('注册成功，请登录');\n        this.$router.push('/login');\n      } catch (error) {\n        // 注册失败提示\n        console.error('注册失败:', error);\n        alert(error.message || '注册失败，请重试');\n      }\n    }\n  }\n};","map":{"version":3,"names":["authService","data","registerForm","userId","userName","password","confirmPassword","role","methods","handleRegister","alert","response","register","$router","push","error","console","message"],"sources":["E:\\实验例子\\project\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>用户注册</h2>\r\n    <form @submit.prevent=\"handleRegister\">\r\n      <div class=\"form-group\">\r\n        <label>用户ID:</label>\r\n        <input type=\"text\" v-model=\"registerForm.userId\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>用户名称:</label>\r\n        <input type=\"text\" v-model=\"registerForm.userName\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>密码:</label>\r\n        <input type=\"password\" v-model=\"registerForm.password\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>确认密码:</label>\r\n        <input type=\"password\" v-model=\"registerForm.confirmPassword\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>身份:</label>\r\n        <select v-model=\"registerForm.role\" required class=\"role-select\">\r\n          <option value=\"\">请选择身份</option>\r\n          <option value=\"business\">商家</option>\r\n          <option value=\"buyer\">买家</option>\r\n          <option value=\"admin\">管理员</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">确认注册</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/auth'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      registerForm: {\r\n        userId: '',\r\n        userName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async handleRegister() {\r\n      // 验证密码一致性\r\n      if (this.registerForm.password !== this.registerForm.confirmPassword) {\r\n        alert('两次输入的密码不一致')\r\n        return\r\n      }\r\n\r\n      try {\r\n        // 调用注册服务\r\n        const response = await authService.register({\r\n          userId: this.registerForm.userId,\r\n          userName: this.registerForm.userName,\r\n          password: this.registerForm.password,\r\n          role: this.registerForm.role\r\n        })\r\n        \r\n        // 注册成功后提示并跳转到登录页\r\n        alert('注册成功，请登录')\r\n        this.$router.push('/login')\r\n      } catch (error) {\r\n        // 注册失败提示\r\n        console.error('注册失败:', error)\r\n        alert(error.message || '注册失败，请重试')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 25px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  background-color: #f8f9fa;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #495057;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  transition: border-color 0.15s;\r\n}\r\n\r\n.form-group input:focus,\r\n.form-group select:focus {\r\n  border-color: #80bdff;\r\n  outline: 0;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.role-select {\r\n  appearance: none;\r\n  background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3E%3C/svg%3E\");\r\n  background-repeat: no-repeat;\r\n  background-position: right 0.75rem center;\r\n  background-size: 16px 12px;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: #28a745;\r\n  color: white;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.15s;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n</style>"],"mappings":";AAmCA,OAAOA,WAAU,MAAO,kBAAiB;AAEzC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE,EAAE;QACnBC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB;MACA,IAAI,IAAI,CAACP,YAAY,CAACG,QAAO,KAAM,IAAI,CAACH,YAAY,CAACI,eAAe,EAAE;QACpEI,KAAK,CAAC,YAAY;QAClB;MACF;MAEA,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMX,WAAW,CAACY,QAAQ,CAAC;UAC1CT,MAAM,EAAE,IAAI,CAACD,YAAY,CAACC,MAAM;UAChCC,QAAQ,EAAE,IAAI,CAACF,YAAY,CAACE,QAAQ;UACpCC,QAAQ,EAAE,IAAI,CAACH,YAAY,CAACG,QAAQ;UACpCE,IAAI,EAAE,IAAI,CAACL,YAAY,CAACK;QAC1B,CAAC;;QAED;QACAG,KAAK,CAAC,UAAU;QAChB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ;MAC5B,EAAE,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK;QAC5BL,KAAK,CAACK,KAAK,CAACE,OAAM,IAAK,UAAU;MACnC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}