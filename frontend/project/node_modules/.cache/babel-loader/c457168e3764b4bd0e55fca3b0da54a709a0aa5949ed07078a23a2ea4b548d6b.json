{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"shopping-cart\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"product-info\"\n};\nconst _hoisted_3 = {\n  key: 2,\n  class: \"checkout\"\n};\nconst _hoisted_4 = {\n  class: \"total\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"购物车 (\" + _toDisplayString($setup.cartItems?.length || 0) + \")\", 1 /* TEXT */), $setup.cartItems?.length > 0 ? (_openBlock(), _createBlock(_component_el_table, {\n    key: 0,\n    data: $setup.cartItems,\n    border: \"\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 选择列 \"), _createVNode(_component_el_table_column, {\n      width: \"50\"\n    }, {\n      header: _withCtx(() => [_createVNode(_component_el_checkbox, {\n        modelValue: $setup.selectAll,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectAll = $event),\n        onChange: $setup.toggleSelectAll\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_checkbox, {\n        modelValue: $setup.selectedItems,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectedItems = $event),\n        label: row.id,\n        onChange: $event => $setup.cartStore.toggleSelection(row.id)\n      }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 商品列 \"), _createVNode(_component_el_table_column, {\n      label: \"商品\",\n      width: \"300\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [row ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_router_link, {\n        to: `/buyer/product/${row.id}`\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_image, {\n          src: row.image || '/placeholder-product.jpg',\n          width: \"80\",\n          style: {\n            \"cursor\": \"pointer\"\n          }\n        }, null, 8 /* PROPS */, [\"src\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createVNode(_component_router_link, {\n        to: `/buyer/product/${row.id}`,\n        class: \"product-link\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.name || '未知商品'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 单价列 \"), _createVNode(_component_el_table_column, {\n      label: \"单价\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createTextVNode(\" ¥\" + _toDisplayString((row.price || 0).toFixed(2)), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 数量列 \"), _createVNode(_component_el_table_column, {\n      label: \"数量\",\n      width: \"150\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_input_number, {\n        modelValue: row.quantity,\n        \"onUpdate:modelValue\": $event => row.quantity = $event,\n        min: 1,\n        max: 99,\n        onChange: $event => $setup.updateQuantity(row)\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 操作列 \"), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"120\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        type: \"danger\",\n        onClick: $event => $setup.removeItem(row?.id)\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 删除 \")])),\n        _: 2 /* DYNAMIC */,\n        __: [2]\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 空购物车提示 \"), _createVNode(_component_el_empty, {\n    description: \"您的购物车还是空的，快去选购商品吧！\",\n    class: \"empty-tip\"\n  })], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 结算区域 \"), $setup.cartItems?.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, \"总计：¥\" + _toDisplayString($setup.selectedTotal.toFixed(2)), 1 /* TEXT */), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"large\",\n    disabled: $setup.selectedItems.length === 0,\n    onClick: $setup.createOrder\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 去结算 (\" + _toDisplayString($setup.selectedItems.length) + \") \", 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"disabled\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","cartItems","length","_createBlock","_component_el_table","data","border","style","default","_withCtx","_createCommentVNode","_createVNode","_component_el_table_column","width","header","_component_el_checkbox","modelValue","selectAll","_cache","$event","onChange","toggleSelectAll","row","selectedItems","label","id","cartStore","toggleSelection","_","_hoisted_2","_component_router_link","to","_component_el_image","src","image","_createTextVNode","name","price","toFixed","_component_el_input_number","quantity","min","max","updateQuantity","_component_el_button","type","onClick","removeItem","__","_Fragment","_component_el_empty","description","_hoisted_3","_hoisted_4","selectedTotal","size","disabled","createOrder"],"sources":["E:\\实验例子\\project\\src\\components\\ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shopping-cart\">\r\n    <h2>购物车 ({{ cartItems?.length || 0 }})</h2>\r\n    \r\n    <el-table \r\n      :data=\"cartItems\"\r\n      v-if=\"cartItems?.length > 0\"\r\n      border\r\n      style=\"width: 100%\"\r\n    >\r\n      <!-- 选择列 -->\r\n      <el-table-column width=\"50\">\r\n        <template #header>\r\n          <el-checkbox \r\n            v-model=\"selectAll\"\r\n            @change=\"toggleSelectAll\"\r\n          />\r\n        </template>\r\n        <template #default=\"{ row }\">\r\n          <el-checkbox \r\n            v-model=\"selectedItems\" \r\n            :label=\"row.id\"\r\n            @change=\"cartStore.toggleSelection(row.id)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 商品列 -->\r\n      <el-table-column label=\"商品\" width=\"300\">\r\n        <template #default=\"{ row }\">\r\n          <div class=\"product-info\" v-if=\"row\">\r\n            <router-link :to=\"`/buyer/product/${row.id}`\">\r\n              <el-image \r\n                :src=\"row.image || '/placeholder-product.jpg'\"\r\n                width=\"80\"\r\n                style=\"cursor: pointer\"\r\n              />\r\n            </router-link>\r\n            <router-link \r\n              :to=\"`/buyer/product/${row.id}`\"\r\n              class=\"product-link\"\r\n            >\r\n              {{ row.name || '未知商品' }}\r\n            </router-link>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 单价列 -->\r\n      <el-table-column label=\"单价\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          ¥{{ (row.price || 0).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 数量列 -->\r\n      <el-table-column label=\"数量\" width=\"150\">\r\n        <template #default=\"{ row }\">\r\n          <el-input-number \r\n            v-model=\"row.quantity\"\r\n            :min=\"1\"\r\n            :max=\"99\"\r\n            @change=\"updateQuantity(row)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 操作列 -->\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"removeItem(row?.id)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 空购物车提示 -->\r\n    <el-empty\r\n      v-else\r\n      description=\"您的购物车还是空的，快去选购商品吧！\"\r\n      class=\"empty-tip\"\r\n    />\r\n\r\n    <!-- 结算区域 -->\r\n    <div class=\"checkout\" v-if=\"cartItems?.length > 0\">\r\n      <div class=\"total\">总计：¥{{ selectedTotal.toFixed(2) }}</div>\r\n      <el-button \r\n        type=\"primary\" \r\n        size=\"large\"\r\n        :disabled=\"selectedItems.length === 0\"\r\n        @click=\"createOrder\"\r\n      >\r\n        去结算 ({{ selectedItems.length }})\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus'\r\nimport { useCartStore } from '@/stores/cart'\r\nimport { storeToRefs } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\n\r\nconst cartStore = useCartStore()\r\nconst { items: cartItems, totalPrice, selectedItems } = storeToRefs(cartStore)\r\n\r\nconst selectAll = ref(false)\r\n\r\nconst selectedTotal = computed(() => {\r\n  return cartItems.value\r\n    .filter(item => selectedItems.value.has(item.id))\r\n    .reduce((sum, item) => sum + (item.price * item.quantity), 0)\r\n})\r\n\r\nconst toggleSelectAll = () => {\r\n  if(selectAll.value) {\r\n    cartItems.value.forEach(item => cartStore.toggleSelection(item.id))\r\n  } else {\r\n    cartStore.clearSelected()\r\n  }\r\n}\r\n\r\nconst updateQuantity = (item) => {\r\n  if (!item?.id) {\r\n    ElMessage.error('无效的商品数据')\r\n    return\r\n  }\r\n  if (item.quantity < 1) {\r\n    cartStore.removeItem(item.id)\r\n    ElMessage.warning('商品已移除')\r\n  }\r\n}\r\n\r\nconst removeItem = (itemId) => {\r\n  if (!itemId) {\r\n    ElMessage.error('无效操作')\r\n    return\r\n  }\r\n  cartStore.removeItem(itemId)\r\n  ElMessage.success('已移除商品')\r\n}\r\n\r\nconst createOrder = () => {\r\n  const selectedProducts = cartItems.value.filter(item => \r\n    selectedItems.value.has(item.id)\r\n  )\r\n  \r\n  if(selectedProducts.length === 0) {\r\n    ElMessage.warning('请选择要结算的商品')\r\n    return\r\n  }\r\n\r\n  const orderId = `DD${Date.now()}`\r\n  const newOrder = {\r\n    orderId,\r\n    createTime: new Date().toLocaleString(),\r\n    items: selectedProducts.map(item => ({\r\n      productId: item.id,\r\n      productName: item.name,\r\n      productImage: item.image,\r\n      price: item.price,\r\n      quantity: item.quantity,\r\n      paid: false,\r\n      reviewed: false\r\n    })),\r\n    status: 'pending',\r\n    total: selectedTotal.value\r\n  }\r\n\r\n  // 保存订单\r\n  const orders = JSON.parse(localStorage.getItem('orders') || '[]')\r\n  orders.push(newOrder)\r\n  localStorage.setItem('orders', JSON.stringify(orders))\r\n\r\n  // 移除已结算商品\r\n  selectedProducts.forEach(item => cartStore.removeItem(item.id))\r\n  cartStore.clearSelected()\r\n  \r\n  ElMessage.success('订单创建成功')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.product-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.product-link {\r\n  color: #606266;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #409eff;\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.checkout {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 30px;\r\n}\r\n\r\n.total {\r\n  font-size: 20px;\r\n  color: #f56c6c;\r\n}\r\n\r\n.empty-tip {\r\n  margin-top: 50px;\r\n  padding: 40px 0;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}