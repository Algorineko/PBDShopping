{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\n\n// 用户信息\n\nexport default {\n  __name: 'UserProfile',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userInfo = ref(JSON.parse(localStorage.getItem('userInfo')) || {});\n\n    // 对话框控制\n    const dialogVisible = ref(false);\n    const editFormRef = ref();\n\n    // 编辑表单数据\n    const editForm = reactive({\n      username: userInfo.value.username,\n      address: userInfo.value.address\n    });\n\n    // 表单验证规则\n    const rules = reactive({\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 20,\n        message: '用户名长度在2到20个字符',\n        trigger: 'blur'\n      }],\n      address: [{\n        required: true,\n        message: '请输入收货地址',\n        trigger: 'blur'\n      }, {\n        max: 100,\n        message: '地址最多100个字符',\n        trigger: 'blur'\n      }]\n    });\n    const showEditDialog = () => {\n      editForm.username = userInfo.value.username;\n      editForm.address = userInfo.value.address;\n      dialogVisible.value = true;\n    };\n    const submitForm = async () => {\n      try {\n        // 表单验证\n        await editFormRef.value.validate();\n\n        // 调用更新接口\n        const response = await axios.put('/api/user/profile', editForm, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.data.code === 200) {\n          // 更新本地存储\n          const updatedUser = {\n            ...userInfo.value,\n            ...editForm\n          };\n          localStorage.setItem('userInfo', JSON.stringify(updatedUser));\n          userInfo.value = updatedUser;\n          ElMessage.success('信息更新成功');\n          dialogVisible.value = false;\n        } else {\n          ElMessage.error(response.data.msg || '更新失败');\n        }\n      } catch (error) {\n        if (error.response) {\n          ElMessage.error(`请求失败：${error.response.data.msg}`);\n        } else {\n          ElMessage.error('网络错误，请稍后重试');\n        }\n      }\n    };\n    const __returned__ = {\n      userInfo,\n      dialogVisible,\n      editFormRef,\n      editForm,\n      rules,\n      showEditDialog,\n      submitForm,\n      ref,\n      reactive,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","ElMessage","axios","userInfo","JSON","parse","localStorage","getItem","dialogVisible","editFormRef","editForm","username","value","address","rules","required","message","trigger","min","max","showEditDialog","submitForm","validate","response","put","headers","Authorization","data","code","updatedUser","setItem","stringify","success","error","msg"],"sources":["E:/实验例子/project/src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <h2>我的信息</h2>\r\n    \r\n    <el-card class=\"info-card\">\r\n      <div class=\"info-item\">\r\n        <label>用户名：</label>\r\n        <span>{{ userInfo.username || '未设置' }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <label>收货地址：</label>\r\n        <span>{{ userInfo.address || '暂无收货地址' }}</span>\r\n      </div>\r\n      <el-button type=\"primary\" @click=\"showEditDialog\">编辑信息</el-button>\r\n    </el-card>\r\n\r\n    <!-- 编辑信息对话框 -->\r\n    <el-dialog v-model=\"dialogVisible\" title=\"编辑个人信息\" width=\"30%\">\r\n      <el-form :model=\"editForm\" :rules=\"rules\" ref=\"editFormRef\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"editForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"收货地址\" prop=\"address\">\r\n          <el-input v-model=\"editForm.address\" type=\"textarea\" :rows=\"3\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">确认修改</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\n// 用户信息\r\nconst userInfo = ref(\r\n  JSON.parse(localStorage.getItem('userInfo')) || {}\r\n)\r\n\r\n// 对话框控制\r\nconst dialogVisible = ref(false)\r\nconst editFormRef = ref()\r\n\r\n// 编辑表单数据\r\nconst editForm = reactive({\r\n  username: userInfo.value.username,\r\n  address: userInfo.value.address\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = reactive({\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n    { min: 2, max: 20, message: '用户名长度在2到20个字符', trigger: 'blur' }\r\n  ],\r\n  address: [\r\n    { required: true, message: '请输入收货地址', trigger: 'blur' },\r\n    { max: 100, message: '地址最多100个字符', trigger: 'blur' }\r\n  ]\r\n})\r\n\r\nconst showEditDialog = () => {\r\n  editForm.username = userInfo.value.username\r\n  editForm.address = userInfo.value.address\r\n  dialogVisible.value = true\r\n}\r\n\r\nconst submitForm = async () => {\r\n  try {\r\n    // 表单验证\r\n    await editFormRef.value.validate()\r\n    \r\n    // 调用更新接口\r\n    const response = await axios.put('/api/user/profile', editForm, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n\r\n    if (response.data.code === 200) {\r\n      // 更新本地存储\r\n      const updatedUser = { ...userInfo.value, ...editForm }\r\n      localStorage.setItem('userInfo', JSON.stringify(updatedUser))\r\n      userInfo.value = updatedUser\r\n      \r\n      ElMessage.success('信息更新成功')\r\n      dialogVisible.value = false\r\n    } else {\r\n      ElMessage.error(response.data.msg || '更新失败')\r\n    }\r\n  } catch (error) {\r\n    if (error.response) {\r\n      ElMessage.error(`请求失败：${error.response.data.msg}`)\r\n    } else {\r\n      ElMessage.error('网络错误，请稍后重试')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.info-card {\r\n  max-width: 600px;\r\n  margin: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.info-item {\r\n  margin: 15px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.info-item label {\r\n  font-weight: bold;\r\n  color: #666;\r\n  margin-right: 10px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>"],"mappings":"AAqCA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,QAAQ,GAAGJ,GAAG,CAClBK,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CACnD,CAAC;;IAED;IACA,MAAMC,aAAa,GAAGT,GAAG,CAAC,KAAK,CAAC;IAChC,MAAMU,WAAW,GAAGV,GAAG,CAAC,CAAC;;IAEzB;IACA,MAAMW,QAAQ,GAAGV,QAAQ,CAAC;MACxBW,QAAQ,EAAER,QAAQ,CAACS,KAAK,CAACD,QAAQ;MACjCE,OAAO,EAAEV,QAAQ,CAACS,KAAK,CAACC;IAC1B,CAAC,CAAC;;IAEF;IACA,MAAMC,KAAK,GAAGd,QAAQ,CAAC;MACrBW,QAAQ,EAAE,CACR;QAAEI,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,eAAe;QAAEC,OAAO,EAAE;MAAO,CAAC,CAC/D;MACDJ,OAAO,EAAE,CACP;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,CAAC,EACvD;QAAEE,GAAG,EAAE,GAAG;QAAEH,OAAO,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO,CAAC;IAExD,CAAC,CAAC;IAEF,MAAMG,cAAc,GAAGA,CAAA,KAAM;MAC3BV,QAAQ,CAACC,QAAQ,GAAGR,QAAQ,CAACS,KAAK,CAACD,QAAQ;MAC3CD,QAAQ,CAACG,OAAO,GAAGV,QAAQ,CAACS,KAAK,CAACC,OAAO;MACzCL,aAAa,CAACI,KAAK,GAAG,IAAI;IAC5B,CAAC;IAED,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMZ,WAAW,CAACG,KAAK,CAACU,QAAQ,CAAC,CAAC;;QAElC;QACA,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,mBAAmB,EAAEd,QAAQ,EAAE;UAC9De,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUpB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,CAAC;QAEF,IAAIgB,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UAC9B;UACA,MAAMC,WAAW,GAAG;YAAE,GAAG1B,QAAQ,CAACS,KAAK;YAAE,GAAGF;UAAS,CAAC;UACtDJ,YAAY,CAACwB,OAAO,CAAC,UAAU,EAAE1B,IAAI,CAAC2B,SAAS,CAACF,WAAW,CAAC,CAAC;UAC7D1B,QAAQ,CAACS,KAAK,GAAGiB,WAAW;UAE5B5B,SAAS,CAAC+B,OAAO,CAAC,QAAQ,CAAC;UAC3BxB,aAAa,CAACI,KAAK,GAAG,KAAK;QAC7B,CAAC,MAAM;UACLX,SAAS,CAACgC,KAAK,CAACV,QAAQ,CAACI,IAAI,CAACO,GAAG,IAAI,MAAM,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACd,IAAIA,KAAK,CAACV,QAAQ,EAAE;UAClBtB,SAAS,CAACgC,KAAK,CAAC,QAAQA,KAAK,CAACV,QAAQ,CAACI,IAAI,CAACO,GAAG,EAAE,CAAC;QACpD,CAAC,MAAM;UACLjC,SAAS,CAACgC,KAAK,CAAC,YAAY,CAAC;QAC/B;MACF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}